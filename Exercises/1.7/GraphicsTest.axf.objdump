
C:/Users/emari/Documents/CPEN 391/git/CPEN391-7B-Module1/Exercises/1.7/GraphicsTest.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
       0:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
      10:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
      20:	40 00 00 00 78 3d 00 00 7c 3d 00 00 80 3d 00 00     @...x=..|=...=..
      30:	84 3d 00 00 74 3d 00 00 88 3d 00 00 8c 3d 00 00     .=..t=...=...=..

00000040 <__cs3_reset>:
      40:	ea000026 	b	e0 <__cs3_start_asm_sim>

00000044 <__cs3_start_c>:
      44:	e59f608c 	ldr	r6, [pc, #140]	; d8 <__cs3_start_c+0x94>
      48:	e3560000 	cmp	r6, #0
      4c:	e92d4080 	push	{r7, lr}
      50:	e2466001 	sub	r6, r6, #1
      54:	0a00001e 	beq	d4 <__cs3_start_c+0x90>
      58:	e59f507c 	ldr	r5, [pc, #124]	; dc <__cs3_start_c+0x98>
      5c:	e3a00000 	mov	r0, #0
      60:	e3a01000 	mov	r1, #0
      64:	e515200c 	ldr	r2, [r5, #-12]
      68:	e515e010 	ldr	lr, [r5, #-16]
      6c:	e5154008 	ldr	r4, [r5, #-8]
      70:	e15e0002 	cmp	lr, r2
      74:	00822004 	addeq	r2, r2, r4
      78:	0a000009 	beq	a4 <__cs3_start_c+0x60>
      7c:	e3540000 	cmp	r4, #0
      80:	0a000007 	beq	a4 <__cs3_start_c+0x60>
      84:	e1a07002 	mov	r7, r2
      88:	e1a0c002 	mov	r12, r2
      8c:	e8be000c 	ldm	lr!, {r2, r3}
      90:	e8ac000c 	stmia	r12!, {r2, r3}
      94:	e067300c 	rsb	r3, r7, r12
      98:	e1540003 	cmp	r4, r3
      9c:	e1a0200c 	mov	r2, r12
      a0:	1afffff9 	bne	8c <__cs3_start_c+0x48>
      a4:	e515e004 	ldr	lr, [r5, #-4]
      a8:	e35e0000 	cmp	lr, #0
      ac:	11a03002 	movne	r3, r2
      b0:	0a000003 	beq	c4 <__cs3_start_c+0x80>
      b4:	e8a30003 	stmia	r3!, {r0, r1}
      b8:	e062c003 	rsb	r12, r2, r3
      bc:	e15e000c 	cmp	lr, r12
      c0:	1afffffb 	bne	b4 <__cs3_start_c+0x70>
      c4:	e2466001 	sub	r6, r6, #1
      c8:	e3760001 	cmn	r6, #1
      cc:	e2855014 	add	r5, r5, #20
      d0:	1affffe3 	bne	64 <__cs3_start_c+0x20>
      d4:	eb000d89 	bl	3700 <__cs3_premain>
      d8:	00000001 	.word	0x00000001
      dc:	00003eb8 	.word	0x00003eb8

000000e0 <__cs3_start_asm_sim>:
      e0:	e28f103c 	add	r1, pc, #60	; 0x3c
      e4:	e3a00016 	mov	r0, #22
      e8:	ef123456 	svc	0x00123456
      ec:	e3500000 	cmp	r0, #0
      f0:	ba000008 	blt	118 <__cs3_region_zero_size_ram+0x18>
      f4:	e59f2028 	ldr	r2, [pc, #40]	; 124 <__cs3_heap_start_ptr>
      f8:	e59fd01c 	ldr	sp, [pc, #28]	; 11c <__cs3_region_zero_size_ram+0x1c>
      fc:	e5920008 	ldr	r0, [r2, #8]
     100:	e3500000 	cmp	r0, #0
     104:	11a0d000 	movne	sp, r0
     108:	e59f1010 	ldr	r1, [pc, #16]	; 120 <__cs3_region_zero_size_ram+0x20>
     10c:	e5920004 	ldr	r0, [r2, #4]
     110:	e3500000 	cmp	r0, #0
     114:	15810000 	strne	r0, [r1]
     118:	eaffffc9 	b	44 <__cs3_start_c>
     11c:	3ffffffc 	.word	0x3ffffffc
     120:	00004700 	.word	0x00004700

00000124 <__cs3_heap_start_ptr>:
     124:	00004808 	.word	0x00004808

00000128 <_start>:
     128:	e51fd000 	ldr	sp, [pc, #-0]	; 130 <_start+0x8>
     12c:	eaffffc4 	b	44 <__cs3_start_c>
     130:	3ffffffc 	.word	0x3ffffffc

00000134 <deregister_tm_clones>:
     134:	e92d4008 	push	{r3, lr}
     138:	e59f002c 	ldr	r0, [pc, #44]	; 16c <deregister_tm_clones+0x38>
     13c:	e59f302c 	ldr	r3, [pc, #44]	; 170 <deregister_tm_clones+0x3c>
     140:	e0603003 	rsb	r3, r0, r3
     144:	e3530006 	cmp	r3, #6
     148:	8a000001 	bhi	154 <deregister_tm_clones+0x20>
     14c:	e8bd4008 	pop	{r3, lr}
     150:	e12fff1e 	bx	lr
     154:	e59f3018 	ldr	r3, [pc, #24]	; 174 <deregister_tm_clones+0x40>
     158:	e3530000 	cmp	r3, #0
     15c:	0afffffa 	beq	14c <deregister_tm_clones+0x18>
     160:	e1a0e00f 	mov	lr, pc
     164:	e12fff13 	bx	r3
     168:	eafffff7 	b	14c <deregister_tm_clones+0x18>
     16c:	00004708 	.word	0x00004708
     170:	0000470b 	.word	0x0000470b
     174:	00000000 	.word	0x00000000

00000178 <register_tm_clones>:
     178:	e92d4008 	push	{r3, lr}
     17c:	e59f0034 	ldr	r0, [pc, #52]	; 1b8 <register_tm_clones+0x40>
     180:	e59f3034 	ldr	r3, [pc, #52]	; 1bc <register_tm_clones+0x44>
     184:	e0603003 	rsb	r3, r0, r3
     188:	e1a03143 	asr	r3, r3, #2
     18c:	e0833fa3 	add	r3, r3, r3, lsr #31
     190:	e1b010c3 	asrs	r1, r3, #1
     194:	1a000001 	bne	1a0 <register_tm_clones+0x28>
     198:	e8bd4008 	pop	{r3, lr}
     19c:	e12fff1e 	bx	lr
     1a0:	e59f2018 	ldr	r2, [pc, #24]	; 1c0 <register_tm_clones+0x48>
     1a4:	e3520000 	cmp	r2, #0
     1a8:	0afffffa 	beq	198 <register_tm_clones+0x20>
     1ac:	e1a0e00f 	mov	lr, pc
     1b0:	e12fff12 	bx	r2
     1b4:	eafffff7 	b	198 <register_tm_clones+0x20>
     1b8:	00004708 	.word	0x00004708
     1bc:	00004708 	.word	0x00004708
     1c0:	00000000 	.word	0x00000000

000001c4 <__do_global_dtors_aux>:
     1c4:	e92d4010 	push	{r4, lr}
     1c8:	e59f402c 	ldr	r4, [pc, #44]	; 1fc <__do_global_dtors_aux+0x38>
     1cc:	e5d43000 	ldrb	r3, [r4]
     1d0:	e3530000 	cmp	r3, #0
     1d4:	1a000006 	bne	1f4 <__do_global_dtors_aux+0x30>
     1d8:	ebffffd5 	bl	134 <deregister_tm_clones>
     1dc:	e59f301c 	ldr	r3, [pc, #28]	; 200 <__do_global_dtors_aux+0x3c>
     1e0:	e3530000 	cmp	r3, #0
     1e4:	159f0018 	ldrne	r0, [pc, #24]	; 204 <__do_global_dtors_aux+0x40>
     1e8:	1320f000 	nopne	{0}
     1ec:	e3a03001 	mov	r3, #1
     1f0:	e5c43000 	strb	r3, [r4]
     1f4:	e8bd4010 	pop	{r4, lr}
     1f8:	e12fff1e 	bx	lr
     1fc:	00004708 	.word	0x00004708
     200:	00000000 	.word	0x00000000
     204:	00003e28 	.word	0x00003e28

00000208 <frame_dummy>:
     208:	e92d4008 	push	{r3, lr}
     20c:	e59f3034 	ldr	r3, [pc, #52]	; 248 <frame_dummy+0x40>
     210:	e3530000 	cmp	r3, #0
     214:	159f0030 	ldrne	r0, [pc, #48]	; 24c <frame_dummy+0x44>
     218:	159f1030 	ldrne	r1, [pc, #48]	; 250 <frame_dummy+0x48>
     21c:	1320f000 	nopne	{0}
     220:	e59f002c 	ldr	r0, [pc, #44]	; 254 <frame_dummy+0x4c>
     224:	e5903000 	ldr	r3, [r0]
     228:	e3530000 	cmp	r3, #0
     22c:	0a000003 	beq	240 <frame_dummy+0x38>
     230:	e59f3020 	ldr	r3, [pc, #32]	; 258 <frame_dummy+0x50>
     234:	e3530000 	cmp	r3, #0
     238:	11a0e00f 	movne	lr, pc
     23c:	112fff13 	bxne	r3
     240:	e8bd4008 	pop	{r3, lr}
     244:	eaffffcb 	b	178 <register_tm_clones>
     248:	00000000 	.word	0x00000000
     24c:	00003e28 	.word	0x00003e28
     250:	0000470c 	.word	0x0000470c
     254:	00003eb8 	.word	0x00003eb8
     258:	00000000 	.word	0x00000000

0000025c <WriteAPixel>:
* Note colour is a byte and represents a palette number (0-255) not a 24 bit RGB value
********************************************************************************************/
void WriteAPixel(int x, int y, int Colour)
{
    // Deal with negative coordinates
    if (x < 0 || y < 0) {
     25c:	e1913000 	orrs	r3, r1, r0
     260:	412fff1e 	bxmi	lr
        return;
    }

	WAIT_FOR_GRAPHICS;				// is graphics ready for new command
     264:	e3a0c000 	mov	r12, #0
     268:	e34fcf21 	movt	r12, #65313	; 0xff21
     26c:	e1dc30b0 	ldrh	r3, [r12]
     270:	e3130001 	tst	r3, #1
     274:	0afffffc 	beq	26c <WriteAPixel+0x10>

	GraphicsX1Reg = x;				// write coords to x1, y1
     278:	e6ff0070 	uxth	r0, r0
     27c:	e3a03000 	mov	r3, #0
     280:	e34f3f21 	movt	r3, #65313	; 0xff21
     284:	e1c300b2 	strh	r0, [r3, #2]
	GraphicsY1Reg = y;
     288:	e6ff1071 	uxth	r1, r1
     28c:	e1c310b4 	strh	r1, [r3, #4]
	GraphicsColourReg = Colour;			// set pixel colour
     290:	e6ff2072 	uxth	r2, r2
     294:	e1c320be 	strh	r2, [r3, #14]
	GraphicsCommandReg = PutAPixel;			// give graphics "write pixel" command
     298:	e3a0200a 	mov	r2, #10
     29c:	e1c320b0 	strh	r2, [r3]
     2a0:	e12fff1e 	bx	lr

000002a4 <ReadAPixel>:
* Note returned colour is a byte and represents a palette number (0-255) not a 24 bit RGB value
*********************************************************************************************/

int ReadAPixel(int x, int y)
{
	WAIT_FOR_GRAPHICS;			// is graphics ready for new command
     2a4:	e3a02000 	mov	r2, #0
     2a8:	e34f2f21 	movt	r2, #65313	; 0xff21
     2ac:	e1d230b0 	ldrh	r3, [r2]
     2b0:	e3130001 	tst	r3, #1
     2b4:	0afffffc 	beq	2ac <ReadAPixel+0x8>

	GraphicsX1Reg = x;			// write coords to x1, y1
     2b8:	e6ff0070 	uxth	r0, r0
     2bc:	e3a03000 	mov	r3, #0
     2c0:	e34f3f21 	movt	r3, #65313	; 0xff21
     2c4:	e1c300b2 	strh	r0, [r3, #2]
	GraphicsY1Reg = y;
     2c8:	e6ff1071 	uxth	r1, r1
     2cc:	e1c310b4 	strh	r1, [r3, #4]
	GraphicsCommandReg = GetAPixel;		// give graphics a "get pixel" command
     2d0:	e3a0200b 	mov	r2, #11
     2d4:	e1c320b0 	strh	r2, [r3]

	WAIT_FOR_GRAPHICS;			// is graphics done reading pixel
     2d8:	e3a02000 	mov	r2, #0
     2dc:	e34f2f21 	movt	r2, #65313	; 0xff21
     2e0:	e1d230b0 	ldrh	r3, [r2]
     2e4:	e3130001 	tst	r3, #1
     2e8:	0afffffc 	beq	2e0 <ReadAPixel+0x3c>
	return (int)(GraphicsColourReg) ;	// return the palette number (colour)
     2ec:	e3a03000 	mov	r3, #0
     2f0:	e34f3f21 	movt	r3, #65313	; 0xff21
     2f4:	e1d300be 	ldrh	r0, [r3, #14]
}
     2f8:	e12fff1e 	bx	lr

000002fc <ProgramPalette>:
**
************************************************************************************/

void ProgramPalette(int PaletteNumber, int RGB)
{
    WAIT_FOR_GRAPHICS;
     2fc:	e3a02000 	mov	r2, #0
     300:	e34f2f21 	movt	r2, #65313	; 0xff21
     304:	e1d230b0 	ldrh	r3, [r2]
     308:	e3130001 	tst	r3, #1
     30c:	0afffffc 	beq	304 <ProgramPalette+0x8>
    GraphicsColourReg = PaletteNumber;
     310:	e6ff0070 	uxth	r0, r0
     314:	e3a03000 	mov	r3, #0
     318:	e34f3f21 	movt	r3, #65313	; 0xff21
     31c:	e1c300be 	strh	r0, [r3, #14]
    GraphicsX1Reg = RGB >> 16   ;        // program red value in ls.8 bit of X1 reg
     320:	e1a02821 	lsr	r2, r1, #16
     324:	e1c320b2 	strh	r2, [r3, #2]
    GraphicsY1Reg = RGB ;                // program green and blue into ls 16 bit of Y1 reg
     328:	e6ff1071 	uxth	r1, r1
     32c:	e1c310b4 	strh	r1, [r3, #4]
    GraphicsCommandReg = ProgramPaletteColour; // issue command
     330:	e3a02010 	mov	r2, #16
     334:	e1c320b0 	strh	r2, [r3]
     338:	e12fff1e 	bx	lr

0000033c <HLine>:
}

// Draw a horizontal line from (x1,y1) to (x1+length-1, y1) of colour Colour
void HLine(int x1, int y1, int length, int Colour)
{
     33c:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
	int x2 = x1 + length; // We don't write to coordinate (x2,y1), but use it as a stopping point instead
     340:	e0802002 	add	r2, r0, r2

    WAIT_FOR_GRAPHICS;              // is graphics ready for new command
     344:	e3a04000 	mov	r4, #0
     348:	e34f4f21 	movt	r4, #65313	; 0xff21
     34c:	e1d4c0b0 	ldrh	r12, [r4]
     350:	e31c0001 	tst	r12, #1
     354:	0afffffc 	beq	34c <HLine+0x10>

    GraphicsX1Reg = x1;              // write coords to x1, y1, and x2, y2
     358:	e6ff0070 	uxth	r0, r0
     35c:	e3a0c000 	mov	r12, #0
     360:	e34fcf21 	movt	r12, #65313	; 0xff21
     364:	e1cc00b2 	strh	r0, [r12, #2]
    GraphicsY1Reg = y1;
     368:	e6ff1071 	uxth	r1, r1
     36c:	e1cc10b4 	strh	r1, [r12, #4]
    GraphicsX2Reg = x2;
     370:	e6ff2072 	uxth	r2, r2
     374:	e1cc20b6 	strh	r2, [r12, #6]
    GraphicsY2Reg = y1;
     378:	e1cc10b8 	strh	r1, [r12, #8]
    GraphicsColourReg = Colour;         // set pixel colour
     37c:	e6ff3073 	uxth	r3, r3
     380:	e1cc30be 	strh	r3, [r12, #14]
    GraphicsCommandReg = DrawHLine;         // give graphics "draw horizontal line" command
     384:	e3a03001 	mov	r3, #1
     388:	e1cc30b0 	strh	r3, [r12]
}
     38c:	e8bd0010 	ldmfd	sp!, {r4}
     390:	e12fff1e 	bx	lr

00000394 <VLine>:

// Draw a vertical line from (x1,y1) to (x1, y1+length-1) of colour Colour
void VLine(int x1, int y1, int length, int Colour)
{
     394:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    int y2 = y1 + length; // We don't write to coordinate (x1,y2), but use it as a stopping point instead
     398:	e0812002 	add	r2, r1, r2

    WAIT_FOR_GRAPHICS;              // is graphics ready for new command
     39c:	e3a04000 	mov	r4, #0
     3a0:	e34f4f21 	movt	r4, #65313	; 0xff21
     3a4:	e1d4c0b0 	ldrh	r12, [r4]
     3a8:	e31c0001 	tst	r12, #1
     3ac:	0afffffc 	beq	3a4 <VLine+0x10>

    GraphicsX1Reg = x1;              // write coords to x1, y1, and x2, y2
     3b0:	e6ff0070 	uxth	r0, r0
     3b4:	e3a0c000 	mov	r12, #0
     3b8:	e34fcf21 	movt	r12, #65313	; 0xff21
     3bc:	e1cc00b2 	strh	r0, [r12, #2]
    GraphicsY1Reg = y1;
     3c0:	e6ff1071 	uxth	r1, r1
     3c4:	e1cc10b4 	strh	r1, [r12, #4]
    GraphicsX2Reg = x1;
     3c8:	e1cc00b6 	strh	r0, [r12, #6]
    GraphicsY2Reg = y2;
     3cc:	e6ff2072 	uxth	r2, r2
     3d0:	e1cc20b8 	strh	r2, [r12, #8]
    GraphicsColourReg = Colour;         // set pixel colour
     3d4:	e6ff3073 	uxth	r3, r3
     3d8:	e1cc30be 	strh	r3, [r12, #14]
    GraphicsCommandReg = DrawVLine;         // give graphics "draw vertical line" command
     3dc:	e3a03002 	mov	r3, #2
     3e0:	e1cc30b0 	strh	r3, [r12]
}
     3e4:	e8bd0010 	ldmfd	sp!, {r4}
     3e8:	e12fff1e 	bx	lr

000003ec <Line>:

// Draw a line from (x1,y1) to (x2,y2) of colour Colour
void Line(int x1, int y1, int x2, int y2, int Colour)
{
     3ec:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    WAIT_FOR_GRAPHICS;              // is graphics ready for new command
     3f0:	e3a04000 	mov	r4, #0
     3f4:	e34f4f21 	movt	r4, #65313	; 0xff21
     3f8:	e1d4c0b0 	ldrh	r12, [r4]
     3fc:	e31c0001 	tst	r12, #1
     400:	0afffffc 	beq	3f8 <Line+0xc>

    GraphicsX1Reg = x1;              // write coords to x1, y1, and x2, y2
     404:	e6ff0070 	uxth	r0, r0
     408:	e3a0c000 	mov	r12, #0
     40c:	e34fcf21 	movt	r12, #65313	; 0xff21
     410:	e1cc00b2 	strh	r0, [r12, #2]
    GraphicsY1Reg = y1;
     414:	e6ff1071 	uxth	r1, r1
     418:	e1cc10b4 	strh	r1, [r12, #4]
    GraphicsX2Reg = x2;
     41c:	e6ff2072 	uxth	r2, r2
     420:	e1cc20b6 	strh	r2, [r12, #6]
    GraphicsY2Reg = y2;
     424:	e6ff3073 	uxth	r3, r3
     428:	e1cc30b8 	strh	r3, [r12, #8]
    GraphicsColourReg = Colour;         // set pixel colour
     42c:	e1dd30b4 	ldrh	r3, [sp, #4]
     430:	e1cc30be 	strh	r3, [r12, #14]
    GraphicsCommandReg = DrawLine;         // give graphics "draw line" command
     434:	e3a03003 	mov	r3, #3
     438:	e1cc30b0 	strh	r3, [r12]
}
     43c:	e8bd0010 	ldmfd	sp!, {r4}
     440:	e12fff1e 	bx	lr

00000444 <Triangle>:

// Draw a triangle of colour Colour that connects points (x1,y1), (x2,y2), and (x3, y3)
void Triangle(int x1, int y1, int x2, int y2, int x3, int y3, int Colour)
{
     444:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, r10, lr}
     448:	e24dd008 	sub	sp, sp, #8
     44c:	e1a08000 	mov	r8, r0
     450:	e1a07001 	mov	r7, r1
     454:	e1a09002 	mov	r9, r2
     458:	e1a0a003 	mov	r10, r3
     45c:	e59d6028 	ldr	r6, [sp, #40]	; 0x28
     460:	e59d502c 	ldr	r5, [sp, #44]	; 0x2c
     464:	e59d4030 	ldr	r4, [sp, #48]	; 0x30
    Line(x1, y1, x2, y2, Colour);
     468:	e58d4000 	str	r4, [sp]
     46c:	ebffffde 	bl	3ec <Line>
    Line(x2, y2, x3, y3, Colour);
     470:	e58d4000 	str	r4, [sp]
     474:	e1a00009 	mov	r0, r9
     478:	e1a0100a 	mov	r1, r10
     47c:	e1a02006 	mov	r2, r6
     480:	e1a03005 	mov	r3, r5
     484:	ebffffd8 	bl	3ec <Line>
    Line(x3, y3, x1, y1, Colour);
     488:	e58d4000 	str	r4, [sp]
     48c:	e1a00006 	mov	r0, r6
     490:	e1a01005 	mov	r1, r5
     494:	e1a02008 	mov	r2, r8
     498:	e1a03007 	mov	r3, r7
     49c:	ebffffd2 	bl	3ec <Line>
}
     4a0:	e28dd008 	add	sp, sp, #8
     4a4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, r10, pc}

000004a8 <Rectangle>:

// Draw a rectangle of colour Colour with a top left coordinate of (x1,y1) that is width pixels wide and height pixels tall
// The rectangle will be empty instead of filled
void Rectangle(int x1, int y1, int width, int height, int Colour)
{
     4a8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     4ac:	e1a07000 	mov	r7, r0
     4b0:	e1a06001 	mov	r6, r1
     4b4:	e1a08002 	mov	r8, r2
     4b8:	e1a05003 	mov	r5, r3
     4bc:	e59d4018 	ldr	r4, [sp, #24]
    HLine(x1, y1, width, Colour);
     4c0:	e1a03004 	mov	r3, r4
     4c4:	ebffff9c 	bl	33c <HLine>
    HLine(x1, y1+height-1, width, Colour);
     4c8:	e0861005 	add	r1, r6, r5
     4cc:	e1a00007 	mov	r0, r7
     4d0:	e2411001 	sub	r1, r1, #1
     4d4:	e1a02008 	mov	r2, r8
     4d8:	e1a03004 	mov	r3, r4
     4dc:	ebffff96 	bl	33c <HLine>
    VLine(x1, y1, height, Colour);
     4e0:	e1a00007 	mov	r0, r7
     4e4:	e1a01006 	mov	r1, r6
     4e8:	e1a02005 	mov	r2, r5
     4ec:	e1a03004 	mov	r3, r4
     4f0:	ebffffa7 	bl	394 <VLine>
    VLine(x1+width-1, y1, height, Colour);
     4f4:	e0870008 	add	r0, r7, r8
     4f8:	e2400001 	sub	r0, r0, #1
     4fc:	e1a01006 	mov	r1, r6
     500:	e1a02005 	mov	r2, r5
     504:	e1a03004 	mov	r3, r4
     508:	ebffffa1 	bl	394 <VLine>
     50c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00000510 <FilledRectangle>:
}

// Draw a rectangle of colour Colour with a top left coordinate of (x1,y1) that is width pixels wide and height pixels tall
// The rectangle will be filled, instead of being empty
void FilledRectangle(int x1, int y1, int width, int height, int Colour)
{
     510:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     514:	e1a06000 	mov	r6, r0
     518:	e1a07002 	mov	r7, r2
     51c:	e59d8018 	ldr	r8, [sp, #24]
    int i;
    for(i=y1; i < y1+height; i++) {
     520:	e0815003 	add	r5, r1, r3
     524:	e1510005 	cmp	r1, r5
     528:	a8bd81f0 	popge	{r4, r5, r6, r7, r8, pc}
     52c:	e1a04001 	mov	r4, r1
        HLine(x1, i, width, Colour);
     530:	e1a00006 	mov	r0, r6
     534:	e1a01004 	mov	r1, r4
     538:	e1a02007 	mov	r2, r7
     53c:	e1a03008 	mov	r3, r8
     540:	ebffff7d 	bl	33c <HLine>
// Draw a rectangle of colour Colour with a top left coordinate of (x1,y1) that is width pixels wide and height pixels tall
// The rectangle will be filled, instead of being empty
void FilledRectangle(int x1, int y1, int width, int height, int Colour)
{
    int i;
    for(i=y1; i < y1+height; i++) {
     544:	e2844001 	add	r4, r4, #1
     548:	e1540005 	cmp	r4, r5
     54c:	bafffff7 	blt	530 <FilledRectangle+0x20>
     550:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00000554 <FilledRectangleWithBorder>:

// Draw a rectangle with a top left coordinate of (x1,y1) that is width pixels wide and height pixels tall
// The rectangle will be filled with the colour Colour, instead of being empty
// The rectangle will have a border of width borderWidth and the border will have a colour of BorderColour
void FilledRectangleWithBorder(int x1, int y1, int width, int height, int borderWidth, int FillColour, int BorderColour)
{
     554:	e92d45f0 	push	{r4, r5, r6, r7, r8, r10, lr}
     558:	e24dd00c 	sub	sp, sp, #12
     55c:	e1a07000 	mov	r7, r0
     560:	e1a06001 	mov	r6, r1
     564:	e1a0a002 	mov	r10, r2
     568:	e1a05003 	mov	r5, r3
     56c:	e59d4028 	ldr	r4, [sp, #40]	; 0x28
     570:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
    // Draw Border
    FilledRectangle(x1, y1, width, borderWidth, BorderColour); //Top
     574:	e58d8000 	str	r8, [sp]
     578:	e1a03004 	mov	r3, r4
     57c:	ebffffe3 	bl	510 <FilledRectangle>
    FilledRectangle(x1, y1+height-borderWidth, width, borderWidth, BorderColour); //Bottom
     580:	e0861005 	add	r1, r6, r5
     584:	e58d8000 	str	r8, [sp]
     588:	e1a00007 	mov	r0, r7
     58c:	e0641001 	rsb	r1, r4, r1
     590:	e1a0200a 	mov	r2, r10
     594:	e1a03004 	mov	r3, r4
     598:	ebffffdc 	bl	510 <FilledRectangle>
    FilledRectangle(x1, y1, borderWidth, height, BorderColour); //Left
     59c:	e58d8000 	str	r8, [sp]
     5a0:	e1a00007 	mov	r0, r7
     5a4:	e1a01006 	mov	r1, r6
     5a8:	e1a02004 	mov	r2, r4
     5ac:	e1a03005 	mov	r3, r5
     5b0:	ebffffd6 	bl	510 <FilledRectangle>
    FilledRectangle(x1+width-borderWidth, y1, borderWidth, height, BorderColour); //Right
     5b4:	e087000a 	add	r0, r7, r10
     5b8:	e58d8000 	str	r8, [sp]
     5bc:	e0640000 	rsb	r0, r4, r0
     5c0:	e1a01006 	mov	r1, r6
     5c4:	e1a02004 	mov	r2, r4
     5c8:	e1a03005 	mov	r3, r5
     5cc:	ebffffcf 	bl	510 <FilledRectangle>

    // Fill in
    FilledRectangle(x1+borderWidth, y1+borderWidth, width-2*borderWidth, height-2*borderWidth, FillColour);
     5d0:	e0643f84 	rsb	r3, r4, r4, lsl #31
     5d4:	e1a03083 	lsl	r3, r3, #1
     5d8:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
     5dc:	e58d2000 	str	r2, [sp]
     5e0:	e0870004 	add	r0, r7, r4
     5e4:	e0861004 	add	r1, r6, r4
     5e8:	e083200a 	add	r2, r3, r10
     5ec:	e0853003 	add	r3, r5, r3
     5f0:	ebffffc6 	bl	510 <FilledRectangle>
}
     5f4:	e28dd00c 	add	sp, sp, #12
     5f8:	e8bd85f0 	pop	{r4, r5, r6, r7, r8, r10, pc}

000005fc <Circle>:

// Draws a circle centered at centreX and centreY
void Circle(int centreX, int centreY, int radius, int Colour)
{
     5fc:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    WAIT_FOR_GRAPHICS;              // is graphics ready for new command
     600:	e3a04000 	mov	r4, #0
     604:	e34f4f21 	movt	r4, #65313	; 0xff21
     608:	e1d4c0b0 	ldrh	r12, [r4]
     60c:	e31c0001 	tst	r12, #1
     610:	0afffffc 	beq	608 <Circle+0xc>

    GraphicsX1Reg = centreX;              // write coords to x1, y1
     614:	e6ff0070 	uxth	r0, r0
     618:	e3a0c000 	mov	r12, #0
     61c:	e34fcf21 	movt	r12, #65313	; 0xff21
     620:	e1cc00b2 	strh	r0, [r12, #2]
    GraphicsY1Reg = centreY;
     624:	e6ff1071 	uxth	r1, r1
     628:	e1cc10b4 	strh	r1, [r12, #4]
    GraphicsX2Reg = radius;             // write radius
     62c:	e6ff2072 	uxth	r2, r2
     630:	e1cc20b6 	strh	r2, [r12, #6]
    GraphicsColourReg = Colour;         // set pixel colour
     634:	e6ff3073 	uxth	r3, r3
     638:	e1cc30be 	strh	r3, [r12, #14]
    GraphicsCommandReg = DrawCircle;         // give graphics "draw line" command
     63c:	e3a03011 	mov	r3, #17
     640:	e1cc30b0 	strh	r3, [r12]
}
     644:	e8bd0010 	ldmfd	sp!, {r4}
     648:	e12fff1e 	bx	lr

0000064c <FilledCircle>:

void FilledCircle(int centreX, int centreY, int radius, int Colour)
{
     64c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     650:	e1a05000 	mov	r5, r0
     654:	e1a06001 	mov	r6, r1
     658:	e1a08003 	mov	r8, r3
    int i;
    for(i = 1; i <= radius; i++) {
     65c:	e2527000 	subs	r7, r2, #0
     660:	d8bd81f0 	pople	{r4, r5, r6, r7, r8, pc}
     664:	e3a04001 	mov	r4, #1
        Circle(centreX, centreY, i, Colour);
     668:	e1a00005 	mov	r0, r5
     66c:	e1a01006 	mov	r1, r6
     670:	e1a02004 	mov	r2, r4
     674:	e1a03008 	mov	r3, r8
     678:	ebffffdf 	bl	5fc <Circle>
}

void FilledCircle(int centreX, int centreY, int radius, int Colour)
{
    int i;
    for(i = 1; i <= radius; i++) {
     67c:	e2844001 	add	r4, r4, #1
     680:	e1570004 	cmp	r7, r4
     684:	aafffff7 	bge	668 <FilledCircle+0x1c>
     688:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

0000068c <DrawRandomShape>:
        Circle(centreX, centreY, i, Colour);
    }
}

void DrawRandomShape(void) {
     68c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
     690:	e24dd00c 	sub	sp, sp, #12
    int randomShape = rand() % 9; // 9 shapes in total
     694:	eb000117 	bl	af8 <rand>
     698:	e3084e39 	movw	r4, #36409	; 0x8e39
     69c:	e34348e3 	movt	r4, #14563	; 0x38e3
     6a0:	e0c41094 	smull	r1, r4, r4, r0
     6a4:	e1a03fc0 	asr	r3, r0, #31
     6a8:	e06340c4 	rsb	r4, r3, r4, asr #1
     6ac:	e0844184 	add	r4, r4, r4, lsl #3
     6b0:	e0644000 	rsb	r4, r4, r0

    int x1 = rand()%WIDTH;
     6b4:	eb00010f 	bl	af8 <rand>
     6b8:	e308651f 	movw	r6, #34079	; 0x851f
     6bc:	e34561eb 	movt	r6, #20971	; 0x51eb
     6c0:	e0c63096 	smull	r3, r6, r6, r0
     6c4:	e1a03fc0 	asr	r3, r0, #31
     6c8:	e0636446 	rsb	r6, r3, r6, asr #8
     6cc:	e3a03e32 	mov	r3, #800	; 0x320
     6d0:	e0660693 	mls	r6, r3, r6, r0
    int y1 = rand()%HEIGHT;
     6d4:	eb000107 	bl	af8 <rand>
     6d8:	e3085889 	movw	r5, #34953	; 0x8889
     6dc:	e3485888 	movt	r5, #34952	; 0x8888
     6e0:	e0c51095 	smull	r1, r5, r5, r0
     6e4:	e0855000 	add	r5, r5, r0
     6e8:	e1a03fc0 	asr	r3, r0, #31
     6ec:	e0635445 	rsb	r5, r3, r5, asr #8
     6f0:	e0655205 	rsb	r5, r5, r5, lsl #4
     6f4:	e0405285 	sub	r5, r0, r5, lsl #5
    int colour = rand()%8; // 8 colours in total
     6f8:	eb0000fe 	bl	af8 <rand>
     6fc:	e1a03fc0 	asr	r3, r0, #31
     700:	e1a03ea3 	lsr	r3, r3, #29
     704:	e0800003 	add	r0, r0, r3
     708:	e2000007 	and	r0, r0, #7
     70c:	e0637000 	rsb	r7, r3, r0

    if (randomShape == 0) { // Horizontal Line 
     710:	e3540000 	cmp	r4, #0
     714:	1a000008 	bne	73c <DrawRandomShape+0xb0>
        int length = rand()%(WIDTH - x1);
     718:	eb0000f6 	bl	af8 <rand>
     71c:	e2661e32 	rsb	r1, r6, #800	; 0x320
     720:	eb0000a1 	bl	9ac <__aeabi_idivmod>
     724:	e1a02001 	mov	r2, r1
        HLine(x1, y1, length, colour);
     728:	e1a00006 	mov	r0, r6
     72c:	e1a01005 	mov	r1, r5
     730:	e1a03007 	mov	r3, r7
     734:	ebffff00 	bl	33c <HLine>
     738:	ea000033 	b	80c <DrawRandomShape+0x180>
    } else if (randomShape == 1) { // Vertical Line
     73c:	e3540001 	cmp	r4, #1
     740:	1a000008 	bne	768 <DrawRandomShape+0xdc>
        int length = rand()%(HEIGHT-y1);
     744:	eb0000eb 	bl	af8 <rand>
     748:	e2651e1e 	rsb	r1, r5, #480	; 0x1e0
     74c:	eb000096 	bl	9ac <__aeabi_idivmod>
     750:	e1a02001 	mov	r2, r1
        VLine(x1, y1, length, colour);
     754:	e1a00006 	mov	r0, r6
     758:	e1a01005 	mov	r1, r5
     75c:	e1a03007 	mov	r3, r7
     760:	ebffff0b 	bl	394 <VLine>
     764:	ea000028 	b	80c <DrawRandomShape+0x180>
    } else if (randomShape == 2) { // Line
     768:	e3540002 	cmp	r4, #2
     76c:	1a000017 	bne	7d0 <DrawRandomShape+0x144>
        int x2 = rand()%WIDTH;
     770:	eb0000e0 	bl	af8 <rand>
     774:	e1a04000 	mov	r4, r0
        int y2 = rand()%HEIGHT;
     778:	eb0000de 	bl	af8 <rand>
     77c:	e1a03000 	mov	r3, r0
        HLine(x1, y1, length, colour);
    } else if (randomShape == 1) { // Vertical Line
        int length = rand()%(HEIGHT-y1);
        VLine(x1, y1, length, colour);
    } else if (randomShape == 2) { // Line
        int x2 = rand()%WIDTH;
     780:	e308251f 	movw	r2, #34079	; 0x851f
     784:	e34521eb 	movt	r2, #20971	; 0x51eb
     788:	e0c20492 	smull	r0, r2, r2, r4
     78c:	e1a01fc4 	asr	r1, r4, #31
     790:	e0612442 	rsb	r2, r1, r2, asr #8
        int y2 = rand()%HEIGHT;
     794:	e3081889 	movw	r1, #34953	; 0x8889
     798:	e3481888 	movt	r1, #34952	; 0x8888
     79c:	e0c10391 	smull	r0, r1, r1, r3
     7a0:	e0811003 	add	r1, r1, r3
     7a4:	e1a00fc3 	asr	r0, r3, #31
     7a8:	e0601441 	rsb	r1, r0, r1, asr #8
     7ac:	e061c201 	rsb	r12, r1, r1, lsl #4
        Line(x1, y1, x2, y2, colour);
     7b0:	e58d7000 	str	r7, [sp]
     7b4:	e1a00006 	mov	r0, r6
     7b8:	e1a01005 	mov	r1, r5
     7bc:	e3a0ee32 	mov	lr, #800	; 0x320
     7c0:	e062429e 	mls	r2, lr, r2, r4
     7c4:	e043328c 	sub	r3, r3, r12, lsl #5
     7c8:	ebffff07 	bl	3ec <Line>
     7cc:	ea00000e 	b	80c <DrawRandomShape+0x180>
        do {
            borderColour = rand()%8;
        } while (borderColour == colour);

        FilledRectangleWithBorder(x1, y1, width, height, borderWidth, colour, borderColour);
    } */ else if (randomShape == 7) { // Circle
     7d0:	e3540007 	cmp	r4, #7
     7d4:	1a00000c 	bne	80c <DrawRandomShape+0x180>
        int radius = rand()%(WIDTH/2);
     7d8:	eb0000c6 	bl	af8 <rand>
     7dc:	e1a03000 	mov	r3, r0
     7e0:	e308251f 	movw	r2, #34079	; 0x851f
     7e4:	e34521eb 	movt	r2, #20971	; 0x51eb
     7e8:	e0c21092 	smull	r1, r2, r2, r0
     7ec:	e1a01fc0 	asr	r1, r0, #31
     7f0:	e06123c2 	rsb	r2, r1, r2, asr #7
        Circle(x1, y1, radius, colour);
     7f4:	e1a00006 	mov	r0, r6
     7f8:	e1a01005 	mov	r1, r5
     7fc:	e3a0ce19 	mov	r12, #400	; 0x190
     800:	e062329c 	mls	r2, r12, r2, r3
     804:	e1a03007 	mov	r3, r7
     808:	ebffff7b 	bl	5fc <Circle>
    } /*else { // Filled Circle
        int radius = rand()%(WIDTH/2);
        FilledCircle(x1, y1, radius, colour);
    } */
}
     80c:	e28dd00c 	add	sp, sp, #12
     810:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

00000814 <FillScreen>:

void FillScreen(int Colour)
{
     814:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
     818:	e24dd00c 	sub	sp, sp, #12
    FilledRectangle(0,0,WIDTH,HEIGHT,Colour);
     81c:	e58d0000 	str	r0, [sp]
     820:	e3a00000 	mov	r0, #0
     824:	e1a01000 	mov	r1, r0
     828:	e3a02e32 	mov	r2, #800	; 0x320
     82c:	e3a03e1e 	mov	r3, #480	; 0x1e0
     830:	ebffff36 	bl	510 <FilledRectangle>
}
     834:	e28dd00c 	add	sp, sp, #12
     838:	e8bd8000 	ldmfd	sp!, {pc}

0000083c <main>:

int main(void)
{
     83c:	e92d4010 	push	{r4, lr}
    printf("Clearing screen..\n");
     840:	e3030e2c 	movw	r0, #15916	; 0x3e2c
     844:	e3400000 	movt	r0, #0
     848:	eb00009e 	bl	ac8 <puts>

    FillScreen(BLACK);
     84c:	e3a00000 	mov	r0, #0
     850:	ebffffef 	bl	814 <FillScreen>

    printf("Starting...\n");
     854:	e3030e40 	movw	r0, #15936	; 0x3e40
     858:	e3400000 	movt	r0, #0
     85c:	eb000099 	bl	ac8 <puts>
     860:	e3a04064 	mov	r4, #100	; 0x64
    FilledCircle(250, 50, 30, YELLOW); */

    // Draw random things on the screen
    int i = 0;
    while (i < 100) {
        DrawRandomShape();
     864:	ebffff88 	bl	68c <DrawRandomShape>
    // Draw a filled circle
    FilledCircle(250, 50, 30, YELLOW); */

    // Draw random things on the screen
    int i = 0;
    while (i < 100) {
     868:	e2544001 	subs	r4, r4, #1
     86c:	1afffffc 	bne	864 <main+0x28>
        DrawRandomShape();
        i++;
    }

    printf("Done...\n");
     870:	e3030e4c 	movw	r0, #15948	; 0x3e4c
     874:	e3400000 	movt	r0, #0
     878:	eb000092 	bl	ac8 <puts>
    return 0 ;
     87c:	e3a00000 	mov	r0, #0
     880:	e8bd8010 	pop	{r4, pc}

00000884 <__aeabi_idiv>:
     884:	e3510000 	cmp	r1, #0
     888:	0a000043 	beq	99c <.divsi3_skip_div0_test+0x110>

0000088c <.divsi3_skip_div0_test>:
     88c:	e020c001 	eor	r12, r0, r1
     890:	42611000 	rsbmi	r1, r1, #0
     894:	e2512001 	subs	r2, r1, #1
     898:	0a000027 	beq	93c <.divsi3_skip_div0_test+0xb0>
     89c:	e1b03000 	movs	r3, r0
     8a0:	42603000 	rsbmi	r3, r0, #0
     8a4:	e1530001 	cmp	r3, r1
     8a8:	9a000026 	bls	948 <.divsi3_skip_div0_test+0xbc>
     8ac:	e1110002 	tst	r1, r2
     8b0:	0a000028 	beq	958 <.divsi3_skip_div0_test+0xcc>
     8b4:	e311020e 	tst	r1, #-536870912	; 0xe0000000
     8b8:	01a01181 	lsleq	r1, r1, #3
     8bc:	03a02008 	moveq	r2, #8
     8c0:	13a02001 	movne	r2, #1
     8c4:	e3510201 	cmp	r1, #268435456	; 0x10000000
     8c8:	31510003 	cmpcc	r1, r3
     8cc:	31a01201 	lslcc	r1, r1, #4
     8d0:	31a02202 	lslcc	r2, r2, #4
     8d4:	3afffffa 	bcc	8c4 <.divsi3_skip_div0_test+0x38>
     8d8:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
     8dc:	31510003 	cmpcc	r1, r3
     8e0:	31a01081 	lslcc	r1, r1, #1
     8e4:	31a02082 	lslcc	r2, r2, #1
     8e8:	3afffffa 	bcc	8d8 <.divsi3_skip_div0_test+0x4c>
     8ec:	e3a00000 	mov	r0, #0
     8f0:	e1530001 	cmp	r3, r1
     8f4:	20433001 	subcs	r3, r3, r1
     8f8:	21800002 	orrcs	r0, r0, r2
     8fc:	e15300a1 	cmp	r3, r1, lsr #1
     900:	204330a1 	subcs	r3, r3, r1, lsr #1
     904:	218000a2 	orrcs	r0, r0, r2, lsr #1
     908:	e1530121 	cmp	r3, r1, lsr #2
     90c:	20433121 	subcs	r3, r3, r1, lsr #2
     910:	21800122 	orrcs	r0, r0, r2, lsr #2
     914:	e15301a1 	cmp	r3, r1, lsr #3
     918:	204331a1 	subcs	r3, r3, r1, lsr #3
     91c:	218001a2 	orrcs	r0, r0, r2, lsr #3
     920:	e3530000 	cmp	r3, #0
     924:	11b02222 	lsrsne	r2, r2, #4
     928:	11a01221 	lsrne	r1, r1, #4
     92c:	1affffef 	bne	8f0 <.divsi3_skip_div0_test+0x64>
     930:	e35c0000 	cmp	r12, #0
     934:	42600000 	rsbmi	r0, r0, #0
     938:	e12fff1e 	bx	lr
     93c:	e13c0000 	teq	r12, r0
     940:	42600000 	rsbmi	r0, r0, #0
     944:	e12fff1e 	bx	lr
     948:	33a00000 	movcc	r0, #0
     94c:	01a00fcc 	asreq	r0, r12, #31
     950:	03800001 	orreq	r0, r0, #1
     954:	e12fff1e 	bx	lr
     958:	e3510801 	cmp	r1, #65536	; 0x10000
     95c:	21a01821 	lsrcs	r1, r1, #16
     960:	23a02010 	movcs	r2, #16
     964:	33a02000 	movcc	r2, #0
     968:	e3510c01 	cmp	r1, #256	; 0x100
     96c:	21a01421 	lsrcs	r1, r1, #8
     970:	22822008 	addcs	r2, r2, #8
     974:	e3510010 	cmp	r1, #16
     978:	21a01221 	lsrcs	r1, r1, #4
     97c:	22822004 	addcs	r2, r2, #4
     980:	e3510004 	cmp	r1, #4
     984:	82822003 	addhi	r2, r2, #3
     988:	908220a1 	addls	r2, r2, r1, lsr #1
     98c:	e35c0000 	cmp	r12, #0
     990:	e1a00233 	lsr	r0, r3, r2
     994:	42600000 	rsbmi	r0, r0, #0
     998:	e12fff1e 	bx	lr
     99c:	e3500000 	cmp	r0, #0
     9a0:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
     9a4:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
     9a8:	ea000007 	b	9cc <__aeabi_idiv0>

000009ac <__aeabi_idivmod>:
     9ac:	e3510000 	cmp	r1, #0
     9b0:	0afffff9 	beq	99c <.divsi3_skip_div0_test+0x110>
     9b4:	e92d4003 	push	{r0, r1, lr}
     9b8:	ebffffb3 	bl	88c <.divsi3_skip_div0_test>
     9bc:	e8bd4006 	pop	{r1, r2, lr}
     9c0:	e0030092 	mul	r3, r2, r0
     9c4:	e0411003 	sub	r1, r1, r3
     9c8:	e12fff1e 	bx	lr

000009cc <__aeabi_idiv0>:
     9cc:	e12fff1e 	bx	lr

000009d0 <atexit>:
     9d0:	e1a01000 	mov	r1, r0
     9d4:	e3a00000 	mov	r0, #0
     9d8:	e92d4008 	push	{r3, lr}
     9dc:	e1a02000 	mov	r2, r0
     9e0:	e1a03000 	mov	r3, r0
     9e4:	eb000072 	bl	bb4 <__register_exitproc>
     9e8:	e8bd4008 	pop	{r3, lr}
     9ec:	e12fff1e 	bx	lr

000009f0 <exit>:
     9f0:	e92d4008 	push	{r3, lr}
     9f4:	e3a01000 	mov	r1, #0
     9f8:	e1a04000 	mov	r4, r0
     9fc:	eb0000a9 	bl	ca8 <__call_exitprocs>
     a00:	e59f3018 	ldr	r3, [pc, #24]	; a20 <exit+0x30>
     a04:	e5930000 	ldr	r0, [r3]
     a08:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
     a0c:	e3530000 	cmp	r3, #0
     a10:	11a0e00f 	movne	lr, pc
     a14:	112fff13 	bxne	r3
     a18:	e1a00004 	mov	r0, r4
     a1c:	eb000b68 	bl	37c4 <_exit>
     a20:	00003e54 	.word	0x00003e54

00000a24 <_puts_r>:
     a24:	e92d4030 	push	{r4, r5, lr}
     a28:	e1a05000 	mov	r5, r0
     a2c:	e24dd024 	sub	sp, sp, #36	; 0x24
     a30:	e1a00001 	mov	r0, r1
     a34:	e1a04001 	mov	r4, r1
     a38:	eb000045 	bl	b54 <strlen>
     a3c:	e59f307c 	ldr	r3, [pc, #124]	; ac0 <_puts_r+0x9c>
     a40:	e5933000 	ldr	r3, [r3]
     a44:	e1a02000 	mov	r2, r0
     a48:	e5933008 	ldr	r3, [r3, #8]
     a4c:	e58d2014 	str	r2, [sp, #20]
     a50:	e59f206c 	ldr	r2, [pc, #108]	; ac4 <_puts_r+0xa0>
     a54:	e1d310bc 	ldrh	r1, [r3, #12]
     a58:	e58d2018 	str	r2, [sp, #24]
     a5c:	e3a02001 	mov	r2, #1
     a60:	e58d201c 	str	r2, [sp, #28]
     a64:	e28d2010 	add	r2, sp, #16
     a68:	e3110a02 	tst	r1, #8192	; 0x2000
     a6c:	e58d2004 	str	r2, [sp, #4]
     a70:	e3a02002 	mov	r2, #2
     a74:	e58d2008 	str	r2, [sp, #8]
     a78:	05932064 	ldreq	r2, [r3, #100]	; 0x64
     a7c:	03811a02 	orreq	r1, r1, #8192	; 0x2000
     a80:	03c22a02 	biceq	r2, r2, #8192	; 0x2000
     a84:	e2800001 	add	r0, r0, #1
     a88:	01c310bc 	strheq	r1, [r3, #12]
     a8c:	05832064 	streq	r2, [r3, #100]	; 0x64
     a90:	e58d000c 	str	r0, [sp, #12]
     a94:	e5951008 	ldr	r1, [r5, #8]
     a98:	e1a00005 	mov	r0, r5
     a9c:	e28d2004 	add	r2, sp, #4
     aa0:	e58d4010 	str	r4, [sp, #16]
     aa4:	eb0000f8 	bl	e8c <__sfvwrite_r>
     aa8:	e3500000 	cmp	r0, #0
     aac:	03a0000a 	moveq	r0, #10
     ab0:	13e00000 	mvnne	r0, #0
     ab4:	e28dd024 	add	sp, sp, #36	; 0x24
     ab8:	e8bd4030 	pop	{r4, r5, lr}
     abc:	e12fff1e 	bx	lr
     ac0:	00003ec0 	.word	0x00003ec0
     ac4:	00003e5c 	.word	0x00003e5c

00000ac8 <puts>:
     ac8:	e59f3008 	ldr	r3, [pc, #8]	; ad8 <puts+0x10>
     acc:	e1a01000 	mov	r1, r0
     ad0:	e5930000 	ldr	r0, [r3]
     ad4:	eaffffd2 	b	a24 <_puts_r>
     ad8:	00003ec0 	.word	0x00003ec0

00000adc <srand>:
     adc:	e59f3010 	ldr	r3, [pc, #16]	; af4 <srand+0x18>
     ae0:	e5933000 	ldr	r3, [r3]
     ae4:	e3a02000 	mov	r2, #0
     ae8:	e58300a8 	str	r0, [r3, #168]	; 0xa8
     aec:	e58320ac 	str	r2, [r3, #172]	; 0xac
     af0:	e12fff1e 	bx	lr
     af4:	00003ec0 	.word	0x00003ec0

00000af8 <rand>:
     af8:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
     afc:	e59f3044 	ldr	r3, [pc, #68]	; b48 <rand+0x50>
     b00:	e593c000 	ldr	r12, [r3]
     b04:	e59f4040 	ldr	r4, [pc, #64]	; b4c <rand+0x54>
     b08:	e59c20a8 	ldr	r2, [r12, #168]	; 0xa8
     b0c:	e0040492 	mul	r4, r2, r4
     b10:	e59c10ac 	ldr	r1, [r12, #172]	; 0xac
     b14:	e59f3034 	ldr	r3, [pc, #52]	; b50 <rand+0x58>
     b18:	e0244193 	mla	r4, r3, r1, r4
     b1c:	e0810392 	umull	r0, r1, r2, r3
     b20:	e3a02001 	mov	r2, #1
     b24:	e0922000 	adds	r2, r2, r0
     b28:	e0841001 	add	r1, r4, r1
     b2c:	e3a03000 	mov	r3, #0
     b30:	e0a33001 	adc	r3, r3, r1
     b34:	e58c20a8 	str	r2, [r12, #168]	; 0xa8
     b38:	e58c30ac 	str	r3, [r12, #172]	; 0xac
     b3c:	e3c30102 	bic	r0, r3, #-2147483648	; 0x80000000
     b40:	e8bd0010 	ldmfd	sp!, {r4}
     b44:	e12fff1e 	bx	lr
     b48:	00003ec0 	.word	0x00003ec0
     b4c:	5851f42d 	.word	0x5851f42d
     b50:	4c957f2d 	.word	0x4c957f2d

00000b54 <strlen>:
     b54:	e3c01003 	bic	r1, r0, #3
     b58:	e2100003 	ands	r0, r0, #3
     b5c:	e2600000 	rsb	r0, r0, #0
     b60:	e4913004 	ldr	r3, [r1], #4
     b64:	e280c004 	add	r12, r0, #4
     b68:	e1a0c18c 	lsl	r12, r12, #3
     b6c:	e3e02000 	mvn	r2, #0
     b70:	11833c32 	orrne	r3, r3, r2, lsr r12
     b74:	e3a0c001 	mov	r12, #1
     b78:	e18cc40c 	orr	r12, r12, r12, lsl #8
     b7c:	e18cc80c 	orr	r12, r12, r12, lsl #16
     b80:	e043200c 	sub	r2, r3, r12
     b84:	e1c22003 	bic	r2, r2, r3
     b88:	e012238c 	ands	r2, r2, r12, lsl #7
     b8c:	04913004 	ldreq	r3, [r1], #4
     b90:	02800004 	addeq	r0, r0, #4
     b94:	0afffff9 	beq	b80 <strlen+0x2c>
     b98:	e31300ff 	tst	r3, #255	; 0xff
     b9c:	12800001 	addne	r0, r0, #1
     ba0:	13130cff 	tstne	r3, #65280	; 0xff00
     ba4:	12800001 	addne	r0, r0, #1
     ba8:	131308ff 	tstne	r3, #16711680	; 0xff0000
     bac:	12800001 	addne	r0, r0, #1
     bb0:	e12fff1e 	bx	lr

00000bb4 <__register_exitproc>:
     bb4:	e59fc0e4 	ldr	r12, [pc, #228]	; ca0 <__register_exitproc+0xec>
     bb8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     bbc:	e59c4000 	ldr	r4, [r12]
     bc0:	e594c148 	ldr	r12, [r4, #328]	; 0x148
     bc4:	e35c0000 	cmp	r12, #0
     bc8:	0284cf53 	addeq	r12, r4, #332	; 0x14c
     bcc:	e59c5004 	ldr	r5, [r12, #4]
     bd0:	0584c148 	streq	r12, [r4, #328]	; 0x148
     bd4:	e355001f 	cmp	r5, #31
     bd8:	e24dd010 	sub	sp, sp, #16
     bdc:	e1a06000 	mov	r6, r0
     be0:	da000015 	ble	c3c <__register_exitproc+0x88>
     be4:	e59f00b8 	ldr	r0, [pc, #184]	; ca4 <__register_exitproc+0xf0>
     be8:	e3500000 	cmp	r0, #0
     bec:	1a000001 	bne	bf8 <__register_exitproc+0x44>
     bf0:	e3e00000 	mvn	r0, #0
     bf4:	ea000018 	b	c5c <__register_exitproc+0xa8>
     bf8:	e3a00e19 	mov	r0, #400	; 0x190
     bfc:	e58d100c 	str	r1, [sp, #12]
     c00:	e58d2008 	str	r2, [sp, #8]
     c04:	e58d3004 	str	r3, [sp, #4]
     c08:	e320f000 	nop	{0}
     c0c:	e250c000 	subs	r12, r0, #0
     c10:	e59d100c 	ldr	r1, [sp, #12]
     c14:	e59d2008 	ldr	r2, [sp, #8]
     c18:	e59d3004 	ldr	r3, [sp, #4]
     c1c:	0afffff3 	beq	bf0 <__register_exitproc+0x3c>
     c20:	e5945148 	ldr	r5, [r4, #328]	; 0x148
     c24:	e3a00000 	mov	r0, #0
     c28:	e58c0004 	str	r0, [r12, #4]
     c2c:	e58c5000 	str	r5, [r12]
     c30:	e584c148 	str	r12, [r4, #328]	; 0x148
     c34:	e58c0188 	str	r0, [r12, #392]	; 0x188
     c38:	e58c018c 	str	r0, [r12, #396]	; 0x18c
     c3c:	e3560000 	cmp	r6, #0
     c40:	e59c4004 	ldr	r4, [r12, #4]
     c44:	1a000007 	bne	c68 <__register_exitproc+0xb4>
     c48:	e2843002 	add	r3, r4, #2
     c4c:	e2844001 	add	r4, r4, #1
     c50:	e78c1103 	str	r1, [r12, r3, lsl #2]
     c54:	e58c4004 	str	r4, [r12, #4]
     c58:	e3a00000 	mov	r0, #0
     c5c:	e28dd010 	add	sp, sp, #16
     c60:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
     c64:	e12fff1e 	bx	lr
     c68:	e3a00001 	mov	r0, #1
     c6c:	e1a00410 	lsl	r0, r0, r4
     c70:	e08c8104 	add	r8, r12, r4, lsl #2
     c74:	e3560002 	cmp	r6, #2
     c78:	e59c7188 	ldr	r7, [r12, #392]	; 0x188
     c7c:	e5883108 	str	r3, [r8, #264]	; 0x108
     c80:	059c318c 	ldreq	r3, [r12, #396]	; 0x18c
     c84:	e1877000 	orr	r7, r7, r0
     c88:	01830000 	orreq	r0, r3, r0
     c8c:	e1a05008 	mov	r5, r8
     c90:	e5882088 	str	r2, [r8, #136]	; 0x88
     c94:	e58c7188 	str	r7, [r12, #392]	; 0x188
     c98:	058c018c 	streq	r0, [r12, #396]	; 0x18c
     c9c:	eaffffe9 	b	c48 <__register_exitproc+0x94>
     ca0:	00003e54 	.word	0x00003e54
     ca4:	00000000 	.word	0x00000000

00000ca8 <__call_exitprocs>:
     ca8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     cac:	e59f3168 	ldr	r3, [pc, #360]	; e1c <__call_exitprocs+0x174>
     cb0:	e5933000 	ldr	r3, [r3]
     cb4:	e24dd014 	sub	sp, sp, #20
     cb8:	e58d3004 	str	r3, [sp, #4]
     cbc:	e2833f52 	add	r3, r3, #328	; 0x148
     cc0:	e58d0008 	str	r0, [sp, #8]
     cc4:	e58d300c 	str	r3, [sp, #12]
     cc8:	e1a07001 	mov	r7, r1
     ccc:	e3a08001 	mov	r8, #1
     cd0:	e59d3004 	ldr	r3, [sp, #4]
     cd4:	e5936148 	ldr	r6, [r3, #328]	; 0x148
     cd8:	e3560000 	cmp	r6, #0
     cdc:	e59db00c 	ldr	r11, [sp, #12]
     ce0:	0a000033 	beq	db4 <__call_exitprocs+0x10c>
     ce4:	e5965004 	ldr	r5, [r6, #4]
     ce8:	e2554001 	subs	r4, r5, #1
     cec:	5286a088 	addpl	r10, r6, #136	; 0x88
     cf0:	5285501f 	addpl	r5, r5, #31
     cf4:	508a5105 	addpl	r5, r10, r5, lsl #2
     cf8:	5a000007 	bpl	d1c <__call_exitprocs+0x74>
     cfc:	ea000029 	b	da8 <__call_exitprocs+0x100>
     d00:	e5953000 	ldr	r3, [r5]
     d04:	e1530007 	cmp	r3, r7
     d08:	0a000005 	beq	d24 <__call_exitprocs+0x7c>
     d0c:	e2444001 	sub	r4, r4, #1
     d10:	e3740001 	cmn	r4, #1
     d14:	e2455004 	sub	r5, r5, #4
     d18:	0a000022 	beq	da8 <__call_exitprocs+0x100>
     d1c:	e3570000 	cmp	r7, #0
     d20:	1afffff6 	bne	d00 <__call_exitprocs+0x58>
     d24:	e5963004 	ldr	r3, [r6, #4]
     d28:	e06a2005 	rsb	r2, r10, r5
     d2c:	e2433001 	sub	r3, r3, #1
     d30:	e0862002 	add	r2, r6, r2
     d34:	e1530004 	cmp	r3, r4
     d38:	e5123078 	ldr	r3, [r2, #-120]	; 0xffffff88
     d3c:	13a01000 	movne	r1, #0
     d40:	05864004 	streq	r4, [r6, #4]
     d44:	15021078 	strne	r1, [r2, #-120]	; 0xffffff88
     d48:	e3530000 	cmp	r3, #0
     d4c:	0affffee 	beq	d0c <__call_exitprocs+0x64>
     d50:	e1a02418 	lsl	r2, r8, r4
     d54:	e5961188 	ldr	r1, [r6, #392]	; 0x188
     d58:	e1120001 	tst	r2, r1
     d5c:	e5969004 	ldr	r9, [r6, #4]
     d60:	0a000016 	beq	dc0 <__call_exitprocs+0x118>
     d64:	e596118c 	ldr	r1, [r6, #396]	; 0x18c
     d68:	e1120001 	tst	r2, r1
     d6c:	1a000016 	bne	dcc <__call_exitprocs+0x124>
     d70:	e59d0008 	ldr	r0, [sp, #8]
     d74:	e5151080 	ldr	r1, [r5, #-128]	; 0xffffff80
     d78:	e1a0e00f 	mov	lr, pc
     d7c:	e12fff13 	bx	r3
     d80:	e5963004 	ldr	r3, [r6, #4]
     d84:	e1530009 	cmp	r3, r9
     d88:	1affffd0 	bne	cd0 <__call_exitprocs+0x28>
     d8c:	e59b3000 	ldr	r3, [r11]
     d90:	e1530006 	cmp	r3, r6
     d94:	1affffcd 	bne	cd0 <__call_exitprocs+0x28>
     d98:	e2444001 	sub	r4, r4, #1
     d9c:	e3740001 	cmn	r4, #1
     da0:	e2455004 	sub	r5, r5, #4
     da4:	1affffdc 	bne	d1c <__call_exitprocs+0x74>
     da8:	e59f1070 	ldr	r1, [pc, #112]	; e20 <__call_exitprocs+0x178>
     dac:	e3510000 	cmp	r1, #0
     db0:	1a000009 	bne	ddc <__call_exitprocs+0x134>
     db4:	e28dd014 	add	sp, sp, #20
     db8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     dbc:	e12fff1e 	bx	lr
     dc0:	e1a0e00f 	mov	lr, pc
     dc4:	e12fff13 	bx	r3
     dc8:	eaffffec 	b	d80 <__call_exitprocs+0xd8>
     dcc:	e5150080 	ldr	r0, [r5, #-128]	; 0xffffff80
     dd0:	e1a0e00f 	mov	lr, pc
     dd4:	e12fff13 	bx	r3
     dd8:	eaffffe8 	b	d80 <__call_exitprocs+0xd8>
     ddc:	e5963004 	ldr	r3, [r6, #4]
     de0:	e3530000 	cmp	r3, #0
     de4:	e5963000 	ldr	r3, [r6]
     de8:	1a000008 	bne	e10 <__call_exitprocs+0x168>
     dec:	e3530000 	cmp	r3, #0
     df0:	0a000006 	beq	e10 <__call_exitprocs+0x168>
     df4:	e1a00006 	mov	r0, r6
     df8:	e58b3000 	str	r3, [r11]
     dfc:	e320f000 	nop	{0}
     e00:	e59b6000 	ldr	r6, [r11]
     e04:	e3560000 	cmp	r6, #0
     e08:	1affffb5 	bne	ce4 <__call_exitprocs+0x3c>
     e0c:	eaffffe8 	b	db4 <__call_exitprocs+0x10c>
     e10:	e1a0b006 	mov	r11, r6
     e14:	e1a06003 	mov	r6, r3
     e18:	eafffff9 	b	e04 <__call_exitprocs+0x15c>
     e1c:	00003e54 	.word	0x00003e54
     e20:	00000000 	.word	0x00000000

00000e24 <register_fini>:
     e24:	e92d4008 	push	{r3, lr}
     e28:	e59f3010 	ldr	r3, [pc, #16]	; e40 <register_fini+0x1c>
     e2c:	e3530000 	cmp	r3, #0
     e30:	159f000c 	ldrne	r0, [pc, #12]	; e44 <register_fini+0x20>
     e34:	1bfffee5 	blne	9d0 <atexit>
     e38:	e8bd4008 	pop	{r3, lr}
     e3c:	e12fff1e 	bx	lr
     e40:	00003e88 	.word	0x00003e88
     e44:	00000e48 	.word	0x00000e48

00000e48 <__libc_fini_array>:
     e48:	e92d4038 	push	{r3, r4, r5, lr}
     e4c:	e59f5030 	ldr	r5, [pc, #48]	; e84 <__libc_fini_array+0x3c>
     e50:	e59f4030 	ldr	r4, [pc, #48]	; e88 <__libc_fini_array+0x40>
     e54:	e0654004 	rsb	r4, r5, r4
     e58:	e1b04144 	asrs	r4, r4, #2
     e5c:	10855104 	addne	r5, r5, r4, lsl #2
     e60:	0a000004 	beq	e78 <__libc_fini_array+0x30>
     e64:	e5353004 	ldr	r3, [r5, #-4]!
     e68:	e1a0e00f 	mov	lr, pc
     e6c:	e12fff13 	bx	r3
     e70:	e2544001 	subs	r4, r4, #1
     e74:	1afffffa 	bne	e64 <__libc_fini_array+0x1c>
     e78:	eb000c02 	bl	3e88 <__libc_fini>
     e7c:	e8bd4038 	pop	{r3, r4, r5, lr}
     e80:	e12fff1e 	bx	lr
     e84:	00003ea0 	.word	0x00003ea0
     e88:	00003ea4 	.word	0x00003ea4

00000e8c <__sfvwrite_r>:
     e8c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     e90:	e5923008 	ldr	r3, [r2, #8]
     e94:	e3530000 	cmp	r3, #0
     e98:	e24dd00c 	sub	sp, sp, #12
     e9c:	e1a07002 	mov	r7, r2
     ea0:	e1a0a000 	mov	r10, r0
     ea4:	e1a04001 	mov	r4, r1
     ea8:	0a00001e 	beq	f28 <__sfvwrite_r+0x9c>
     eac:	e1d130bc 	ldrh	r3, [r1, #12]
     eb0:	e3130008 	tst	r3, #8
     eb4:	0a00001f 	beq	f38 <__sfvwrite_r+0xac>
     eb8:	e5912010 	ldr	r2, [r1, #16]
     ebc:	e3520000 	cmp	r2, #0
     ec0:	0a00001c 	beq	f38 <__sfvwrite_r+0xac>
     ec4:	e2132002 	ands	r2, r3, #2
     ec8:	e5975000 	ldr	r5, [r7]
     ecc:	0a000029 	beq	f78 <__sfvwrite_r+0xec>
     ed0:	e3a08000 	mov	r8, #0
     ed4:	e1a06008 	mov	r6, r8
     ed8:	e3560000 	cmp	r6, #0
     edc:	e1a02008 	mov	r2, r8
     ee0:	e1a0000a 	mov	r0, r10
     ee4:	0a00001f 	beq	f68 <__sfvwrite_r+0xdc>
     ee8:	e3560b01 	cmp	r6, #1024	; 0x400
     eec:	31a03006 	movcc	r3, r6
     ef0:	23a03b01 	movcs	r3, #1024	; 0x400
     ef4:	e594101c 	ldr	r1, [r4, #28]
     ef8:	e594c024 	ldr	r12, [r4, #36]	; 0x24
     efc:	e1a0e00f 	mov	lr, pc
     f00:	e12fff1c 	bx	r12
     f04:	e3500000 	cmp	r0, #0
     f08:	da000050 	ble	1050 <__sfvwrite_r+0x1c4>
     f0c:	e5973008 	ldr	r3, [r7, #8]
     f10:	e0603003 	rsb	r3, r0, r3
     f14:	e3530000 	cmp	r3, #0
     f18:	e0888000 	add	r8, r8, r0
     f1c:	e0606006 	rsb	r6, r0, r6
     f20:	e5873008 	str	r3, [r7, #8]
     f24:	1affffeb 	bne	ed8 <__sfvwrite_r+0x4c>
     f28:	e3a00000 	mov	r0, #0
     f2c:	e28dd00c 	add	sp, sp, #12
     f30:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     f34:	e12fff1e 	bx	lr
     f38:	e1a0000a 	mov	r0, r10
     f3c:	e1a01004 	mov	r1, r4
     f40:	eb00054f 	bl	2484 <__swsetup_r>
     f44:	e3500000 	cmp	r0, #0
     f48:	e1d430bc 	ldrh	r3, [r4, #12]
     f4c:	0affffdc 	beq	ec4 <__sfvwrite_r+0x38>
     f50:	e3833040 	orr	r3, r3, #64	; 0x40
     f54:	e1c430bc 	strh	r3, [r4, #12]
     f58:	e3a03009 	mov	r3, #9
     f5c:	e3e00000 	mvn	r0, #0
     f60:	e58a3000 	str	r3, [r10]
     f64:	eafffff0 	b	f2c <__sfvwrite_r+0xa0>
     f68:	e5958000 	ldr	r8, [r5]
     f6c:	e5956004 	ldr	r6, [r5, #4]
     f70:	e2855008 	add	r5, r5, #8
     f74:	eaffffd7 	b	ed8 <__sfvwrite_r+0x4c>
     f78:	e2139001 	ands	r9, r3, #1
     f7c:	1a000038 	bne	1064 <__sfvwrite_r+0x1d8>
     f80:	e1a06009 	mov	r6, r9
     f84:	e3560000 	cmp	r6, #0
     f88:	0a000024 	beq	1020 <__sfvwrite_r+0x194>
     f8c:	e3130c02 	tst	r3, #512	; 0x200
     f90:	e5948008 	ldr	r8, [r4, #8]
     f94:	e1a02003 	mov	r2, r3
     f98:	0a000062 	beq	1128 <__sfvwrite_r+0x29c>
     f9c:	e1560008 	cmp	r6, r8
     fa0:	e1a0c008 	mov	r12, r8
     fa4:	3a000089 	bcc	11d0 <__sfvwrite_r+0x344>
     fa8:	e2022d12 	and	r2, r2, #1152	; 0x480
     fac:	e3520000 	cmp	r2, #0
     fb0:	1a0000a2 	bne	1240 <__sfvwrite_r+0x3b4>
     fb4:	e5940000 	ldr	r0, [r4]
     fb8:	e1a0b008 	mov	r11, r8
     fbc:	e1a03006 	mov	r3, r6
     fc0:	e1a08006 	mov	r8, r6
     fc4:	e1a0200c 	mov	r2, r12
     fc8:	e1a01009 	mov	r1, r9
     fcc:	e58d3004 	str	r3, [sp, #4]
     fd0:	e58dc000 	str	r12, [sp]
     fd4:	eb00036e 	bl	1d94 <memmove>
     fd8:	e59dc000 	ldr	r12, [sp]
     fdc:	e5941008 	ldr	r1, [r4, #8]
     fe0:	e5942000 	ldr	r2, [r4]
     fe4:	e06bb001 	rsb	r11, r11, r1
     fe8:	e082c00c 	add	r12, r2, r12
     fec:	e584b008 	str	r11, [r4, #8]
     ff0:	e584c000 	str	r12, [r4]
     ff4:	e59d3004 	ldr	r3, [sp, #4]
     ff8:	e5972008 	ldr	r2, [r7, #8]
     ffc:	e0688002 	rsb	r8, r8, r2
    1000:	e3580000 	cmp	r8, #0
    1004:	e0899003 	add	r9, r9, r3
    1008:	e0636006 	rsb	r6, r3, r6
    100c:	e5878008 	str	r8, [r7, #8]
    1010:	0affffc4 	beq	f28 <__sfvwrite_r+0x9c>
    1014:	e3560000 	cmp	r6, #0
    1018:	e1d430bc 	ldrh	r3, [r4, #12]
    101c:	1affffda 	bne	f8c <__sfvwrite_r+0x100>
    1020:	e5959000 	ldr	r9, [r5]
    1024:	e5956004 	ldr	r6, [r5, #4]
    1028:	e2855008 	add	r5, r5, #8
    102c:	eaffffd4 	b	f84 <__sfvwrite_r+0xf8>
    1030:	eb0003a6 	bl	1ed0 <_realloc_r>
    1034:	e2503000 	subs	r3, r0, #0
    1038:	1a00009d 	bne	12b4 <__sfvwrite_r+0x428>
    103c:	e1a0000a 	mov	r0, r10
    1040:	e5941010 	ldr	r1, [r4, #16]
    1044:	eb0006e7 	bl	2be8 <_free_r>
    1048:	e3a0300c 	mov	r3, #12
    104c:	e58a3000 	str	r3, [r10]
    1050:	e1d430bc 	ldrh	r3, [r4, #12]
    1054:	e3833040 	orr	r3, r3, #64	; 0x40
    1058:	e1c430bc 	strh	r3, [r4, #12]
    105c:	e3e00000 	mvn	r0, #0
    1060:	eaffffb1 	b	f2c <__sfvwrite_r+0xa0>
    1064:	e1a09002 	mov	r9, r2
    1068:	e1a0c002 	mov	r12, r2
    106c:	e1a0b002 	mov	r11, r2
    1070:	e1a08002 	mov	r8, r2
    1074:	e3580000 	cmp	r8, #0
    1078:	0a000025 	beq	1114 <__sfvwrite_r+0x288>
    107c:	e35c0000 	cmp	r12, #0
    1080:	0a000064 	beq	1218 <__sfvwrite_r+0x38c>
    1084:	e5940000 	ldr	r0, [r4]
    1088:	e5942010 	ldr	r2, [r4, #16]
    108c:	e1590008 	cmp	r9, r8
    1090:	31a03009 	movcc	r3, r9
    1094:	21a03008 	movcs	r3, r8
    1098:	e1500002 	cmp	r0, r2
    109c:	e5946008 	ldr	r6, [r4, #8]
    10a0:	e594e014 	ldr	lr, [r4, #20]
    10a4:	9a000002 	bls	10b4 <__sfvwrite_r+0x228>
    10a8:	e086600e 	add	r6, r6, lr
    10ac:	e1530006 	cmp	r3, r6
    10b0:	ca00008a 	bgt	12e0 <__sfvwrite_r+0x454>
    10b4:	e153000e 	cmp	r3, lr
    10b8:	ba00002d 	blt	1174 <__sfvwrite_r+0x2e8>
    10bc:	e594101c 	ldr	r1, [r4, #28]
    10c0:	e1a0000a 	mov	r0, r10
    10c4:	e58dc000 	str	r12, [sp]
    10c8:	e1a0200b 	mov	r2, r11
    10cc:	e1a0300e 	mov	r3, lr
    10d0:	e594c024 	ldr	r12, [r4, #36]	; 0x24
    10d4:	e1a0e00f 	mov	lr, pc
    10d8:	e12fff1c 	bx	r12
    10dc:	e2506000 	subs	r6, r0, #0
    10e0:	e59dc000 	ldr	r12, [sp]
    10e4:	daffffd9 	ble	1050 <__sfvwrite_r+0x1c4>
    10e8:	e0599006 	subs	r9, r9, r6
    10ec:	0a000030 	beq	11b4 <__sfvwrite_r+0x328>
    10f0:	e5973008 	ldr	r3, [r7, #8]
    10f4:	e0663003 	rsb	r3, r6, r3
    10f8:	e3530000 	cmp	r3, #0
    10fc:	e08bb006 	add	r11, r11, r6
    1100:	e0668008 	rsb	r8, r6, r8
    1104:	e5873008 	str	r3, [r7, #8]
    1108:	0affff86 	beq	f28 <__sfvwrite_r+0x9c>
    110c:	e3580000 	cmp	r8, #0
    1110:	1affffd9 	bne	107c <__sfvwrite_r+0x1f0>
    1114:	e595b000 	ldr	r11, [r5]
    1118:	e5958004 	ldr	r8, [r5, #4]
    111c:	e3a0c000 	mov	r12, #0
    1120:	e2855008 	add	r5, r5, #8
    1124:	eaffffd2 	b	1074 <__sfvwrite_r+0x1e8>
    1128:	e5940000 	ldr	r0, [r4]
    112c:	e5943010 	ldr	r3, [r4, #16]
    1130:	e1500003 	cmp	r0, r3
    1134:	9a000001 	bls	1140 <__sfvwrite_r+0x2b4>
    1138:	e1560008 	cmp	r6, r8
    113c:	8a000075 	bhi	1318 <__sfvwrite_r+0x48c>
    1140:	e5943014 	ldr	r3, [r4, #20]
    1144:	e1560003 	cmp	r6, r3
    1148:	3a000026 	bcc	11e8 <__sfvwrite_r+0x35c>
    114c:	e1a0000a 	mov	r0, r10
    1150:	e594101c 	ldr	r1, [r4, #28]
    1154:	e1a02009 	mov	r2, r9
    1158:	e594c024 	ldr	r12, [r4, #36]	; 0x24
    115c:	e1a0e00f 	mov	lr, pc
    1160:	e12fff1c 	bx	r12
    1164:	e2508000 	subs	r8, r0, #0
    1168:	daffffb8 	ble	1050 <__sfvwrite_r+0x1c4>
    116c:	e1a03008 	mov	r3, r8
    1170:	eaffffa0 	b	ff8 <__sfvwrite_r+0x16c>
    1174:	e1a02003 	mov	r2, r3
    1178:	e1a0100b 	mov	r1, r11
    117c:	e58d3004 	str	r3, [sp, #4]
    1180:	e58dc000 	str	r12, [sp]
    1184:	eb000302 	bl	1d94 <memmove>
    1188:	e59d3004 	ldr	r3, [sp, #4]
    118c:	e5941008 	ldr	r1, [r4, #8]
    1190:	e5942000 	ldr	r2, [r4]
    1194:	e1a06003 	mov	r6, r3
    1198:	e0631001 	rsb	r1, r3, r1
    119c:	e0822003 	add	r2, r2, r3
    11a0:	e0599006 	subs	r9, r9, r6
    11a4:	e5841008 	str	r1, [r4, #8]
    11a8:	e5842000 	str	r2, [r4]
    11ac:	e59dc000 	ldr	r12, [sp]
    11b0:	1affffce 	bne	10f0 <__sfvwrite_r+0x264>
    11b4:	e1a0000a 	mov	r0, r10
    11b8:	e1a01004 	mov	r1, r4
    11bc:	eb0004fe 	bl	25bc <_fflush_r>
    11c0:	e3500000 	cmp	r0, #0
    11c4:	1affffa1 	bne	1050 <__sfvwrite_r+0x1c4>
    11c8:	e1a0c009 	mov	r12, r9
    11cc:	eaffffc7 	b	10f0 <__sfvwrite_r+0x264>
    11d0:	e5940000 	ldr	r0, [r4]
    11d4:	e1a0b006 	mov	r11, r6
    11d8:	e1a03006 	mov	r3, r6
    11dc:	e1a08006 	mov	r8, r6
    11e0:	e1a0c006 	mov	r12, r6
    11e4:	eaffff76 	b	fc4 <__sfvwrite_r+0x138>
    11e8:	e1a02006 	mov	r2, r6
    11ec:	e1a01009 	mov	r1, r9
    11f0:	eb0002e7 	bl	1d94 <memmove>
    11f4:	e5942008 	ldr	r2, [r4, #8]
    11f8:	e5943000 	ldr	r3, [r4]
    11fc:	e0662002 	rsb	r2, r6, r2
    1200:	e0833006 	add	r3, r3, r6
    1204:	e5843000 	str	r3, [r4]
    1208:	e5842008 	str	r2, [r4, #8]
    120c:	e1a08006 	mov	r8, r6
    1210:	e1a03006 	mov	r3, r6
    1214:	eaffff77 	b	ff8 <__sfvwrite_r+0x16c>
    1218:	e1a0000b 	mov	r0, r11
    121c:	e3a0100a 	mov	r1, #10
    1220:	e1a02008 	mov	r2, r8
    1224:	eb000210 	bl	1a6c <memchr>
    1228:	e3500000 	cmp	r0, #0
    122c:	12809001 	addne	r9, r0, #1
    1230:	106b9009 	rsbne	r9, r11, r9
    1234:	02889001 	addeq	r9, r8, #1
    1238:	e3a0c001 	mov	r12, #1
    123c:	eaffff90 	b	1084 <__sfvwrite_r+0x1f8>
    1240:	e5941010 	ldr	r1, [r4, #16]
    1244:	e594b000 	ldr	r11, [r4]
    1248:	e5948014 	ldr	r8, [r4, #20]
    124c:	e061b00b 	rsb	r11, r1, r11
    1250:	e0888088 	add	r8, r8, r8, lsl #1
    1254:	e0888fa8 	add	r8, r8, r8, lsr #31
    1258:	e28b0001 	add	r0, r11, #1
    125c:	e1a080c8 	asr	r8, r8, #1
    1260:	e0800006 	add	r0, r0, r6
    1264:	e1580000 	cmp	r8, r0
    1268:	e1a02008 	mov	r2, r8
    126c:	31a08000 	movcc	r8, r0
    1270:	31a02008 	movcc	r2, r8
    1274:	e3130b01 	tst	r3, #1024	; 0x400
    1278:	e1a0000a 	mov	r0, r10
    127c:	0affff6b 	beq	1030 <__sfvwrite_r+0x1a4>
    1280:	e1a01002 	mov	r1, r2
    1284:	eb000031 	bl	1350 <_malloc_r>
    1288:	e2503000 	subs	r3, r0, #0
    128c:	0affff6d 	beq	1048 <__sfvwrite_r+0x1bc>
    1290:	e5941010 	ldr	r1, [r4, #16]
    1294:	e1a0200b 	mov	r2, r11
    1298:	e58d3004 	str	r3, [sp, #4]
    129c:	eb000239 	bl	1b88 <memcpy>
    12a0:	e1d420bc 	ldrh	r2, [r4, #12]
    12a4:	e3c22d12 	bic	r2, r2, #1152	; 0x480
    12a8:	e3822080 	orr	r2, r2, #128	; 0x80
    12ac:	e1c420bc 	strh	r2, [r4, #12]
    12b0:	e59d3004 	ldr	r3, [sp, #4]
    12b4:	e083000b 	add	r0, r3, r11
    12b8:	e06b2008 	rsb	r2, r11, r8
    12bc:	e5843010 	str	r3, [r4, #16]
    12c0:	e5848014 	str	r8, [r4, #20]
    12c4:	e5840000 	str	r0, [r4]
    12c8:	e1a0b006 	mov	r11, r6
    12cc:	e5842008 	str	r2, [r4, #8]
    12d0:	e1a03006 	mov	r3, r6
    12d4:	e1a08006 	mov	r8, r6
    12d8:	e1a0c006 	mov	r12, r6
    12dc:	eaffff38 	b	fc4 <__sfvwrite_r+0x138>
    12e0:	e1a0100b 	mov	r1, r11
    12e4:	e1a02006 	mov	r2, r6
    12e8:	e58dc000 	str	r12, [sp]
    12ec:	eb0002a8 	bl	1d94 <memmove>
    12f0:	e5943000 	ldr	r3, [r4]
    12f4:	e0833006 	add	r3, r3, r6
    12f8:	e5843000 	str	r3, [r4]
    12fc:	e1a0000a 	mov	r0, r10
    1300:	e1a01004 	mov	r1, r4
    1304:	eb0004ac 	bl	25bc <_fflush_r>
    1308:	e3500000 	cmp	r0, #0
    130c:	e59dc000 	ldr	r12, [sp]
    1310:	0affff74 	beq	10e8 <__sfvwrite_r+0x25c>
    1314:	eaffff4d 	b	1050 <__sfvwrite_r+0x1c4>
    1318:	e1a01009 	mov	r1, r9
    131c:	e1a02008 	mov	r2, r8
    1320:	e58d8004 	str	r8, [sp, #4]
    1324:	eb00029a 	bl	1d94 <memmove>
    1328:	e5942000 	ldr	r2, [r4]
    132c:	e0822008 	add	r2, r2, r8
    1330:	e5842000 	str	r2, [r4]
    1334:	e1a0000a 	mov	r0, r10
    1338:	e1a01004 	mov	r1, r4
    133c:	eb00049e 	bl	25bc <_fflush_r>
    1340:	e3500000 	cmp	r0, #0
    1344:	e59d3004 	ldr	r3, [sp, #4]
    1348:	0affff2a 	beq	ff8 <__sfvwrite_r+0x16c>
    134c:	eaffff3f 	b	1050 <__sfvwrite_r+0x1c4>

00001350 <_malloc_r>:
    1350:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    1354:	e281500b 	add	r5, r1, #11
    1358:	e3550016 	cmp	r5, #22
    135c:	83c55007 	bichi	r5, r5, #7
    1360:	81a03fa5 	lsrhi	r3, r5, #31
    1364:	93a03000 	movls	r3, #0
    1368:	93a05010 	movls	r5, #16
    136c:	e1550001 	cmp	r5, r1
    1370:	21a01003 	movcs	r1, r3
    1374:	33831001 	orrcc	r1, r3, #1
    1378:	e3510000 	cmp	r1, #0
    137c:	13a0300c 	movne	r3, #12
    1380:	e24dd00c 	sub	sp, sp, #12
    1384:	e1a06000 	mov	r6, r0
    1388:	15803000 	strne	r3, [r0]
    138c:	13a04000 	movne	r4, #0
    1390:	1a000015 	bne	13ec <_malloc_r+0x9c>
    1394:	eb0002cb 	bl	1ec8 <__malloc_lock>
    1398:	e3550f7e 	cmp	r5, #504	; 0x1f8
    139c:	2a000016 	bcs	13fc <_malloc_r+0xac>
    13a0:	e59f76b8 	ldr	r7, [pc, #1720]	; 1a60 <_malloc_r+0x710>
    13a4:	e1a0e1a5 	lsr	lr, r5, #3
    13a8:	e087318e 	add	r3, r7, lr, lsl #3
    13ac:	e593400c 	ldr	r4, [r3, #12]
    13b0:	e1540003 	cmp	r4, r3
    13b4:	0a00014b 	beq	18e8 <_malloc_r+0x598>
    13b8:	e5943004 	ldr	r3, [r4, #4]
    13bc:	e3c33003 	bic	r3, r3, #3
    13c0:	e0843003 	add	r3, r4, r3
    13c4:	e5930004 	ldr	r0, [r3, #4]
    13c8:	e2841008 	add	r1, r4, #8
    13cc:	e8910006 	ldm	r1, {r1, r2}
    13d0:	e3800001 	orr	r0, r0, #1
    13d4:	e5830004 	str	r0, [r3, #4]
    13d8:	e581200c 	str	r2, [r1, #12]
    13dc:	e5821008 	str	r1, [r2, #8]
    13e0:	e1a00006 	mov	r0, r6
    13e4:	eb0002b8 	bl	1ecc <__malloc_unlock>
    13e8:	e2844008 	add	r4, r4, #8
    13ec:	e1a00004 	mov	r0, r4
    13f0:	e28dd00c 	add	sp, sp, #12
    13f4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    13f8:	e12fff1e 	bx	lr
    13fc:	e1b0e4a5 	lsrs	lr, r5, #9
    1400:	01a0e1a5 	lsreq	lr, r5, #3
    1404:	01a0108e 	lsleq	r1, lr, #1
    1408:	1a000061 	bne	1594 <_malloc_r+0x244>
    140c:	e59f764c 	ldr	r7, [pc, #1612]	; 1a60 <_malloc_r+0x710>
    1410:	e0871101 	add	r1, r7, r1, lsl #2
    1414:	e591400c 	ldr	r4, [r1, #12]
    1418:	e1510004 	cmp	r1, r4
    141c:	1a000005 	bne	1438 <_malloc_r+0xe8>
    1420:	ea00000a 	b	1450 <_malloc_r+0x100>
    1424:	e3530000 	cmp	r3, #0
    1428:	aa0000d7 	bge	178c <_malloc_r+0x43c>
    142c:	e594400c 	ldr	r4, [r4, #12]
    1430:	e1510004 	cmp	r1, r4
    1434:	0a000005 	beq	1450 <_malloc_r+0x100>
    1438:	e5942004 	ldr	r2, [r4, #4]
    143c:	e3c22003 	bic	r2, r2, #3
    1440:	e0653002 	rsb	r3, r5, r2
    1444:	e353000f 	cmp	r3, #15
    1448:	dafffff5 	ble	1424 <_malloc_r+0xd4>
    144c:	e24ee001 	sub	lr, lr, #1
    1450:	e28ee001 	add	lr, lr, #1
    1454:	e59f3604 	ldr	r3, [pc, #1540]	; 1a60 <_malloc_r+0x710>
    1458:	e5974010 	ldr	r4, [r7, #16]
    145c:	e2838008 	add	r8, r3, #8
    1460:	e1540008 	cmp	r4, r8
    1464:	05931004 	ldreq	r1, [r3, #4]
    1468:	0a000016 	beq	14c8 <_malloc_r+0x178>
    146c:	e5942004 	ldr	r2, [r4, #4]
    1470:	e3c22003 	bic	r2, r2, #3
    1474:	e0651002 	rsb	r1, r5, r2
    1478:	e351000f 	cmp	r1, #15
    147c:	ca0000f7 	bgt	1860 <_malloc_r+0x510>
    1480:	e3510000 	cmp	r1, #0
    1484:	e5838014 	str	r8, [r3, #20]
    1488:	e5838010 	str	r8, [r3, #16]
    148c:	aa000046 	bge	15ac <_malloc_r+0x25c>
    1490:	e3520c02 	cmp	r2, #512	; 0x200
    1494:	2a0000d2 	bcs	17e4 <_malloc_r+0x494>
    1498:	e5930004 	ldr	r0, [r3, #4]
    149c:	e1a021a2 	lsr	r2, r2, #3
    14a0:	e1a01142 	asr	r1, r2, #2
    14a4:	e3a0c001 	mov	r12, #1
    14a8:	e180111c 	orr	r1, r0, r12, lsl r1
    14ac:	e0832182 	add	r2, r3, r2, lsl #3
    14b0:	e5920008 	ldr	r0, [r2, #8]
    14b4:	e584200c 	str	r2, [r4, #12]
    14b8:	e5840008 	str	r0, [r4, #8]
    14bc:	e5831004 	str	r1, [r3, #4]
    14c0:	e5824008 	str	r4, [r2, #8]
    14c4:	e580400c 	str	r4, [r0, #12]
    14c8:	e1a0014e 	asr	r0, lr, #2
    14cc:	e3a03001 	mov	r3, #1
    14d0:	e1a00013 	lsl	r0, r3, r0
    14d4:	e1500001 	cmp	r0, r1
    14d8:	8a00003b 	bhi	15cc <_malloc_r+0x27c>
    14dc:	e1110000 	tst	r1, r0
    14e0:	1a000008 	bne	1508 <_malloc_r+0x1b8>
    14e4:	e1a00310 	lsl	r0, r0, r3
    14e8:	e3cee003 	bic	lr, lr, #3
    14ec:	e1110000 	tst	r1, r0
    14f0:	e28ee004 	add	lr, lr, #4
    14f4:	1a000003 	bne	1508 <_malloc_r+0x1b8>
    14f8:	e1a00080 	lsl	r0, r0, #1
    14fc:	e1110000 	tst	r1, r0
    1500:	e28ee004 	add	lr, lr, #4
    1504:	0afffffb 	beq	14f8 <_malloc_r+0x1a8>
    1508:	e087a18e 	add	r10, r7, lr, lsl #3
    150c:	e1a0c00a 	mov	r12, r10
    1510:	e1a0400e 	mov	r4, lr
    1514:	e59c300c 	ldr	r3, [r12, #12]
    1518:	e15c0003 	cmp	r12, r3
    151c:	1a000005 	bne	1538 <_malloc_r+0x1e8>
    1520:	ea0000db 	b	1894 <_malloc_r+0x544>
    1524:	e3520000 	cmp	r2, #0
    1528:	aa0000f4 	bge	1900 <_malloc_r+0x5b0>
    152c:	e593300c 	ldr	r3, [r3, #12]
    1530:	e15c0003 	cmp	r12, r3
    1534:	0a0000d6 	beq	1894 <_malloc_r+0x544>
    1538:	e5931004 	ldr	r1, [r3, #4]
    153c:	e3c11003 	bic	r1, r1, #3
    1540:	e0652001 	rsb	r2, r5, r1
    1544:	e352000f 	cmp	r2, #15
    1548:	dafffff5 	ble	1524 <_malloc_r+0x1d4>
    154c:	e1a04003 	mov	r4, r3
    1550:	e593000c 	ldr	r0, [r3, #12]
    1554:	e5b4c008 	ldr	r12, [r4, #8]!
    1558:	e0831005 	add	r1, r3, r5
    155c:	e382e001 	orr	lr, r2, #1
    1560:	e3855001 	orr	r5, r5, #1
    1564:	e58c000c 	str	r0, [r12, #12]
    1568:	e580c008 	str	r12, [r0, #8]
    156c:	e5835004 	str	r5, [r3, #4]
    1570:	e5871014 	str	r1, [r7, #20]
    1574:	e5871010 	str	r1, [r7, #16]
    1578:	e581800c 	str	r8, [r1, #12]
    157c:	e5818008 	str	r8, [r1, #8]
    1580:	e581e004 	str	lr, [r1, #4]
    1584:	e7812002 	str	r2, [r1, r2]
    1588:	e1a00006 	mov	r0, r6
    158c:	eb00024e 	bl	1ecc <__malloc_unlock>
    1590:	eaffff95 	b	13ec <_malloc_r+0x9c>
    1594:	e35e0004 	cmp	lr, #4
    1598:	8a000087 	bhi	17bc <_malloc_r+0x46c>
    159c:	e1a0e325 	lsr	lr, r5, #6
    15a0:	e28ee038 	add	lr, lr, #56	; 0x38
    15a4:	e1a0108e 	lsl	r1, lr, #1
    15a8:	eaffff97 	b	140c <_malloc_r+0xbc>
    15ac:	e0842002 	add	r2, r4, r2
    15b0:	e5923004 	ldr	r3, [r2, #4]
    15b4:	e3833001 	orr	r3, r3, #1
    15b8:	e5823004 	str	r3, [r2, #4]
    15bc:	e1a00006 	mov	r0, r6
    15c0:	eb000241 	bl	1ecc <__malloc_unlock>
    15c4:	e2844008 	add	r4, r4, #8
    15c8:	eaffff87 	b	13ec <_malloc_r+0x9c>
    15cc:	e5974008 	ldr	r4, [r7, #8]
    15d0:	e594a004 	ldr	r10, [r4, #4]
    15d4:	e3caa003 	bic	r10, r10, #3
    15d8:	e155000a 	cmp	r5, r10
    15dc:	8a000002 	bhi	15ec <_malloc_r+0x29c>
    15e0:	e065300a 	rsb	r3, r5, r10
    15e4:	e353000f 	cmp	r3, #15
    15e8:	ca00005d 	bgt	1764 <_malloc_r+0x414>
    15ec:	e59f9470 	ldr	r9, [pc, #1136]	; 1a64 <_malloc_r+0x714>
    15f0:	e5973408 	ldr	r3, [r7, #1032]	; 0x408
    15f4:	e599b000 	ldr	r11, [r9]
    15f8:	e3730001 	cmn	r3, #1
    15fc:	e085b00b 	add	r11, r5, r11
    1600:	128bba01 	addne	r11, r11, #4096	; 0x1000
    1604:	128bb00f 	addne	r11, r11, #15
    1608:	13cbbeff 	bicne	r11, r11, #4080	; 0xff0
    160c:	028bb010 	addeq	r11, r11, #16
    1610:	13cbb00f 	bicne	r11, r11, #15
    1614:	e084200a 	add	r2, r4, r10
    1618:	e1a00006 	mov	r0, r6
    161c:	e1a0100b 	mov	r1, r11
    1620:	e58d2004 	str	r2, [sp, #4]
    1624:	eb000386 	bl	2444 <_sbrk_r>
    1628:	e3700001 	cmn	r0, #1
    162c:	e1a08000 	mov	r8, r0
    1630:	e59d2004 	ldr	r2, [sp, #4]
    1634:	0a0000e2 	beq	19c4 <_malloc_r+0x674>
    1638:	e1520000 	cmp	r2, r0
    163c:	8a0000bf 	bhi	1940 <_malloc_r+0x5f0>
    1640:	e5993004 	ldr	r3, [r9, #4]
    1644:	e1520008 	cmp	r2, r8
    1648:	e08b3003 	add	r3, r11, r3
    164c:	e5893004 	str	r3, [r9, #4]
    1650:	0a0000df 	beq	19d4 <_malloc_r+0x684>
    1654:	e5971408 	ldr	r1, [r7, #1032]	; 0x408
    1658:	e3710001 	cmn	r1, #1
    165c:	10622008 	rsbne	r2, r2, r8
    1660:	059f33f8 	ldreq	r3, [pc, #1016]	; 1a60 <_malloc_r+0x710>
    1664:	10833002 	addne	r3, r3, r2
    1668:	05838408 	streq	r8, [r3, #1032]	; 0x408
    166c:	15893004 	strne	r3, [r9, #4]
    1670:	e2183007 	ands	r3, r8, #7
    1674:	12632008 	rsbne	r2, r3, #8
    1678:	10888002 	addne	r8, r8, r2
    167c:	12633a01 	rsbne	r3, r3, #4096	; 0x1000
    1680:	12832008 	addne	r2, r3, #8
    1684:	e088300b 	add	r3, r8, r11
    1688:	03a02a01 	moveq	r2, #4096	; 0x1000
    168c:	e1a03a03 	lsl	r3, r3, #20
    1690:	e042ba23 	sub	r11, r2, r3, lsr #20
    1694:	e1a0100b 	mov	r1, r11
    1698:	e1a00006 	mov	r0, r6
    169c:	eb000368 	bl	2444 <_sbrk_r>
    16a0:	e3700001 	cmn	r0, #1
    16a4:	10682000 	rsbne	r2, r8, r0
    16a8:	e5993004 	ldr	r3, [r9, #4]
    16ac:	108b2002 	addne	r2, r11, r2
    16b0:	03a0b000 	moveq	r11, #0
    16b4:	13822001 	orrne	r2, r2, #1
    16b8:	03a02001 	moveq	r2, #1
    16bc:	e08b3003 	add	r3, r11, r3
    16c0:	e1540007 	cmp	r4, r7
    16c4:	e5893004 	str	r3, [r9, #4]
    16c8:	e5878008 	str	r8, [r7, #8]
    16cc:	e5882004 	str	r2, [r8, #4]
    16d0:	0a00000d 	beq	170c <_malloc_r+0x3bc>
    16d4:	e35a000f 	cmp	r10, #15
    16d8:	9a0000ac 	bls	1990 <_malloc_r+0x640>
    16dc:	e594c004 	ldr	r12, [r4, #4]
    16e0:	e24a200c 	sub	r2, r10, #12
    16e4:	e3c22007 	bic	r2, r2, #7
    16e8:	e20cc001 	and	r12, r12, #1
    16ec:	e0841002 	add	r1, r4, r2
    16f0:	e3a00005 	mov	r0, #5
    16f4:	e182c00c 	orr	r12, r2, r12
    16f8:	e352000f 	cmp	r2, #15
    16fc:	e584c004 	str	r12, [r4, #4]
    1700:	e5810004 	str	r0, [r1, #4]
    1704:	e5810008 	str	r0, [r1, #8]
    1708:	8a0000b8 	bhi	19f0 <_malloc_r+0x6a0>
    170c:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
    1710:	e1530002 	cmp	r3, r2
    1714:	859f2348 	ldrhi	r2, [pc, #840]	; 1a64 <_malloc_r+0x714>
    1718:	8582302c 	strhi	r3, [r2, #44]	; 0x2c
    171c:	e5992030 	ldr	r2, [r9, #48]	; 0x30
    1720:	e5974008 	ldr	r4, [r7, #8]
    1724:	e1530002 	cmp	r3, r2
    1728:	95943004 	ldrls	r3, [r4, #4]
    172c:	85942004 	ldrhi	r2, [r4, #4]
    1730:	859f132c 	ldrhi	r1, [pc, #812]	; 1a64 <_malloc_r+0x714>
    1734:	93c33003 	bicls	r3, r3, #3
    1738:	85813030 	strhi	r3, [r1, #48]	; 0x30
    173c:	83c23003 	bichi	r3, r2, #3
    1740:	e1550003 	cmp	r5, r3
    1744:	e0653003 	rsb	r3, r5, r3
    1748:	8a000001 	bhi	1754 <_malloc_r+0x404>
    174c:	e353000f 	cmp	r3, #15
    1750:	ca000003 	bgt	1764 <_malloc_r+0x414>
    1754:	e1a00006 	mov	r0, r6
    1758:	eb0001db 	bl	1ecc <__malloc_unlock>
    175c:	e3a04000 	mov	r4, #0
    1760:	eaffff21 	b	13ec <_malloc_r+0x9c>
    1764:	e0842005 	add	r2, r4, r5
    1768:	e3833001 	orr	r3, r3, #1
    176c:	e3855001 	orr	r5, r5, #1
    1770:	e5845004 	str	r5, [r4, #4]
    1774:	e1a00006 	mov	r0, r6
    1778:	e5823004 	str	r3, [r2, #4]
    177c:	e5872008 	str	r2, [r7, #8]
    1780:	e2844008 	add	r4, r4, #8
    1784:	eb0001d0 	bl	1ecc <__malloc_unlock>
    1788:	eaffff17 	b	13ec <_malloc_r+0x9c>
    178c:	e0842002 	add	r2, r4, r2
    1790:	e5920004 	ldr	r0, [r2, #4]
    1794:	e2841008 	add	r1, r4, #8
    1798:	e891000a 	ldm	r1, {r1, r3}
    179c:	e3800001 	orr	r0, r0, #1
    17a0:	e5820004 	str	r0, [r2, #4]
    17a4:	e581300c 	str	r3, [r1, #12]
    17a8:	e5831008 	str	r1, [r3, #8]
    17ac:	e1a00006 	mov	r0, r6
    17b0:	eb0001c5 	bl	1ecc <__malloc_unlock>
    17b4:	e2844008 	add	r4, r4, #8
    17b8:	eaffff0b 	b	13ec <_malloc_r+0x9c>
    17bc:	e35e0014 	cmp	lr, #20
    17c0:	928ee05b 	addls	lr, lr, #91	; 0x5b
    17c4:	91a0108e 	lslls	r1, lr, #1
    17c8:	9affff0f 	bls	140c <_malloc_r+0xbc>
    17cc:	e35e0054 	cmp	lr, #84	; 0x54
    17d0:	8a000061 	bhi	195c <_malloc_r+0x60c>
    17d4:	e1a0e625 	lsr	lr, r5, #12
    17d8:	e28ee06e 	add	lr, lr, #110	; 0x6e
    17dc:	e1a0108e 	lsl	r1, lr, #1
    17e0:	eaffff09 	b	140c <_malloc_r+0xbc>
    17e4:	e1a034a2 	lsr	r3, r2, #9
    17e8:	e3530004 	cmp	r3, #4
    17ec:	9a00004f 	bls	1930 <_malloc_r+0x5e0>
    17f0:	e3530014 	cmp	r3, #20
    17f4:	9283a05b 	addls	r10, r3, #91	; 0x5b
    17f8:	91a0008a 	lslls	r0, r10, #1
    17fc:	9a000004 	bls	1814 <_malloc_r+0x4c4>
    1800:	e3530054 	cmp	r3, #84	; 0x54
    1804:	8a00007f 	bhi	1a08 <_malloc_r+0x6b8>
    1808:	e1a0a622 	lsr	r10, r2, #12
    180c:	e28aa06e 	add	r10, r10, #110	; 0x6e
    1810:	e1a0008a 	lsl	r0, r10, #1
    1814:	e0870100 	add	r0, r7, r0, lsl #2
    1818:	e5903008 	ldr	r3, [r0, #8]
    181c:	e1530000 	cmp	r3, r0
    1820:	e59fc238 	ldr	r12, [pc, #568]	; 1a60 <_malloc_r+0x710>
    1824:	0a000052 	beq	1974 <_malloc_r+0x624>
    1828:	e5931004 	ldr	r1, [r3, #4]
    182c:	e3c11003 	bic	r1, r1, #3
    1830:	e1520001 	cmp	r2, r1
    1834:	2a000002 	bcs	1844 <_malloc_r+0x4f4>
    1838:	e5933008 	ldr	r3, [r3, #8]
    183c:	e1500003 	cmp	r0, r3
    1840:	1afffff8 	bne	1828 <_malloc_r+0x4d8>
    1844:	e593200c 	ldr	r2, [r3, #12]
    1848:	e5971004 	ldr	r1, [r7, #4]
    184c:	e584200c 	str	r2, [r4, #12]
    1850:	e5843008 	str	r3, [r4, #8]
    1854:	e583400c 	str	r4, [r3, #12]
    1858:	e5824008 	str	r4, [r2, #8]
    185c:	eaffff19 	b	14c8 <_malloc_r+0x178>
    1860:	e0842005 	add	r2, r4, r5
    1864:	e3810001 	orr	r0, r1, #1
    1868:	e3855001 	orr	r5, r5, #1
    186c:	e5845004 	str	r5, [r4, #4]
    1870:	e5832014 	str	r2, [r3, #20]
    1874:	e5832010 	str	r2, [r3, #16]
    1878:	e582800c 	str	r8, [r2, #12]
    187c:	e9820101 	stmib	r2, {r0, r8}
    1880:	e7821001 	str	r1, [r2, r1]
    1884:	e1a00006 	mov	r0, r6
    1888:	eb00018f 	bl	1ecc <__malloc_unlock>
    188c:	e2844008 	add	r4, r4, #8
    1890:	eafffed5 	b	13ec <_malloc_r+0x9c>
    1894:	e2844001 	add	r4, r4, #1
    1898:	e3140003 	tst	r4, #3
    189c:	e28cc008 	add	r12, r12, #8
    18a0:	1affff1b 	bne	1514 <_malloc_r+0x1c4>
    18a4:	e31e0003 	tst	lr, #3
    18a8:	e24a3008 	sub	r3, r10, #8
    18ac:	0a000062 	beq	1a3c <_malloc_r+0x6ec>
    18b0:	e59aa000 	ldr	r10, [r10]
    18b4:	e15a0003 	cmp	r10, r3
    18b8:	e24ee001 	sub	lr, lr, #1
    18bc:	0afffff8 	beq	18a4 <_malloc_r+0x554>
    18c0:	e5973004 	ldr	r3, [r7, #4]
    18c4:	e1a00080 	lsl	r0, r0, #1
    18c8:	e1500003 	cmp	r0, r3
    18cc:	8affff3e 	bhi	15cc <_malloc_r+0x27c>
    18d0:	e3500000 	cmp	r0, #0
    18d4:	0affff3c 	beq	15cc <_malloc_r+0x27c>
    18d8:	e1130000 	tst	r3, r0
    18dc:	0a00005a 	beq	1a4c <_malloc_r+0x6fc>
    18e0:	e1a0e004 	mov	lr, r4
    18e4:	eaffff07 	b	1508 <_malloc_r+0x1b8>
    18e8:	e2843008 	add	r3, r4, #8
    18ec:	e5944014 	ldr	r4, [r4, #20]
    18f0:	e1530004 	cmp	r3, r4
    18f4:	028ee002 	addeq	lr, lr, #2
    18f8:	0afffed5 	beq	1454 <_malloc_r+0x104>
    18fc:	eafffead 	b	13b8 <_malloc_r+0x68>
    1900:	e0831001 	add	r1, r3, r1
    1904:	e5910004 	ldr	r0, [r1, #4]
    1908:	e1a04003 	mov	r4, r3
    190c:	e5b42008 	ldr	r2, [r4, #8]!
    1910:	e593300c 	ldr	r3, [r3, #12]
    1914:	e3800001 	orr	r0, r0, #1
    1918:	e5810004 	str	r0, [r1, #4]
    191c:	e582300c 	str	r3, [r2, #12]
    1920:	e5832008 	str	r2, [r3, #8]
    1924:	e1a00006 	mov	r0, r6
    1928:	eb000167 	bl	1ecc <__malloc_unlock>
    192c:	eafffeae 	b	13ec <_malloc_r+0x9c>
    1930:	e1a0a322 	lsr	r10, r2, #6
    1934:	e28aa038 	add	r10, r10, #56	; 0x38
    1938:	e1a0008a 	lsl	r0, r10, #1
    193c:	eaffffb4 	b	1814 <_malloc_r+0x4c4>
    1940:	e1540007 	cmp	r4, r7
    1944:	0affff3d 	beq	1640 <_malloc_r+0x2f0>
    1948:	e59f3110 	ldr	r3, [pc, #272]	; 1a60 <_malloc_r+0x710>
    194c:	e5934008 	ldr	r4, [r3, #8]
    1950:	e5943004 	ldr	r3, [r4, #4]
    1954:	e3c33003 	bic	r3, r3, #3
    1958:	eaffff78 	b	1740 <_malloc_r+0x3f0>
    195c:	e35e0f55 	cmp	lr, #340	; 0x154
    1960:	8a00000f 	bhi	19a4 <_malloc_r+0x654>
    1964:	e1a0e7a5 	lsr	lr, r5, #15
    1968:	e28ee077 	add	lr, lr, #119	; 0x77
    196c:	e1a0108e 	lsl	r1, lr, #1
    1970:	eafffea5 	b	140c <_malloc_r+0xbc>
    1974:	e59c2004 	ldr	r2, [r12, #4]
    1978:	e1a0a14a 	asr	r10, r10, #2
    197c:	e3a01001 	mov	r1, #1
    1980:	e1821a11 	orr	r1, r2, r1, lsl r10
    1984:	e1a02003 	mov	r2, r3
    1988:	e58c1004 	str	r1, [r12, #4]
    198c:	eaffffae 	b	184c <_malloc_r+0x4fc>
    1990:	e3a03001 	mov	r3, #1
    1994:	e5883004 	str	r3, [r8, #4]
    1998:	e1a04008 	mov	r4, r8
    199c:	e3a03000 	mov	r3, #0
    19a0:	eaffff66 	b	1740 <_malloc_r+0x3f0>
    19a4:	e59f30bc 	ldr	r3, [pc, #188]	; 1a68 <_malloc_r+0x718>
    19a8:	e15e0003 	cmp	lr, r3
    19ac:	91a0e925 	lsrls	lr, r5, #18
    19b0:	928ee07c 	addls	lr, lr, #124	; 0x7c
    19b4:	91a0108e 	lslls	r1, lr, #1
    19b8:	83a010fc 	movhi	r1, #252	; 0xfc
    19bc:	83a0e07e 	movhi	lr, #126	; 0x7e
    19c0:	eafffe91 	b	140c <_malloc_r+0xbc>
    19c4:	e5974008 	ldr	r4, [r7, #8]
    19c8:	e5943004 	ldr	r3, [r4, #4]
    19cc:	e3c33003 	bic	r3, r3, #3
    19d0:	eaffff5a 	b	1740 <_malloc_r+0x3f0>
    19d4:	e1b01a02 	lsls	r1, r2, #20
    19d8:	1affff1d 	bne	1654 <_malloc_r+0x304>
    19dc:	e5972008 	ldr	r2, [r7, #8]
    19e0:	e08b100a 	add	r1, r11, r10
    19e4:	e3811001 	orr	r1, r1, #1
    19e8:	e5821004 	str	r1, [r2, #4]
    19ec:	eaffff46 	b	170c <_malloc_r+0x3bc>
    19f0:	e1a00006 	mov	r0, r6
    19f4:	e2841008 	add	r1, r4, #8
    19f8:	eb00047a 	bl	2be8 <_free_r>
    19fc:	e59f3060 	ldr	r3, [pc, #96]	; 1a64 <_malloc_r+0x714>
    1a00:	e5933004 	ldr	r3, [r3, #4]
    1a04:	eaffff40 	b	170c <_malloc_r+0x3bc>
    1a08:	e3530f55 	cmp	r3, #340	; 0x154
    1a0c:	91a0a7a2 	lsrls	r10, r2, #15
    1a10:	928aa077 	addls	r10, r10, #119	; 0x77
    1a14:	91a0008a 	lslls	r0, r10, #1
    1a18:	9affff7d 	bls	1814 <_malloc_r+0x4c4>
    1a1c:	e59f1044 	ldr	r1, [pc, #68]	; 1a68 <_malloc_r+0x718>
    1a20:	e1530001 	cmp	r3, r1
    1a24:	91a0a922 	lsrls	r10, r2, #18
    1a28:	928aa07c 	addls	r10, r10, #124	; 0x7c
    1a2c:	91a0008a 	lslls	r0, r10, #1
    1a30:	83a000fc 	movhi	r0, #252	; 0xfc
    1a34:	83a0a07e 	movhi	r10, #126	; 0x7e
    1a38:	eaffff75 	b	1814 <_malloc_r+0x4c4>
    1a3c:	e5973004 	ldr	r3, [r7, #4]
    1a40:	e1c33000 	bic	r3, r3, r0
    1a44:	e5873004 	str	r3, [r7, #4]
    1a48:	eaffff9d 	b	18c4 <_malloc_r+0x574>
    1a4c:	e1a00080 	lsl	r0, r0, #1
    1a50:	e1130000 	tst	r3, r0
    1a54:	e2844004 	add	r4, r4, #4
    1a58:	1affffa0 	bne	18e0 <_malloc_r+0x590>
    1a5c:	eafffffa 	b	1a4c <_malloc_r+0x6fc>
    1a60:	000042f0 	.word	0x000042f0
    1a64:	00004724 	.word	0x00004724
    1a68:	00000554 	.word	0x00000554

00001a6c <memchr>:
    1a6c:	e3100003 	tst	r0, #3
    1a70:	e92d0070 	push	{r4, r5, r6}
    1a74:	e20110ff 	and	r1, r1, #255	; 0xff
    1a78:	0a00003c 	beq	1b70 <memchr+0x104>
    1a7c:	e3520000 	cmp	r2, #0
    1a80:	e242c001 	sub	r12, r2, #1
    1a84:	0a00003b 	beq	1b78 <memchr+0x10c>
    1a88:	e5d03000 	ldrb	r3, [r0]
    1a8c:	e1530001 	cmp	r3, r1
    1a90:	0a00001f 	beq	1b14 <memchr+0xa8>
    1a94:	e2803001 	add	r3, r0, #1
    1a98:	ea000006 	b	1ab8 <memchr+0x4c>
    1a9c:	e35c0000 	cmp	r12, #0
    1aa0:	0a00001d 	beq	1b1c <memchr+0xb0>
    1aa4:	e5d02000 	ldrb	r2, [r0]
    1aa8:	e1520001 	cmp	r2, r1
    1aac:	e2833001 	add	r3, r3, #1
    1ab0:	e24cc001 	sub	r12, r12, #1
    1ab4:	0a000016 	beq	1b14 <memchr+0xa8>
    1ab8:	e3130003 	tst	r3, #3
    1abc:	e1a00003 	mov	r0, r3
    1ac0:	1afffff5 	bne	1a9c <memchr+0x30>
    1ac4:	e35c0003 	cmp	r12, #3
    1ac8:	8a000015 	bhi	1b24 <memchr+0xb8>
    1acc:	e35c0000 	cmp	r12, #0
    1ad0:	e24c4001 	sub	r4, r12, #1
    1ad4:	0a000010 	beq	1b1c <memchr+0xb0>
    1ad8:	e5d03000 	ldrb	r3, [r0]
    1adc:	e1530001 	cmp	r3, r1
    1ae0:	0a00000b 	beq	1b14 <memchr+0xa8>
    1ae4:	e2802001 	add	r2, r0, #1
    1ae8:	e3a03000 	mov	r3, #0
    1aec:	ea000004 	b	1b04 <memchr+0x98>
    1af0:	e5d0c000 	ldrb	r12, [r0]
    1af4:	e15c0001 	cmp	r12, r1
    1af8:	e2822001 	add	r2, r2, #1
    1afc:	e2833001 	add	r3, r3, #1
    1b00:	0a000003 	beq	1b14 <memchr+0xa8>
    1b04:	e1540003 	cmp	r4, r3
    1b08:	e1a00002 	mov	r0, r2
    1b0c:	1afffff7 	bne	1af0 <memchr+0x84>
    1b10:	e3a00000 	mov	r0, #0
    1b14:	e8bd0070 	pop	{r4, r5, r6}
    1b18:	e12fff1e 	bx	lr
    1b1c:	e1a0000c 	mov	r0, r12
    1b20:	eafffffb 	b	1b14 <memchr+0xa8>
    1b24:	e1816401 	orr	r6, r1, r1, lsl #8
    1b28:	e1866806 	orr	r6, r6, r6, lsl #16
    1b2c:	e5903000 	ldr	r3, [r0]
    1b30:	e59f4048 	ldr	r4, [pc, #72]	; 1b80 <memchr+0x114>
    1b34:	e0263003 	eor	r3, r6, r3
    1b38:	e0834004 	add	r4, r3, r4
    1b3c:	e59f2040 	ldr	r2, [pc, #64]	; 1b84 <memchr+0x118>
    1b40:	e1c44003 	bic	r4, r4, r3
    1b44:	e0042002 	and	r2, r4, r2
    1b48:	e3520000 	cmp	r2, #0
    1b4c:	e1a05000 	mov	r5, r0
    1b50:	e2800004 	add	r0, r0, #4
    1b54:	1a000003 	bne	1b68 <memchr+0xfc>
    1b58:	e24cc004 	sub	r12, r12, #4
    1b5c:	e35c0003 	cmp	r12, #3
    1b60:	8afffff1 	bhi	1b2c <memchr+0xc0>
    1b64:	eaffffd8 	b	1acc <memchr+0x60>
    1b68:	e1a00005 	mov	r0, r5
    1b6c:	eaffffd6 	b	1acc <memchr+0x60>
    1b70:	e1a0c002 	mov	r12, r2
    1b74:	eaffffd2 	b	1ac4 <memchr+0x58>
    1b78:	e1a00002 	mov	r0, r2
    1b7c:	eaffffe4 	b	1b14 <memchr+0xa8>
    1b80:	fefefeff 	.word	0xfefefeff
    1b84:	80808080 	.word	0x80808080

00001b88 <memcpy>:
    1b88:	e3520003 	cmp	r2, #3
    1b8c:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    1b90:	8a000009 	bhi	1bbc <memcpy+0x34>
    1b94:	e3520000 	cmp	r2, #0
    1b98:	0a000005 	beq	1bb4 <memcpy+0x2c>
    1b9c:	e3a03000 	mov	r3, #0
    1ba0:	e7d1c003 	ldrb	r12, [r1, r3]
    1ba4:	e7c0c003 	strb	r12, [r0, r3]
    1ba8:	e2833001 	add	r3, r3, #1
    1bac:	e1530002 	cmp	r3, r2
    1bb0:	1afffffa 	bne	1ba0 <memcpy+0x18>
    1bb4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
    1bb8:	e12fff1e 	bx	lr
    1bbc:	e3100003 	tst	r0, #3
    1bc0:	e0802002 	add	r2, r0, r2
    1bc4:	0a00000b 	beq	1bf8 <memcpy+0x70>
    1bc8:	e280c001 	add	r12, r0, #1
    1bcc:	e2814001 	add	r4, r1, #1
    1bd0:	e20c3003 	and	r3, r12, #3
    1bd4:	e5545001 	ldrb	r5, [r4, #-1]
    1bd8:	e3530000 	cmp	r3, #0
    1bdc:	e1a01004 	mov	r1, r4
    1be0:	e1a0300c 	mov	r3, r12
    1be4:	e54c5001 	strb	r5, [r12, #-1]
    1be8:	e2844001 	add	r4, r4, #1
    1bec:	e28cc001 	add	r12, r12, #1
    1bf0:	1afffff6 	bne	1bd0 <memcpy+0x48>
    1bf4:	ea000000 	b	1bfc <memcpy+0x74>
    1bf8:	e1a03000 	mov	r3, r0
    1bfc:	e211c003 	ands	r12, r1, #3
    1c00:	1a00004f 	bne	1d44 <memcpy+0x1bc>
    1c04:	e063c002 	rsb	r12, r3, r2
    1c08:	e35c003f 	cmp	r12, #63	; 0x3f
    1c0c:	da000024 	ble	1ca4 <memcpy+0x11c>
    1c10:	e591c000 	ldr	r12, [r1]
    1c14:	e583c000 	str	r12, [r3]
    1c18:	e591c004 	ldr	r12, [r1, #4]
    1c1c:	e583c004 	str	r12, [r3, #4]
    1c20:	e591c008 	ldr	r12, [r1, #8]
    1c24:	e583c008 	str	r12, [r3, #8]
    1c28:	e591c00c 	ldr	r12, [r1, #12]
    1c2c:	e583c00c 	str	r12, [r3, #12]
    1c30:	e591c010 	ldr	r12, [r1, #16]
    1c34:	e583c010 	str	r12, [r3, #16]
    1c38:	e591c014 	ldr	r12, [r1, #20]
    1c3c:	e583c014 	str	r12, [r3, #20]
    1c40:	e591c018 	ldr	r12, [r1, #24]
    1c44:	e583c018 	str	r12, [r3, #24]
    1c48:	e591c01c 	ldr	r12, [r1, #28]
    1c4c:	e583c01c 	str	r12, [r3, #28]
    1c50:	e591c020 	ldr	r12, [r1, #32]
    1c54:	e583c020 	str	r12, [r3, #32]
    1c58:	e591c024 	ldr	r12, [r1, #36]	; 0x24
    1c5c:	e583c024 	str	r12, [r3, #36]	; 0x24
    1c60:	e591c028 	ldr	r12, [r1, #40]	; 0x28
    1c64:	e583c028 	str	r12, [r3, #40]	; 0x28
    1c68:	e591c02c 	ldr	r12, [r1, #44]	; 0x2c
    1c6c:	e583c02c 	str	r12, [r3, #44]	; 0x2c
    1c70:	e591c030 	ldr	r12, [r1, #48]	; 0x30
    1c74:	e583c030 	str	r12, [r3, #48]	; 0x30
    1c78:	e591c034 	ldr	r12, [r1, #52]	; 0x34
    1c7c:	e583c034 	str	r12, [r3, #52]	; 0x34
    1c80:	e591c038 	ldr	r12, [r1, #56]	; 0x38
    1c84:	e583c038 	str	r12, [r3, #56]	; 0x38
    1c88:	e591c03c 	ldr	r12, [r1, #60]	; 0x3c
    1c8c:	e2833040 	add	r3, r3, #64	; 0x40
    1c90:	e503c004 	str	r12, [r3, #-4]
    1c94:	e063c002 	rsb	r12, r3, r2
    1c98:	e35c003f 	cmp	r12, #63	; 0x3f
    1c9c:	e2811040 	add	r1, r1, #64	; 0x40
    1ca0:	caffffda 	bgt	1c10 <memcpy+0x88>
    1ca4:	e35c000f 	cmp	r12, #15
    1ca8:	da00000c 	ble	1ce0 <memcpy+0x158>
    1cac:	e591c000 	ldr	r12, [r1]
    1cb0:	e583c000 	str	r12, [r3]
    1cb4:	e591c004 	ldr	r12, [r1, #4]
    1cb8:	e583c004 	str	r12, [r3, #4]
    1cbc:	e591c008 	ldr	r12, [r1, #8]
    1cc0:	e583c008 	str	r12, [r3, #8]
    1cc4:	e591c00c 	ldr	r12, [r1, #12]
    1cc8:	e2833010 	add	r3, r3, #16
    1ccc:	e503c004 	str	r12, [r3, #-4]
    1cd0:	e063c002 	rsb	r12, r3, r2
    1cd4:	e35c000f 	cmp	r12, #15
    1cd8:	e2811010 	add	r1, r1, #16
    1cdc:	cafffff2 	bgt	1cac <memcpy+0x124>
    1ce0:	e35c0003 	cmp	r12, #3
    1ce4:	da00000a 	ble	1d14 <memcpy+0x18c>
    1ce8:	e283c004 	add	r12, r3, #4
    1cec:	e2814004 	add	r4, r1, #4
    1cf0:	e06c3002 	rsb	r3, r12, r2
    1cf4:	e5145004 	ldr	r5, [r4, #-4]
    1cf8:	e3530003 	cmp	r3, #3
    1cfc:	e1a01004 	mov	r1, r4
    1d00:	e1a0300c 	mov	r3, r12
    1d04:	e50c5004 	str	r5, [r12, #-4]
    1d08:	e2844004 	add	r4, r4, #4
    1d0c:	e28cc004 	add	r12, r12, #4
    1d10:	cafffff6 	bgt	1cf0 <memcpy+0x168>
    1d14:	e1520003 	cmp	r2, r3
    1d18:	82833001 	addhi	r3, r3, #1
    1d1c:	82811001 	addhi	r1, r1, #1
    1d20:	82822001 	addhi	r2, r2, #1
    1d24:	9affffa2 	bls	1bb4 <memcpy+0x2c>
    1d28:	e551c001 	ldrb	r12, [r1, #-1]
    1d2c:	e2833001 	add	r3, r3, #1
    1d30:	e1530002 	cmp	r3, r2
    1d34:	e543c002 	strb	r12, [r3, #-2]
    1d38:	e2811001 	add	r1, r1, #1
    1d3c:	1afffff9 	bne	1d28 <memcpy+0x1a0>
    1d40:	eaffff9b 	b	1bb4 <memcpy+0x2c>
    1d44:	e0635002 	rsb	r5, r3, r2
    1d48:	e06c4001 	rsb	r4, r12, r1
    1d4c:	e3550003 	cmp	r5, #3
    1d50:	e5945000 	ldr	r5, [r4]
    1d54:	daffffee 	ble	1d14 <memcpy+0x18c>
    1d58:	e26c6004 	rsb	r6, r12, #4
    1d5c:	e1a0718c 	lsl	r7, r12, #3
    1d60:	e1a06186 	lsl	r6, r6, #3
    1d64:	e283c004 	add	r12, r3, #4
    1d68:	e1a08735 	lsr	r8, r5, r7
    1d6c:	e5b45004 	ldr	r5, [r4, #4]!
    1d70:	e1888615 	orr	r8, r8, r5, lsl r6
    1d74:	e06c3002 	rsb	r3, r12, r2
    1d78:	e3530003 	cmp	r3, #3
    1d7c:	e50c8004 	str	r8, [r12, #-4]
    1d80:	e1a0300c 	mov	r3, r12
    1d84:	e2811004 	add	r1, r1, #4
    1d88:	e28cc004 	add	r12, r12, #4
    1d8c:	cafffff5 	bgt	1d68 <memcpy+0x1e0>
    1d90:	eaffffdf 	b	1d14 <memcpy+0x18c>

00001d94 <memmove>:
    1d94:	e1500001 	cmp	r0, r1
    1d98:	e92d00f0 	push	{r4, r5, r6, r7}
    1d9c:	9a00000e 	bls	1ddc <memmove+0x48>
    1da0:	e081c002 	add	r12, r1, r2
    1da4:	e150000c 	cmp	r0, r12
    1da8:	2a00000b 	bcs	1ddc <memmove+0x48>
    1dac:	e3520000 	cmp	r2, #0
    1db0:	e0803002 	add	r3, r0, r2
    1db4:	e2422001 	sub	r2, r2, #1
    1db8:	0a000005 	beq	1dd4 <memmove+0x40>
    1dbc:	e1a0100c 	mov	r1, r12
    1dc0:	e571c001 	ldrb	r12, [r1, #-1]!
    1dc4:	e2422001 	sub	r2, r2, #1
    1dc8:	e3720001 	cmn	r2, #1
    1dcc:	e563c001 	strb	r12, [r3, #-1]!
    1dd0:	1afffffa 	bne	1dc0 <memmove+0x2c>
    1dd4:	e8bd00f0 	pop	{r4, r5, r6, r7}
    1dd8:	e12fff1e 	bx	lr
    1ddc:	e352000f 	cmp	r2, #15
    1de0:	8a000009 	bhi	1e0c <memmove+0x78>
    1de4:	e1a03000 	mov	r3, r0
    1de8:	e3520000 	cmp	r2, #0
    1dec:	0afffff8 	beq	1dd4 <memmove+0x40>
    1df0:	e2411001 	sub	r1, r1, #1
    1df4:	e0832002 	add	r2, r3, r2
    1df8:	e5f1c001 	ldrb	r12, [r1, #1]!
    1dfc:	e4c3c001 	strb	r12, [r3], #1
    1e00:	e1530002 	cmp	r3, r2
    1e04:	1afffffb 	bne	1df8 <memmove+0x64>
    1e08:	eafffff1 	b	1dd4 <memmove+0x40>
    1e0c:	e1813000 	orr	r3, r1, r0
    1e10:	e3130003 	tst	r3, #3
    1e14:	1a000027 	bne	1eb8 <memmove+0x124>
    1e18:	e1a0c001 	mov	r12, r1
    1e1c:	e1a03000 	mov	r3, r0
    1e20:	e1a04002 	mov	r4, r2
    1e24:	e59c5000 	ldr	r5, [r12]
    1e28:	e5835000 	str	r5, [r3]
    1e2c:	e59c5004 	ldr	r5, [r12, #4]
    1e30:	e5835004 	str	r5, [r3, #4]
    1e34:	e59c5008 	ldr	r5, [r12, #8]
    1e38:	e5835008 	str	r5, [r3, #8]
    1e3c:	e2444010 	sub	r4, r4, #16
    1e40:	e59c500c 	ldr	r5, [r12, #12]
    1e44:	e354000f 	cmp	r4, #15
    1e48:	e583500c 	str	r5, [r3, #12]
    1e4c:	e28cc010 	add	r12, r12, #16
    1e50:	e2833010 	add	r3, r3, #16
    1e54:	8afffff2 	bhi	1e24 <memmove+0x90>
    1e58:	e2424010 	sub	r4, r2, #16
    1e5c:	e3c4400f 	bic	r4, r4, #15
    1e60:	e202c00f 	and	r12, r2, #15
    1e64:	e2844010 	add	r4, r4, #16
    1e68:	e35c0003 	cmp	r12, #3
    1e6c:	e0803004 	add	r3, r0, r4
    1e70:	e0811004 	add	r1, r1, r4
    1e74:	9a000011 	bls	1ec0 <memmove+0x12c>
    1e78:	e24cc004 	sub	r12, r12, #4
    1e7c:	e1a0712c 	lsr	r7, r12, #2
    1e80:	e0816107 	add	r6, r1, r7, lsl #2
    1e84:	e1a0c001 	mov	r12, r1
    1e88:	e2866004 	add	r6, r6, #4
    1e8c:	e1a04003 	mov	r4, r3
    1e90:	e49c5004 	ldr	r5, [r12], #4
    1e94:	e15c0006 	cmp	r12, r6
    1e98:	e4845004 	str	r5, [r4], #4
    1e9c:	1afffffb 	bne	1e90 <memmove+0xfc>
    1ea0:	e287c001 	add	r12, r7, #1
    1ea4:	e1a0c10c 	lsl	r12, r12, #2
    1ea8:	e2022003 	and	r2, r2, #3
    1eac:	e081100c 	add	r1, r1, r12
    1eb0:	e083300c 	add	r3, r3, r12
    1eb4:	eaffffcb 	b	1de8 <memmove+0x54>
    1eb8:	e1a03000 	mov	r3, r0
    1ebc:	eaffffcb 	b	1df0 <memmove+0x5c>
    1ec0:	e1a0200c 	mov	r2, r12
    1ec4:	eaffffc7 	b	1de8 <memmove+0x54>

00001ec8 <__malloc_lock>:
    1ec8:	e12fff1e 	bx	lr

00001ecc <__malloc_unlock>:
    1ecc:	e12fff1e 	bx	lr

00001ed0 <_realloc_r>:
    1ed0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    1ed4:	e2514000 	subs	r4, r1, #0
    1ed8:	e24dd00c 	sub	sp, sp, #12
    1edc:	e1a08000 	mov	r8, r0
    1ee0:	e1a0b002 	mov	r11, r2
    1ee4:	0a0000d1 	beq	2230 <_realloc_r+0x360>
    1ee8:	ebfffff6 	bl	1ec8 <__malloc_lock>
    1eec:	e28b500b 	add	r5, r11, #11
    1ef0:	e3550016 	cmp	r5, #22
    1ef4:	83c55007 	bichi	r5, r5, #7
    1ef8:	93a01010 	movls	r1, #16
    1efc:	81a06fa5 	lsrhi	r6, r5, #31
    1f00:	93a06000 	movls	r6, #0
    1f04:	91a05001 	movls	r5, r1
    1f08:	e5143004 	ldr	r3, [r4, #-4]
    1f0c:	81a01005 	movhi	r1, r5
    1f10:	e155000b 	cmp	r5, r11
    1f14:	33866001 	orrcc	r6, r6, #1
    1f18:	e3560000 	cmp	r6, #0
    1f1c:	e3c37003 	bic	r7, r3, #3
    1f20:	13a0300c 	movne	r3, #12
    1f24:	e244a008 	sub	r10, r4, #8
    1f28:	15883000 	strne	r3, [r8]
    1f2c:	13a06000 	movne	r6, #0
    1f30:	1a00000f 	bne	1f74 <_realloc_r+0xa4>
    1f34:	e1570001 	cmp	r7, r1
    1f38:	ba000011 	blt	1f84 <_realloc_r+0xb4>
    1f3c:	e1a06007 	mov	r6, r7
    1f40:	e0652006 	rsb	r2, r5, r6
    1f44:	e352000f 	cmp	r2, #15
    1f48:	e2033001 	and	r3, r3, #1
    1f4c:	8a00005e 	bhi	20cc <_realloc_r+0x1fc>
    1f50:	e1833006 	orr	r3, r3, r6
    1f54:	e58a3004 	str	r3, [r10, #4]
    1f58:	e08aa006 	add	r10, r10, r6
    1f5c:	e59a3004 	ldr	r3, [r10, #4]
    1f60:	e3833001 	orr	r3, r3, #1
    1f64:	e58a3004 	str	r3, [r10, #4]
    1f68:	e1a00008 	mov	r0, r8
    1f6c:	ebffffd6 	bl	1ecc <__malloc_unlock>
    1f70:	e1a06004 	mov	r6, r4
    1f74:	e1a00006 	mov	r0, r6
    1f78:	e28dd00c 	add	sp, sp, #12
    1f7c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    1f80:	e12fff1e 	bx	lr
    1f84:	e59f24b4 	ldr	r2, [pc, #1204]	; 2440 <_realloc_r+0x570>
    1f88:	e592c008 	ldr	r12, [r2, #8]
    1f8c:	e08a0007 	add	r0, r10, r7
    1f90:	e15c0000 	cmp	r12, r0
    1f94:	0a0000a9 	beq	2240 <_realloc_r+0x370>
    1f98:	e590e004 	ldr	lr, [r0, #4]
    1f9c:	e3ce9001 	bic	r9, lr, #1
    1fa0:	e0809009 	add	r9, r0, r9
    1fa4:	e5999004 	ldr	r9, [r9, #4]
    1fa8:	e3190001 	tst	r9, #1
    1fac:	11a0e006 	movne	lr, r6
    1fb0:	11a0000e 	movne	r0, lr
    1fb4:	0a00003b 	beq	20a8 <_realloc_r+0x1d8>
    1fb8:	e3130001 	tst	r3, #1
    1fbc:	1a00004f 	bne	2100 <_realloc_r+0x230>
    1fc0:	e5149008 	ldr	r9, [r4, #-8]
    1fc4:	e069900a 	rsb	r9, r9, r10
    1fc8:	e5993004 	ldr	r3, [r9, #4]
    1fcc:	e3500000 	cmp	r0, #0
    1fd0:	e3c33003 	bic	r3, r3, #3
    1fd4:	0a000067 	beq	2178 <_realloc_r+0x2a8>
    1fd8:	e150000c 	cmp	r0, r12
    1fdc:	e083c007 	add	r12, r3, r7
    1fe0:	0a0000ce 	beq	2320 <_realloc_r+0x450>
    1fe4:	e08e600c 	add	r6, lr, r12
    1fe8:	e1560001 	cmp	r6, r1
    1fec:	ba000062 	blt	217c <_realloc_r+0x2ac>
    1ff0:	e2802008 	add	r2, r0, #8
    1ff4:	e892000c 	ldm	r2, {r2, r3}
    1ff8:	e5832008 	str	r2, [r3, #8]
    1ffc:	e582300c 	str	r3, [r2, #12]
    2000:	e1a0a009 	mov	r10, r9
    2004:	e599300c 	ldr	r3, [r9, #12]
    2008:	e5ba1008 	ldr	r1, [r10, #8]!
    200c:	e2472004 	sub	r2, r7, #4
    2010:	e3520024 	cmp	r2, #36	; 0x24
    2014:	e581300c 	str	r3, [r1, #12]
    2018:	e5831008 	str	r1, [r3, #8]
    201c:	8a0000fa 	bhi	240c <_realloc_r+0x53c>
    2020:	e3520013 	cmp	r2, #19
    2024:	91a0300a 	movls	r3, r10
    2028:	9a000014 	bls	2080 <_realloc_r+0x1b0>
    202c:	e5943000 	ldr	r3, [r4]
    2030:	e5893008 	str	r3, [r9, #8]
    2034:	e5943004 	ldr	r3, [r4, #4]
    2038:	e352001b 	cmp	r2, #27
    203c:	e589300c 	str	r3, [r9, #12]
    2040:	92844008 	addls	r4, r4, #8
    2044:	92893010 	addls	r3, r9, #16
    2048:	9a00000c 	bls	2080 <_realloc_r+0x1b0>
    204c:	e5943008 	ldr	r3, [r4, #8]
    2050:	e5893010 	str	r3, [r9, #16]
    2054:	e594300c 	ldr	r3, [r4, #12]
    2058:	e5893014 	str	r3, [r9, #20]
    205c:	e3520024 	cmp	r2, #36	; 0x24
    2060:	05943010 	ldreq	r3, [r4, #16]
    2064:	05893018 	streq	r3, [r9, #24]
    2068:	05942014 	ldreq	r2, [r4, #20]
    206c:	0589201c 	streq	r2, [r9, #28]
    2070:	12893018 	addne	r3, r9, #24
    2074:	12844010 	addne	r4, r4, #16
    2078:	02893020 	addeq	r3, r9, #32
    207c:	02844018 	addeq	r4, r4, #24
    2080:	e5942000 	ldr	r2, [r4]
    2084:	e5832000 	str	r2, [r3]
    2088:	e5942004 	ldr	r2, [r4, #4]
    208c:	e5832004 	str	r2, [r3, #4]
    2090:	e5942008 	ldr	r2, [r4, #8]
    2094:	e5832008 	str	r2, [r3, #8]
    2098:	e1a0400a 	mov	r4, r10
    209c:	e5993004 	ldr	r3, [r9, #4]
    20a0:	e1a0a009 	mov	r10, r9
    20a4:	eaffffa5 	b	1f40 <_realloc_r+0x70>
    20a8:	e3cee003 	bic	lr, lr, #3
    20ac:	e08e6007 	add	r6, lr, r7
    20b0:	e1560001 	cmp	r6, r1
    20b4:	baffffbf 	blt	1fb8 <_realloc_r+0xe8>
    20b8:	e2801008 	add	r1, r0, #8
    20bc:	e8910006 	ldm	r1, {r1, r2}
    20c0:	e581200c 	str	r2, [r1, #12]
    20c4:	e5821008 	str	r1, [r2, #8]
    20c8:	eaffff9c 	b	1f40 <_realloc_r+0x70>
    20cc:	e08a1005 	add	r1, r10, r5
    20d0:	e3820001 	orr	r0, r2, #1
    20d4:	e1835005 	orr	r5, r3, r5
    20d8:	e58a5004 	str	r5, [r10, #4]
    20dc:	e5810004 	str	r0, [r1, #4]
    20e0:	e0812002 	add	r2, r1, r2
    20e4:	e5923004 	ldr	r3, [r2, #4]
    20e8:	e3833001 	orr	r3, r3, #1
    20ec:	e5823004 	str	r3, [r2, #4]
    20f0:	e1a00008 	mov	r0, r8
    20f4:	e2811008 	add	r1, r1, #8
    20f8:	eb0002ba 	bl	2be8 <_free_r>
    20fc:	eaffff99 	b	1f68 <_realloc_r+0x98>
    2100:	e1a00008 	mov	r0, r8
    2104:	e1a0100b 	mov	r1, r11
    2108:	ebfffc90 	bl	1350 <_malloc_r>
    210c:	e2506000 	subs	r6, r0, #0
    2110:	0a000015 	beq	216c <_realloc_r+0x29c>
    2114:	e5143004 	ldr	r3, [r4, #-4]
    2118:	e3c32001 	bic	r2, r3, #1
    211c:	e2461008 	sub	r1, r6, #8
    2120:	e08a2002 	add	r2, r10, r2
    2124:	e1510002 	cmp	r1, r2
    2128:	0a0000b3 	beq	23fc <_realloc_r+0x52c>
    212c:	e2472004 	sub	r2, r7, #4
    2130:	e3520024 	cmp	r2, #36	; 0x24
    2134:	8a000076 	bhi	2314 <_realloc_r+0x444>
    2138:	e3520013 	cmp	r2, #19
    213c:	91a03006 	movls	r3, r6
    2140:	91a02004 	movls	r2, r4
    2144:	8a000052 	bhi	2294 <_realloc_r+0x3c4>
    2148:	e5921000 	ldr	r1, [r2]
    214c:	e5831000 	str	r1, [r3]
    2150:	e5921004 	ldr	r1, [r2, #4]
    2154:	e5831004 	str	r1, [r3, #4]
    2158:	e5922008 	ldr	r2, [r2, #8]
    215c:	e5832008 	str	r2, [r3, #8]
    2160:	e1a00008 	mov	r0, r8
    2164:	e1a01004 	mov	r1, r4
    2168:	eb00029e 	bl	2be8 <_free_r>
    216c:	e1a00008 	mov	r0, r8
    2170:	ebffff55 	bl	1ecc <__malloc_unlock>
    2174:	eaffff7e 	b	1f74 <_realloc_r+0xa4>
    2178:	e083c007 	add	r12, r3, r7
    217c:	e15c0001 	cmp	r12, r1
    2180:	baffffde 	blt	2100 <_realloc_r+0x230>
    2184:	e1a06009 	mov	r6, r9
    2188:	e599300c 	ldr	r3, [r9, #12]
    218c:	e5b61008 	ldr	r1, [r6, #8]!
    2190:	e2472004 	sub	r2, r7, #4
    2194:	e3520024 	cmp	r2, #36	; 0x24
    2198:	e581300c 	str	r3, [r1, #12]
    219c:	e5831008 	str	r1, [r3, #8]
    21a0:	8a000051 	bhi	22ec <_realloc_r+0x41c>
    21a4:	e3520013 	cmp	r2, #19
    21a8:	91a03006 	movls	r3, r6
    21ac:	9a000014 	bls	2204 <_realloc_r+0x334>
    21b0:	e5943000 	ldr	r3, [r4]
    21b4:	e5893008 	str	r3, [r9, #8]
    21b8:	e5943004 	ldr	r3, [r4, #4]
    21bc:	e352001b 	cmp	r2, #27
    21c0:	e589300c 	str	r3, [r9, #12]
    21c4:	92844008 	addls	r4, r4, #8
    21c8:	92893010 	addls	r3, r9, #16
    21cc:	9a00000c 	bls	2204 <_realloc_r+0x334>
    21d0:	e5943008 	ldr	r3, [r4, #8]
    21d4:	e5893010 	str	r3, [r9, #16]
    21d8:	e594300c 	ldr	r3, [r4, #12]
    21dc:	e5893014 	str	r3, [r9, #20]
    21e0:	e3520024 	cmp	r2, #36	; 0x24
    21e4:	05943010 	ldreq	r3, [r4, #16]
    21e8:	05893018 	streq	r3, [r9, #24]
    21ec:	05942014 	ldreq	r2, [r4, #20]
    21f0:	0589201c 	streq	r2, [r9, #28]
    21f4:	12893018 	addne	r3, r9, #24
    21f8:	12844010 	addne	r4, r4, #16
    21fc:	02893020 	addeq	r3, r9, #32
    2200:	02844018 	addeq	r4, r4, #24
    2204:	e5942000 	ldr	r2, [r4]
    2208:	e5832000 	str	r2, [r3]
    220c:	e5942004 	ldr	r2, [r4, #4]
    2210:	e5832004 	str	r2, [r3, #4]
    2214:	e5942008 	ldr	r2, [r4, #8]
    2218:	e5832008 	str	r2, [r3, #8]
    221c:	e1a04006 	mov	r4, r6
    2220:	e5993004 	ldr	r3, [r9, #4]
    2224:	e1a0600c 	mov	r6, r12
    2228:	e1a0a009 	mov	r10, r9
    222c:	eaffff43 	b	1f40 <_realloc_r+0x70>
    2230:	e1a01002 	mov	r1, r2
    2234:	ebfffc45 	bl	1350 <_malloc_r>
    2238:	e1a06000 	mov	r6, r0
    223c:	eaffff4c 	b	1f74 <_realloc_r+0xa4>
    2240:	e59ce004 	ldr	lr, [r12, #4]
    2244:	e3cee003 	bic	lr, lr, #3
    2248:	e08e0007 	add	r0, lr, r7
    224c:	e2856010 	add	r6, r5, #16
    2250:	e1500006 	cmp	r0, r6
    2254:	b1a0000c 	movlt	r0, r12
    2258:	baffff56 	blt	1fb8 <_realloc_r+0xe8>
    225c:	e0653000 	rsb	r3, r5, r0
    2260:	e08aa005 	add	r10, r10, r5
    2264:	e3833001 	orr	r3, r3, #1
    2268:	e58a3004 	str	r3, [r10, #4]
    226c:	e5143004 	ldr	r3, [r4, #-4]
    2270:	e2033001 	and	r3, r3, #1
    2274:	e1855003 	orr	r5, r5, r3
    2278:	e59f31c0 	ldr	r3, [pc, #448]	; 2440 <_realloc_r+0x570>
    227c:	e5045004 	str	r5, [r4, #-4]
    2280:	e1a00008 	mov	r0, r8
    2284:	e583a008 	str	r10, [r3, #8]
    2288:	e1a06004 	mov	r6, r4
    228c:	ebffff0e 	bl	1ecc <__malloc_unlock>
    2290:	eaffff37 	b	1f74 <_realloc_r+0xa4>
    2294:	e5943000 	ldr	r3, [r4]
    2298:	e5863000 	str	r3, [r6]
    229c:	e5943004 	ldr	r3, [r4, #4]
    22a0:	e352001b 	cmp	r2, #27
    22a4:	e5863004 	str	r3, [r6, #4]
    22a8:	92842008 	addls	r2, r4, #8
    22ac:	92863008 	addls	r3, r6, #8
    22b0:	9affffa4 	bls	2148 <_realloc_r+0x278>
    22b4:	e5943008 	ldr	r3, [r4, #8]
    22b8:	e5863008 	str	r3, [r6, #8]
    22bc:	e594300c 	ldr	r3, [r4, #12]
    22c0:	e586300c 	str	r3, [r6, #12]
    22c4:	e3520024 	cmp	r2, #36	; 0x24
    22c8:	05943010 	ldreq	r3, [r4, #16]
    22cc:	05863010 	streq	r3, [r6, #16]
    22d0:	05942014 	ldreq	r2, [r4, #20]
    22d4:	12863010 	addne	r3, r6, #16
    22d8:	05862014 	streq	r2, [r6, #20]
    22dc:	12842010 	addne	r2, r4, #16
    22e0:	02863018 	addeq	r3, r6, #24
    22e4:	02842018 	addeq	r2, r4, #24
    22e8:	eaffff96 	b	2148 <_realloc_r+0x278>
    22ec:	e1a01004 	mov	r1, r4
    22f0:	e1a00006 	mov	r0, r6
    22f4:	e58dc004 	str	r12, [sp, #4]
    22f8:	ebfffea5 	bl	1d94 <memmove>
    22fc:	e59dc004 	ldr	r12, [sp, #4]
    2300:	e1a04006 	mov	r4, r6
    2304:	e5993004 	ldr	r3, [r9, #4]
    2308:	e1a0600c 	mov	r6, r12
    230c:	e1a0a009 	mov	r10, r9
    2310:	eaffff0a 	b	1f40 <_realloc_r+0x70>
    2314:	e1a01004 	mov	r1, r4
    2318:	ebfffe9d 	bl	1d94 <memmove>
    231c:	eaffff8f 	b	2160 <_realloc_r+0x290>
    2320:	e08e300c 	add	r3, lr, r12
    2324:	e2850010 	add	r0, r5, #16
    2328:	e1530000 	cmp	r3, r0
    232c:	baffff92 	blt	217c <_realloc_r+0x2ac>
    2330:	e1a06009 	mov	r6, r9
    2334:	e599100c 	ldr	r1, [r9, #12]
    2338:	e5b60008 	ldr	r0, [r6, #8]!
    233c:	e2472004 	sub	r2, r7, #4
    2340:	e3520024 	cmp	r2, #36	; 0x24
    2344:	e580100c 	str	r1, [r0, #12]
    2348:	e5810008 	str	r0, [r1, #8]
    234c:	8a000035 	bhi	2428 <_realloc_r+0x558>
    2350:	e3520013 	cmp	r2, #19
    2354:	91a02006 	movls	r2, r6
    2358:	9a000014 	bls	23b0 <_realloc_r+0x4e0>
    235c:	e5941000 	ldr	r1, [r4]
    2360:	e5891008 	str	r1, [r9, #8]
    2364:	e5941004 	ldr	r1, [r4, #4]
    2368:	e352001b 	cmp	r2, #27
    236c:	e589100c 	str	r1, [r9, #12]
    2370:	92892010 	addls	r2, r9, #16
    2374:	92844008 	addls	r4, r4, #8
    2378:	9a00000c 	bls	23b0 <_realloc_r+0x4e0>
    237c:	e5941008 	ldr	r1, [r4, #8]
    2380:	e5891010 	str	r1, [r9, #16]
    2384:	e594100c 	ldr	r1, [r4, #12]
    2388:	e5891014 	str	r1, [r9, #20]
    238c:	e3520024 	cmp	r2, #36	; 0x24
    2390:	05942010 	ldreq	r2, [r4, #16]
    2394:	05892018 	streq	r2, [r9, #24]
    2398:	05941014 	ldreq	r1, [r4, #20]
    239c:	0589101c 	streq	r1, [r9, #28]
    23a0:	12892018 	addne	r2, r9, #24
    23a4:	12844010 	addne	r4, r4, #16
    23a8:	02892020 	addeq	r2, r9, #32
    23ac:	02844018 	addeq	r4, r4, #24
    23b0:	e5941000 	ldr	r1, [r4]
    23b4:	e5821000 	str	r1, [r2]
    23b8:	e5941004 	ldr	r1, [r4, #4]
    23bc:	e5821004 	str	r1, [r2, #4]
    23c0:	e5941008 	ldr	r1, [r4, #8]
    23c4:	e5821008 	str	r1, [r2, #8]
    23c8:	e0653003 	rsb	r3, r5, r3
    23cc:	e0892005 	add	r2, r9, r5
    23d0:	e3833001 	orr	r3, r3, #1
    23d4:	e5823004 	str	r3, [r2, #4]
    23d8:	e5993004 	ldr	r3, [r9, #4]
    23dc:	e2033001 	and	r3, r3, #1
    23e0:	e1855003 	orr	r5, r5, r3
    23e4:	e59f3054 	ldr	r3, [pc, #84]	; 2440 <_realloc_r+0x570>
    23e8:	e5895004 	str	r5, [r9, #4]
    23ec:	e1a00008 	mov	r0, r8
    23f0:	e5832008 	str	r2, [r3, #8]
    23f4:	ebfffeb4 	bl	1ecc <__malloc_unlock>
    23f8:	eafffedd 	b	1f74 <_realloc_r+0xa4>
    23fc:	e5166004 	ldr	r6, [r6, #-4]
    2400:	e3c66003 	bic	r6, r6, #3
    2404:	e0866007 	add	r6, r6, r7
    2408:	eafffecc 	b	1f40 <_realloc_r+0x70>
    240c:	e1a01004 	mov	r1, r4
    2410:	e1a0000a 	mov	r0, r10
    2414:	ebfffe5e 	bl	1d94 <memmove>
    2418:	e1a0400a 	mov	r4, r10
    241c:	e5993004 	ldr	r3, [r9, #4]
    2420:	e1a0a009 	mov	r10, r9
    2424:	eafffec5 	b	1f40 <_realloc_r+0x70>
    2428:	e1a00006 	mov	r0, r6
    242c:	e1a01004 	mov	r1, r4
    2430:	e58d3004 	str	r3, [sp, #4]
    2434:	ebfffe56 	bl	1d94 <memmove>
    2438:	e59d3004 	ldr	r3, [sp, #4]
    243c:	eaffffe1 	b	23c8 <_realloc_r+0x4f8>
    2440:	000042f0 	.word	0x000042f0

00002444 <_sbrk_r>:
    2444:	e92d4038 	push	{r3, r4, r5, lr}
    2448:	e59f4030 	ldr	r4, [pc, #48]	; 2480 <_sbrk_r+0x3c>
    244c:	e3a03000 	mov	r3, #0
    2450:	e1a05000 	mov	r5, r0
    2454:	e1a00001 	mov	r0, r1
    2458:	e5843000 	str	r3, [r4]
    245c:	eb00055c 	bl	39d4 <_sbrk>
    2460:	e3700001 	cmn	r0, #1
    2464:	0a000001 	beq	2470 <_sbrk_r+0x2c>
    2468:	e8bd4038 	pop	{r3, r4, r5, lr}
    246c:	e12fff1e 	bx	lr
    2470:	e5943000 	ldr	r3, [r4]
    2474:	e3530000 	cmp	r3, #0
    2478:	15853000 	strne	r3, [r5]
    247c:	eafffff9 	b	2468 <_sbrk_r+0x24>
    2480:	00004758 	.word	0x00004758

00002484 <__swsetup_r>:
    2484:	e92d4038 	push	{r3, r4, r5, lr}
    2488:	e59f3128 	ldr	r3, [pc, #296]	; 25b8 <__swsetup_r+0x134>
    248c:	e5933000 	ldr	r3, [r3]
    2490:	e3530000 	cmp	r3, #0
    2494:	e1a05000 	mov	r5, r0
    2498:	e1a04001 	mov	r4, r1
    249c:	0a000002 	beq	24ac <__swsetup_r+0x28>
    24a0:	e5932038 	ldr	r2, [r3, #56]	; 0x38
    24a4:	e3520000 	cmp	r2, #0
    24a8:	0a00002e 	beq	2568 <__swsetup_r+0xe4>
    24ac:	e1d430bc 	ldrh	r3, [r4, #12]
    24b0:	e3130008 	tst	r3, #8
    24b4:	e1a02003 	mov	r2, r3
    24b8:	0a00000c 	beq	24f0 <__swsetup_r+0x6c>
    24bc:	e5942010 	ldr	r2, [r4, #16]
    24c0:	e3520000 	cmp	r2, #0
    24c4:	0a000012 	beq	2514 <__swsetup_r+0x90>
    24c8:	e2131001 	ands	r1, r3, #1
    24cc:	1a000019 	bne	2538 <__swsetup_r+0xb4>
    24d0:	e3130002 	tst	r3, #2
    24d4:	05941014 	ldreq	r1, [r4, #20]
    24d8:	e3520000 	cmp	r2, #0
    24dc:	e5841008 	str	r1, [r4, #8]
    24e0:	0a00001b 	beq	2554 <__swsetup_r+0xd0>
    24e4:	e3a00000 	mov	r0, #0
    24e8:	e8bd4038 	pop	{r3, r4, r5, lr}
    24ec:	e12fff1e 	bx	lr
    24f0:	e3130010 	tst	r3, #16
    24f4:	0a000019 	beq	2560 <__swsetup_r+0xdc>
    24f8:	e3120004 	tst	r2, #4
    24fc:	1a00001c 	bne	2574 <__swsetup_r+0xf0>
    2500:	e5942010 	ldr	r2, [r4, #16]
    2504:	e3833008 	orr	r3, r3, #8
    2508:	e3520000 	cmp	r2, #0
    250c:	e1c430bc 	strh	r3, [r4, #12]
    2510:	1affffec 	bne	24c8 <__swsetup_r+0x44>
    2514:	e2031d0a 	and	r1, r3, #640	; 0x280
    2518:	e3510c02 	cmp	r1, #512	; 0x200
    251c:	0affffe9 	beq	24c8 <__swsetup_r+0x44>
    2520:	e1a00005 	mov	r0, r5
    2524:	e1a01004 	mov	r1, r4
    2528:	eb00028e 	bl	2f68 <__smakebuf_r>
    252c:	e1d430bc 	ldrh	r3, [r4, #12]
    2530:	e5942010 	ldr	r2, [r4, #16]
    2534:	eaffffe3 	b	24c8 <__swsetup_r+0x44>
    2538:	e5943014 	ldr	r3, [r4, #20]
    253c:	e3a01000 	mov	r1, #0
    2540:	e2633000 	rsb	r3, r3, #0
    2544:	e3520000 	cmp	r2, #0
    2548:	e5841008 	str	r1, [r4, #8]
    254c:	e5843018 	str	r3, [r4, #24]
    2550:	1affffe3 	bne	24e4 <__swsetup_r+0x60>
    2554:	e1d430bc 	ldrh	r3, [r4, #12]
    2558:	e3130080 	tst	r3, #128	; 0x80
    255c:	0affffe0 	beq	24e4 <__swsetup_r+0x60>
    2560:	e3e00000 	mvn	r0, #0
    2564:	eaffffdf 	b	24e8 <__swsetup_r+0x64>
    2568:	e1a00003 	mov	r0, r3
    256c:	eb0000ec 	bl	2924 <__sinit>
    2570:	eaffffcd 	b	24ac <__swsetup_r+0x28>
    2574:	e5941030 	ldr	r1, [r4, #48]	; 0x30
    2578:	e3510000 	cmp	r1, #0
    257c:	0a000007 	beq	25a0 <__swsetup_r+0x11c>
    2580:	e2842040 	add	r2, r4, #64	; 0x40
    2584:	e1510002 	cmp	r1, r2
    2588:	0a000002 	beq	2598 <__swsetup_r+0x114>
    258c:	e1a00005 	mov	r0, r5
    2590:	eb000194 	bl	2be8 <_free_r>
    2594:	e1d430bc 	ldrh	r3, [r4, #12]
    2598:	e3a02000 	mov	r2, #0
    259c:	e5842030 	str	r2, [r4, #48]	; 0x30
    25a0:	e5942010 	ldr	r2, [r4, #16]
    25a4:	e3a01000 	mov	r1, #0
    25a8:	e3c33024 	bic	r3, r3, #36	; 0x24
    25ac:	e5841004 	str	r1, [r4, #4]
    25b0:	e5842000 	str	r2, [r4]
    25b4:	eaffffd2 	b	2504 <__swsetup_r+0x80>
    25b8:	00003ec0 	.word	0x00003ec0

000025bc <_fflush_r>:
    25bc:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    25c0:	e2507000 	subs	r7, r0, #0
    25c4:	e1a04001 	mov	r4, r1
    25c8:	0a000002 	beq	25d8 <_fflush_r+0x1c>
    25cc:	e5973038 	ldr	r3, [r7, #56]	; 0x38
    25d0:	e3530000 	cmp	r3, #0
    25d4:	0a000059 	beq	2740 <_fflush_r+0x184>
    25d8:	e1d420bc 	ldrh	r2, [r4, #12]
    25dc:	e3520000 	cmp	r2, #0
    25e0:	0a000023 	beq	2674 <_fflush_r+0xb8>
    25e4:	e3120008 	tst	r2, #8
    25e8:	0a000024 	beq	2680 <_fflush_r+0xc4>
    25ec:	e5946010 	ldr	r6, [r4, #16]
    25f0:	e3560000 	cmp	r6, #0
    25f4:	0a00001e 	beq	2674 <_fflush_r+0xb8>
    25f8:	e5945000 	ldr	r5, [r4]
    25fc:	e3120003 	tst	r2, #3
    2600:	05943014 	ldreq	r3, [r4, #20]
    2604:	e0665005 	rsb	r5, r6, r5
    2608:	13a03000 	movne	r3, #0
    260c:	e3550000 	cmp	r5, #0
    2610:	e5846000 	str	r6, [r4]
    2614:	e5843008 	str	r3, [r4, #8]
    2618:	ca000003 	bgt	262c <_fflush_r+0x70>
    261c:	ea000014 	b	2674 <_fflush_r+0xb8>
    2620:	e3550000 	cmp	r5, #0
    2624:	e0866000 	add	r6, r6, r0
    2628:	da000011 	ble	2674 <_fflush_r+0xb8>
    262c:	e1a03005 	mov	r3, r5
    2630:	e1a02006 	mov	r2, r6
    2634:	e1a00007 	mov	r0, r7
    2638:	e594101c 	ldr	r1, [r4, #28]
    263c:	e594c024 	ldr	r12, [r4, #36]	; 0x24
    2640:	e1a0e00f 	mov	lr, pc
    2644:	e12fff1c 	bx	r12
    2648:	e3500000 	cmp	r0, #0
    264c:	e0605005 	rsb	r5, r0, r5
    2650:	cafffff2 	bgt	2620 <_fflush_r+0x64>
    2654:	e1d430bc 	ldrh	r3, [r4, #12]
    2658:	e3833040 	orr	r3, r3, #64	; 0x40
    265c:	e1c430bc 	strh	r3, [r4, #12]
    2660:	e3e00000 	mvn	r0, #0
    2664:	ea000003 	b	2678 <_fflush_r+0xbc>
    2668:	e594103c 	ldr	r1, [r4, #60]	; 0x3c
    266c:	e3510000 	cmp	r1, #0
    2670:	ca000007 	bgt	2694 <_fflush_r+0xd8>
    2674:	e3a00000 	mov	r0, #0
    2678:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    267c:	e12fff1e 	bx	lr
    2680:	e5941004 	ldr	r1, [r4, #4]
    2684:	e3823b02 	orr	r3, r2, #2048	; 0x800
    2688:	e3510000 	cmp	r1, #0
    268c:	e1c430bc 	strh	r3, [r4, #12]
    2690:	dafffff4 	ble	2668 <_fflush_r+0xac>
    2694:	e594c028 	ldr	r12, [r4, #40]	; 0x28
    2698:	e35c0000 	cmp	r12, #0
    269c:	0afffff4 	beq	2674 <_fflush_r+0xb8>
    26a0:	e3a01000 	mov	r1, #0
    26a4:	e2126a01 	ands	r6, r2, #4096	; 0x1000
    26a8:	e5975000 	ldr	r5, [r7]
    26ac:	e5871000 	str	r1, [r7]
    26b0:	0a000024 	beq	2748 <_fflush_r+0x18c>
    26b4:	e5942050 	ldr	r2, [r4, #80]	; 0x50
    26b8:	e3130004 	tst	r3, #4
    26bc:	0a000005 	beq	26d8 <_fflush_r+0x11c>
    26c0:	e5941030 	ldr	r1, [r4, #48]	; 0x30
    26c4:	e5943004 	ldr	r3, [r4, #4]
    26c8:	e3510000 	cmp	r1, #0
    26cc:	e0632002 	rsb	r2, r3, r2
    26d0:	1594303c 	ldrne	r3, [r4, #60]	; 0x3c
    26d4:	10632002 	rsbne	r2, r3, r2
    26d8:	e1a00007 	mov	r0, r7
    26dc:	e594101c 	ldr	r1, [r4, #28]
    26e0:	e3a03000 	mov	r3, #0
    26e4:	e1a0e00f 	mov	lr, pc
    26e8:	e12fff1c 	bx	r12
    26ec:	e3700001 	cmn	r0, #1
    26f0:	0a000020 	beq	2778 <_fflush_r+0x1bc>
    26f4:	e1d430bc 	ldrh	r3, [r4, #12]
    26f8:	e5942010 	ldr	r2, [r4, #16]
    26fc:	e3c31b02 	bic	r1, r3, #2048	; 0x800
    2700:	e3130a01 	tst	r3, #4096	; 0x1000
    2704:	e3a03000 	mov	r3, #0
    2708:	e1c410bc 	strh	r1, [r4, #12]
    270c:	e884000c 	stm	r4, {r2, r3}
    2710:	1a000028 	bne	27b8 <_fflush_r+0x1fc>
    2714:	e5941030 	ldr	r1, [r4, #48]	; 0x30
    2718:	e3510000 	cmp	r1, #0
    271c:	e5875000 	str	r5, [r7]
    2720:	0affffd3 	beq	2674 <_fflush_r+0xb8>
    2724:	e2843040 	add	r3, r4, #64	; 0x40
    2728:	e1510003 	cmp	r1, r3
    272c:	11a00007 	movne	r0, r7
    2730:	1b00012c 	blne	2be8 <_free_r>
    2734:	e3a00000 	mov	r0, #0
    2738:	e5840030 	str	r0, [r4, #48]	; 0x30
    273c:	eaffffcd 	b	2678 <_fflush_r+0xbc>
    2740:	eb000077 	bl	2924 <__sinit>
    2744:	eaffffa3 	b	25d8 <_fflush_r+0x1c>
    2748:	e1a02006 	mov	r2, r6
    274c:	e1a00007 	mov	r0, r7
    2750:	e594101c 	ldr	r1, [r4, #28]
    2754:	e3a03001 	mov	r3, #1
    2758:	e1a0e00f 	mov	lr, pc
    275c:	e12fff1c 	bx	r12
    2760:	e3700001 	cmn	r0, #1
    2764:	e1a02000 	mov	r2, r0
    2768:	0a000014 	beq	27c0 <_fflush_r+0x204>
    276c:	e1d430bc 	ldrh	r3, [r4, #12]
    2770:	e594c028 	ldr	r12, [r4, #40]	; 0x28
    2774:	eaffffcf 	b	26b8 <_fflush_r+0xfc>
    2778:	e597c000 	ldr	r12, [r7]
    277c:	e35c001d 	cmp	r12, #29
    2780:	8affffb3 	bhi	2654 <_fflush_r+0x98>
    2784:	e59f3058 	ldr	r3, [pc, #88]	; 27e4 <_fflush_r+0x228>
    2788:	e1b03c13 	lsls	r3, r3, r12
    278c:	5affffb0 	bpl	2654 <_fflush_r+0x98>
    2790:	e1d430bc 	ldrh	r3, [r4, #12]
    2794:	e5942010 	ldr	r2, [r4, #16]
    2798:	e3c31b02 	bic	r1, r3, #2048	; 0x800
    279c:	e3130a01 	tst	r3, #4096	; 0x1000
    27a0:	e3a03000 	mov	r3, #0
    27a4:	e1c410bc 	strh	r1, [r4, #12]
    27a8:	e884000c 	stm	r4, {r2, r3}
    27ac:	0affffd8 	beq	2714 <_fflush_r+0x158>
    27b0:	e35c0000 	cmp	r12, #0
    27b4:	1affffd6 	bne	2714 <_fflush_r+0x158>
    27b8:	e5840050 	str	r0, [r4, #80]	; 0x50
    27bc:	eaffffd4 	b	2714 <_fflush_r+0x158>
    27c0:	e5973000 	ldr	r3, [r7]
    27c4:	e3530000 	cmp	r3, #0
    27c8:	0affffe7 	beq	276c <_fflush_r+0x1b0>
    27cc:	e353001d 	cmp	r3, #29
    27d0:	13530016 	cmpne	r3, #22
    27d4:	05875000 	streq	r5, [r7]
    27d8:	01a00006 	moveq	r0, r6
    27dc:	0affffa5 	beq	2678 <_fflush_r+0xbc>
    27e0:	eaffff9b 	b	2654 <_fflush_r+0x98>
    27e4:	80000204 	.word	0x80000204

000027e8 <fflush>:
    27e8:	e2501000 	subs	r1, r0, #0
    27ec:	e92d4008 	push	{r3, lr}
    27f0:	0a000003 	beq	2804 <fflush+0x1c>
    27f4:	e59f3020 	ldr	r3, [pc, #32]	; 281c <fflush+0x34>
    27f8:	e5930000 	ldr	r0, [r3]
    27fc:	e8bd4008 	pop	{r3, lr}
    2800:	eaffff6d 	b	25bc <_fflush_r>
    2804:	e59f3014 	ldr	r3, [pc, #20]	; 2820 <fflush+0x38>
    2808:	e59f1014 	ldr	r1, [pc, #20]	; 2824 <fflush+0x3c>
    280c:	e5930000 	ldr	r0, [r3]
    2810:	eb0001b1 	bl	2edc <_fwalk_reent>
    2814:	e8bd4008 	pop	{r3, lr}
    2818:	e12fff1e 	bx	lr
    281c:	00003ec0 	.word	0x00003ec0
    2820:	00003e54 	.word	0x00003e54
    2824:	000025bc 	.word	0x000025bc

00002828 <__fp_lock>:
    2828:	e3a00000 	mov	r0, #0
    282c:	e12fff1e 	bx	lr

00002830 <__fp_unlock>:
    2830:	e3a00000 	mov	r0, #0
    2834:	e12fff1e 	bx	lr

00002838 <_cleanup_r>:
    2838:	e92d4008 	push	{r3, lr}
    283c:	e59f1008 	ldr	r1, [pc, #8]	; 284c <_cleanup_r+0x14>
    2840:	eb000183 	bl	2e54 <_fwalk>
    2844:	e8bd4008 	pop	{r3, lr}
    2848:	e12fff1e 	bx	lr
    284c:	000035e8 	.word	0x000035e8

00002850 <std.isra.0>:
    2850:	e3a03000 	mov	r3, #0
    2854:	e92d4010 	push	{r4, lr}
    2858:	e1a04000 	mov	r4, r0
    285c:	e1c010bc 	strh	r1, [r0, #12]
    2860:	e1c020be 	strh	r2, [r0, #14]
    2864:	e5803000 	str	r3, [r0]
    2868:	e5803004 	str	r3, [r0, #4]
    286c:	e5803008 	str	r3, [r0, #8]
    2870:	e5803064 	str	r3, [r0, #100]	; 0x64
    2874:	e5803010 	str	r3, [r0, #16]
    2878:	e5803014 	str	r3, [r0, #20]
    287c:	e5803018 	str	r3, [r0, #24]
    2880:	e1a01003 	mov	r1, r3
    2884:	e280005c 	add	r0, r0, #92	; 0x5c
    2888:	e3a02008 	mov	r2, #8
    288c:	eb00020c 	bl	30c4 <memset>
    2890:	e59f3024 	ldr	r3, [pc, #36]	; 28bc <std.isra.0+0x6c>
    2894:	e5843020 	str	r3, [r4, #32]
    2898:	e59f3020 	ldr	r3, [pc, #32]	; 28c0 <std.isra.0+0x70>
    289c:	e5843024 	str	r3, [r4, #36]	; 0x24
    28a0:	e59f301c 	ldr	r3, [pc, #28]	; 28c4 <std.isra.0+0x74>
    28a4:	e5843028 	str	r3, [r4, #40]	; 0x28
    28a8:	e59f3018 	ldr	r3, [pc, #24]	; 28c8 <std.isra.0+0x78>
    28ac:	e584401c 	str	r4, [r4, #28]
    28b0:	e584302c 	str	r3, [r4, #44]	; 0x2c
    28b4:	e8bd4010 	pop	{r4, lr}
    28b8:	e12fff1e 	bx	lr
    28bc:	00003394 	.word	0x00003394
    28c0:	000033d0 	.word	0x000033d0
    28c4:	00003428 	.word	0x00003428
    28c8:	0000345c 	.word	0x0000345c

000028cc <__sfmoreglue>:
    28cc:	e92d4070 	push	{r4, r5, r6, lr}
    28d0:	e0816081 	add	r6, r1, r1, lsl #1
    28d4:	e0816106 	add	r6, r1, r6, lsl #2
    28d8:	e1a06186 	lsl	r6, r6, #3
    28dc:	e1a05001 	mov	r5, r1
    28e0:	e286100c 	add	r1, r6, #12
    28e4:	ebfffa99 	bl	1350 <_malloc_r>
    28e8:	e2504000 	subs	r4, r0, #0
    28ec:	0a000005 	beq	2908 <__sfmoreglue+0x3c>
    28f0:	e284000c 	add	r0, r4, #12
    28f4:	e3a01000 	mov	r1, #0
    28f8:	e8840022 	stm	r4, {r1, r5}
    28fc:	e5840008 	str	r0, [r4, #8]
    2900:	e1a02006 	mov	r2, r6
    2904:	eb0001ee 	bl	30c4 <memset>
    2908:	e1a00004 	mov	r0, r4
    290c:	e8bd4070 	pop	{r4, r5, r6, lr}
    2910:	e12fff1e 	bx	lr

00002914 <_cleanup>:
    2914:	e59f3004 	ldr	r3, [pc, #4]	; 2920 <_cleanup+0xc>
    2918:	e5930000 	ldr	r0, [r3]
    291c:	eaffffc5 	b	2838 <_cleanup_r>
    2920:	00003e54 	.word	0x00003e54

00002924 <__sinit>:
    2924:	e92d4038 	push	{r3, r4, r5, lr}
    2928:	e5903038 	ldr	r3, [r0, #56]	; 0x38
    292c:	e3530000 	cmp	r3, #0
    2930:	e1a04000 	mov	r4, r0
    2934:	0a000001 	beq	2940 <__sinit+0x1c>
    2938:	e8bd4038 	pop	{r3, r4, r5, lr}
    293c:	e12fff1e 	bx	lr
    2940:	e59fe050 	ldr	lr, [pc, #80]	; 2998 <__sinit+0x74>
    2944:	e280cfbb 	add	r12, r0, #748	; 0x2ec
    2948:	e3a05001 	mov	r5, #1
    294c:	e1a02003 	mov	r2, r3
    2950:	e58432e0 	str	r3, [r4, #736]	; 0x2e0
    2954:	e3a03003 	mov	r3, #3
    2958:	e584e03c 	str	lr, [r4, #60]	; 0x3c
    295c:	e58432e4 	str	r3, [r4, #740]	; 0x2e4
    2960:	e584c2e8 	str	r12, [r4, #744]	; 0x2e8
    2964:	e5900004 	ldr	r0, [r0, #4]
    2968:	e3a01004 	mov	r1, #4
    296c:	e5845038 	str	r5, [r4, #56]	; 0x38
    2970:	ebffffb6 	bl	2850 <std.isra.0>
    2974:	e5940008 	ldr	r0, [r4, #8]
    2978:	e1a02005 	mov	r2, r5
    297c:	e3a01009 	mov	r1, #9
    2980:	ebffffb2 	bl	2850 <std.isra.0>
    2984:	e594000c 	ldr	r0, [r4, #12]
    2988:	e3a01012 	mov	r1, #18
    298c:	e3a02002 	mov	r2, #2
    2990:	e8bd4038 	pop	{r3, r4, r5, lr}
    2994:	eaffffad 	b	2850 <std.isra.0>
    2998:	00002838 	.word	0x00002838

0000299c <__sfp>:
    299c:	e59f30ec 	ldr	r3, [pc, #236]	; 2a90 <__sfp+0xf4>
    29a0:	e92d4070 	push	{r4, r5, r6, lr}
    29a4:	e5935000 	ldr	r5, [r3]
    29a8:	e5953038 	ldr	r3, [r5, #56]	; 0x38
    29ac:	e3530000 	cmp	r3, #0
    29b0:	e1a06000 	mov	r6, r0
    29b4:	0a000028 	beq	2a5c <__sfp+0xc0>
    29b8:	e2855e2e 	add	r5, r5, #736	; 0x2e0
    29bc:	e5953004 	ldr	r3, [r5, #4]
    29c0:	e2533001 	subs	r3, r3, #1
    29c4:	e5954008 	ldr	r4, [r5, #8]
    29c8:	5a000004 	bpl	29e0 <__sfp+0x44>
    29cc:	ea00001d 	b	2a48 <__sfp+0xac>
    29d0:	e2433001 	sub	r3, r3, #1
    29d4:	e3730001 	cmn	r3, #1
    29d8:	e2844068 	add	r4, r4, #104	; 0x68
    29dc:	0a000019 	beq	2a48 <__sfp+0xac>
    29e0:	e1d420fc 	ldrsh	r2, [r4, #12]
    29e4:	e3520000 	cmp	r2, #0
    29e8:	1afffff8 	bne	29d0 <__sfp+0x34>
    29ec:	e3e03000 	mvn	r3, #0
    29f0:	e3a05000 	mov	r5, #0
    29f4:	e1c430be 	strh	r3, [r4, #14]
    29f8:	e3a03001 	mov	r3, #1
    29fc:	e1c430bc 	strh	r3, [r4, #12]
    2a00:	e5845064 	str	r5, [r4, #100]	; 0x64
    2a04:	e5845000 	str	r5, [r4]
    2a08:	e5845008 	str	r5, [r4, #8]
    2a0c:	e5845004 	str	r5, [r4, #4]
    2a10:	e5845010 	str	r5, [r4, #16]
    2a14:	e5845014 	str	r5, [r4, #20]
    2a18:	e5845018 	str	r5, [r4, #24]
    2a1c:	e284005c 	add	r0, r4, #92	; 0x5c
    2a20:	e1a01005 	mov	r1, r5
    2a24:	e3a02008 	mov	r2, #8
    2a28:	eb0001a5 	bl	30c4 <memset>
    2a2c:	e5845030 	str	r5, [r4, #48]	; 0x30
    2a30:	e5845034 	str	r5, [r4, #52]	; 0x34
    2a34:	e5845044 	str	r5, [r4, #68]	; 0x44
    2a38:	e5845048 	str	r5, [r4, #72]	; 0x48
    2a3c:	e1a00004 	mov	r0, r4
    2a40:	e8bd4070 	pop	{r4, r5, r6, lr}
    2a44:	e12fff1e 	bx	lr
    2a48:	e5950000 	ldr	r0, [r5]
    2a4c:	e3500000 	cmp	r0, #0
    2a50:	0a000004 	beq	2a68 <__sfp+0xcc>
    2a54:	e1a05000 	mov	r5, r0
    2a58:	eaffffd7 	b	29bc <__sfp+0x20>
    2a5c:	e1a00005 	mov	r0, r5
    2a60:	ebffffaf 	bl	2924 <__sinit>
    2a64:	eaffffd3 	b	29b8 <__sfp+0x1c>
    2a68:	e1a00006 	mov	r0, r6
    2a6c:	e3a01004 	mov	r1, #4
    2a70:	ebffff95 	bl	28cc <__sfmoreglue>
    2a74:	e3500000 	cmp	r0, #0
    2a78:	e5850000 	str	r0, [r5]
    2a7c:	1afffff4 	bne	2a54 <__sfp+0xb8>
    2a80:	e3a0300c 	mov	r3, #12
    2a84:	e5863000 	str	r3, [r6]
    2a88:	e1a04000 	mov	r4, r0
    2a8c:	eaffffea 	b	2a3c <__sfp+0xa0>
    2a90:	00003e54 	.word	0x00003e54

00002a94 <__sfp_lock_acquire>:
    2a94:	e12fff1e 	bx	lr

00002a98 <__sfp_lock_release>:
    2a98:	e12fff1e 	bx	lr

00002a9c <__sinit_lock_acquire>:
    2a9c:	e12fff1e 	bx	lr

00002aa0 <__sinit_lock_release>:
    2aa0:	e12fff1e 	bx	lr

00002aa4 <__fp_lock_all>:
    2aa4:	e92d4008 	push	{r3, lr}
    2aa8:	e59f3010 	ldr	r3, [pc, #16]	; 2ac0 <__fp_lock_all+0x1c>
    2aac:	e59f1010 	ldr	r1, [pc, #16]	; 2ac4 <__fp_lock_all+0x20>
    2ab0:	e5930000 	ldr	r0, [r3]
    2ab4:	eb0000e6 	bl	2e54 <_fwalk>
    2ab8:	e8bd4008 	pop	{r3, lr}
    2abc:	e12fff1e 	bx	lr
    2ac0:	00003ec0 	.word	0x00003ec0
    2ac4:	00002828 	.word	0x00002828

00002ac8 <__fp_unlock_all>:
    2ac8:	e92d4008 	push	{r3, lr}
    2acc:	e59f3010 	ldr	r3, [pc, #16]	; 2ae4 <__fp_unlock_all+0x1c>
    2ad0:	e59f1010 	ldr	r1, [pc, #16]	; 2ae8 <__fp_unlock_all+0x20>
    2ad4:	e5930000 	ldr	r0, [r3]
    2ad8:	eb0000dd 	bl	2e54 <_fwalk>
    2adc:	e8bd4008 	pop	{r3, lr}
    2ae0:	e12fff1e 	bx	lr
    2ae4:	00003ec0 	.word	0x00003ec0
    2ae8:	00002830 	.word	0x00002830

00002aec <_malloc_trim_r>:
    2aec:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    2af0:	e59f50e4 	ldr	r5, [pc, #228]	; 2bdc <_malloc_trim_r+0xf0>
    2af4:	e1a07001 	mov	r7, r1
    2af8:	e1a04000 	mov	r4, r0
    2afc:	ebfffcf1 	bl	1ec8 <__malloc_lock>
    2b00:	e5953008 	ldr	r3, [r5, #8]
    2b04:	e5936004 	ldr	r6, [r3, #4]
    2b08:	e3c66003 	bic	r6, r6, #3
    2b0c:	e2863efe 	add	r3, r6, #4064	; 0xfe0
    2b10:	e283300f 	add	r3, r3, #15
    2b14:	e0677003 	rsb	r7, r7, r3
    2b18:	e1a07627 	lsr	r7, r7, #12
    2b1c:	e2477001 	sub	r7, r7, #1
    2b20:	e1a07607 	lsl	r7, r7, #12
    2b24:	e3570a01 	cmp	r7, #4096	; 0x1000
    2b28:	ba000006 	blt	2b48 <_malloc_trim_r+0x5c>
    2b2c:	e1a00004 	mov	r0, r4
    2b30:	e3a01000 	mov	r1, #0
    2b34:	ebfffe42 	bl	2444 <_sbrk_r>
    2b38:	e5953008 	ldr	r3, [r5, #8]
    2b3c:	e0833006 	add	r3, r3, r6
    2b40:	e1500003 	cmp	r0, r3
    2b44:	0a000004 	beq	2b5c <_malloc_trim_r+0x70>
    2b48:	e1a00004 	mov	r0, r4
    2b4c:	ebfffcde 	bl	1ecc <__malloc_unlock>
    2b50:	e3a00000 	mov	r0, #0
    2b54:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    2b58:	e12fff1e 	bx	lr
    2b5c:	e1a00004 	mov	r0, r4
    2b60:	e2671000 	rsb	r1, r7, #0
    2b64:	ebfffe36 	bl	2444 <_sbrk_r>
    2b68:	e3700001 	cmn	r0, #1
    2b6c:	0a00000b 	beq	2ba0 <_malloc_trim_r+0xb4>
    2b70:	e59f3068 	ldr	r3, [pc, #104]	; 2be0 <_malloc_trim_r+0xf4>
    2b74:	e5952008 	ldr	r2, [r5, #8]
    2b78:	e5931000 	ldr	r1, [r3]
    2b7c:	e0676006 	rsb	r6, r7, r6
    2b80:	e3866001 	orr	r6, r6, #1
    2b84:	e0677001 	rsb	r7, r7, r1
    2b88:	e1a00004 	mov	r0, r4
    2b8c:	e5826004 	str	r6, [r2, #4]
    2b90:	e5837000 	str	r7, [r3]
    2b94:	ebfffccc 	bl	1ecc <__malloc_unlock>
    2b98:	e3a00001 	mov	r0, #1
    2b9c:	eaffffec 	b	2b54 <_malloc_trim_r+0x68>
    2ba0:	e1a00004 	mov	r0, r4
    2ba4:	e3a01000 	mov	r1, #0
    2ba8:	ebfffe25 	bl	2444 <_sbrk_r>
    2bac:	e5953008 	ldr	r3, [r5, #8]
    2bb0:	e0632000 	rsb	r2, r3, r0
    2bb4:	e352000f 	cmp	r2, #15
    2bb8:	daffffe2 	ble	2b48 <_malloc_trim_r+0x5c>
    2bbc:	e59f1020 	ldr	r1, [pc, #32]	; 2be4 <_malloc_trim_r+0xf8>
    2bc0:	e5911000 	ldr	r1, [r1]
    2bc4:	e0610000 	rsb	r0, r1, r0
    2bc8:	e59f1010 	ldr	r1, [pc, #16]	; 2be0 <_malloc_trim_r+0xf4>
    2bcc:	e3822001 	orr	r2, r2, #1
    2bd0:	e5810000 	str	r0, [r1]
    2bd4:	e5832004 	str	r2, [r3, #4]
    2bd8:	eaffffda 	b	2b48 <_malloc_trim_r+0x5c>
    2bdc:	000042f0 	.word	0x000042f0
    2be0:	00004728 	.word	0x00004728
    2be4:	000046f8 	.word	0x000046f8

00002be8 <_free_r>:
    2be8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    2bec:	e2514000 	subs	r4, r1, #0
    2bf0:	e1a06000 	mov	r6, r0
    2bf4:	0a000046 	beq	2d14 <_free_r+0x12c>
    2bf8:	ebfffcb2 	bl	1ec8 <__malloc_lock>
    2bfc:	e514e004 	ldr	lr, [r4, #-4]
    2c00:	e59f1238 	ldr	r1, [pc, #568]	; 2e40 <_free_r+0x258>
    2c04:	e244c008 	sub	r12, r4, #8
    2c08:	e3ce3001 	bic	r3, lr, #1
    2c0c:	e08c2003 	add	r2, r12, r3
    2c10:	e5910008 	ldr	r0, [r1, #8]
    2c14:	e5925004 	ldr	r5, [r2, #4]
    2c18:	e1500002 	cmp	r0, r2
    2c1c:	e3c55003 	bic	r5, r5, #3
    2c20:	0a00004a 	beq	2d50 <_free_r+0x168>
    2c24:	e21ee001 	ands	lr, lr, #1
    2c28:	e5825004 	str	r5, [r2, #4]
    2c2c:	13a0e000 	movne	lr, #0
    2c30:	1a000009 	bne	2c5c <_free_r+0x74>
    2c34:	e5144008 	ldr	r4, [r4, #-8]
    2c38:	e064c00c 	rsb	r12, r4, r12
    2c3c:	e59c0008 	ldr	r0, [r12, #8]
    2c40:	e2817008 	add	r7, r1, #8
    2c44:	e1500007 	cmp	r0, r7
    2c48:	e0833004 	add	r3, r3, r4
    2c4c:	159c400c 	ldrne	r4, [r12, #12]
    2c50:	1580400c 	strne	r4, [r0, #12]
    2c54:	15840008 	strne	r0, [r4, #8]
    2c58:	03a0e001 	moveq	lr, #1
    2c5c:	e0820005 	add	r0, r2, r5
    2c60:	e5900004 	ldr	r0, [r0, #4]
    2c64:	e3100001 	tst	r0, #1
    2c68:	1a000009 	bne	2c94 <_free_r+0xac>
    2c6c:	e35e0000 	cmp	lr, #0
    2c70:	e5920008 	ldr	r0, [r2, #8]
    2c74:	e0833005 	add	r3, r3, r5
    2c78:	1a000002 	bne	2c88 <_free_r+0xa0>
    2c7c:	e59f41c0 	ldr	r4, [pc, #448]	; 2e44 <_free_r+0x25c>
    2c80:	e1500004 	cmp	r0, r4
    2c84:	0a000047 	beq	2da8 <_free_r+0x1c0>
    2c88:	e592200c 	ldr	r2, [r2, #12]
    2c8c:	e580200c 	str	r2, [r0, #12]
    2c90:	e5820008 	str	r0, [r2, #8]
    2c94:	e3832001 	orr	r2, r3, #1
    2c98:	e35e0000 	cmp	lr, #0
    2c9c:	e58c2004 	str	r2, [r12, #4]
    2ca0:	e78c3003 	str	r3, [r12, r3]
    2ca4:	1a000018 	bne	2d0c <_free_r+0x124>
    2ca8:	e3530c02 	cmp	r3, #512	; 0x200
    2cac:	3a00001a 	bcc	2d1c <_free_r+0x134>
    2cb0:	e1a024a3 	lsr	r2, r3, #9
    2cb4:	e3520004 	cmp	r2, #4
    2cb8:	8a000042 	bhi	2dc8 <_free_r+0x1e0>
    2cbc:	e1a0e323 	lsr	lr, r3, #6
    2cc0:	e28ee038 	add	lr, lr, #56	; 0x38
    2cc4:	e1a0008e 	lsl	r0, lr, #1
    2cc8:	e0810100 	add	r0, r1, r0, lsl #2
    2ccc:	e5902008 	ldr	r2, [r0, #8]
    2cd0:	e1520000 	cmp	r2, r0
    2cd4:	e59f1164 	ldr	r1, [pc, #356]	; 2e40 <_free_r+0x258>
    2cd8:	0a000044 	beq	2df0 <_free_r+0x208>
    2cdc:	e5921004 	ldr	r1, [r2, #4]
    2ce0:	e3c11003 	bic	r1, r1, #3
    2ce4:	e1530001 	cmp	r3, r1
    2ce8:	2a000002 	bcs	2cf8 <_free_r+0x110>
    2cec:	e5922008 	ldr	r2, [r2, #8]
    2cf0:	e1500002 	cmp	r0, r2
    2cf4:	1afffff8 	bne	2cdc <_free_r+0xf4>
    2cf8:	e592300c 	ldr	r3, [r2, #12]
    2cfc:	e58c300c 	str	r3, [r12, #12]
    2d00:	e58c2008 	str	r2, [r12, #8]
    2d04:	e582c00c 	str	r12, [r2, #12]
    2d08:	e583c008 	str	r12, [r3, #8]
    2d0c:	e1a00006 	mov	r0, r6
    2d10:	ebfffc6d 	bl	1ecc <__malloc_unlock>
    2d14:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    2d18:	e12fff1e 	bx	lr
    2d1c:	e5912004 	ldr	r2, [r1, #4]
    2d20:	e1a031a3 	lsr	r3, r3, #3
    2d24:	e1a00143 	asr	r0, r3, #2
    2d28:	e3a0e001 	mov	lr, #1
    2d2c:	e182001e 	orr	r0, r2, lr, lsl r0
    2d30:	e0813183 	add	r3, r1, r3, lsl #3
    2d34:	e5932008 	ldr	r2, [r3, #8]
    2d38:	e58c300c 	str	r3, [r12, #12]
    2d3c:	e58c2008 	str	r2, [r12, #8]
    2d40:	e5810004 	str	r0, [r1, #4]
    2d44:	e583c008 	str	r12, [r3, #8]
    2d48:	e582c00c 	str	r12, [r2, #12]
    2d4c:	eaffffee 	b	2d0c <_free_r+0x124>
    2d50:	e31e0001 	tst	lr, #1
    2d54:	e0853003 	add	r3, r5, r3
    2d58:	1a000006 	bne	2d78 <_free_r+0x190>
    2d5c:	e5142008 	ldr	r2, [r4, #-8]
    2d60:	e062c00c 	rsb	r12, r2, r12
    2d64:	e59c000c 	ldr	r0, [r12, #12]
    2d68:	e59ce008 	ldr	lr, [r12, #8]
    2d6c:	e58e000c 	str	r0, [lr, #12]
    2d70:	e580e008 	str	lr, [r0, #8]
    2d74:	e0833002 	add	r3, r3, r2
    2d78:	e59f20c8 	ldr	r2, [pc, #200]	; 2e48 <_free_r+0x260>
    2d7c:	e5920000 	ldr	r0, [r2]
    2d80:	e3832001 	orr	r2, r3, #1
    2d84:	e1530000 	cmp	r3, r0
    2d88:	e58c2004 	str	r2, [r12, #4]
    2d8c:	e581c008 	str	r12, [r1, #8]
    2d90:	3affffdd 	bcc	2d0c <_free_r+0x124>
    2d94:	e59f30b0 	ldr	r3, [pc, #176]	; 2e4c <_free_r+0x264>
    2d98:	e1a00006 	mov	r0, r6
    2d9c:	e5931000 	ldr	r1, [r3]
    2da0:	ebffff51 	bl	2aec <_malloc_trim_r>
    2da4:	eaffffd8 	b	2d0c <_free_r+0x124>
    2da8:	e3832001 	orr	r2, r3, #1
    2dac:	e581c014 	str	r12, [r1, #20]
    2db0:	e581c010 	str	r12, [r1, #16]
    2db4:	e58c000c 	str	r0, [r12, #12]
    2db8:	e58c0008 	str	r0, [r12, #8]
    2dbc:	e58c2004 	str	r2, [r12, #4]
    2dc0:	e78c3003 	str	r3, [r12, r3]
    2dc4:	eaffffd0 	b	2d0c <_free_r+0x124>
    2dc8:	e3520014 	cmp	r2, #20
    2dcc:	9282e05b 	addls	lr, r2, #91	; 0x5b
    2dd0:	91a0008e 	lslls	r0, lr, #1
    2dd4:	9affffbb 	bls	2cc8 <_free_r+0xe0>
    2dd8:	e3520054 	cmp	r2, #84	; 0x54
    2ddc:	8a00000a 	bhi	2e0c <_free_r+0x224>
    2de0:	e1a0e623 	lsr	lr, r3, #12
    2de4:	e28ee06e 	add	lr, lr, #110	; 0x6e
    2de8:	e1a0008e 	lsl	r0, lr, #1
    2dec:	eaffffb5 	b	2cc8 <_free_r+0xe0>
    2df0:	e5913004 	ldr	r3, [r1, #4]
    2df4:	e1a0e14e 	asr	lr, lr, #2
    2df8:	e3a00001 	mov	r0, #1
    2dfc:	e1830e10 	orr	r0, r3, r0, lsl lr
    2e00:	e1a03002 	mov	r3, r2
    2e04:	e5810004 	str	r0, [r1, #4]
    2e08:	eaffffbb 	b	2cfc <_free_r+0x114>
    2e0c:	e3520f55 	cmp	r2, #340	; 0x154
    2e10:	91a0e7a3 	lsrls	lr, r3, #15
    2e14:	928ee077 	addls	lr, lr, #119	; 0x77
    2e18:	91a0008e 	lslls	r0, lr, #1
    2e1c:	9affffa9 	bls	2cc8 <_free_r+0xe0>
    2e20:	e59f0028 	ldr	r0, [pc, #40]	; 2e50 <_free_r+0x268>
    2e24:	e1520000 	cmp	r2, r0
    2e28:	91a0e923 	lsrls	lr, r3, #18
    2e2c:	928ee07c 	addls	lr, lr, #124	; 0x7c
    2e30:	91a0008e 	lslls	r0, lr, #1
    2e34:	83a000fc 	movhi	r0, #252	; 0xfc
    2e38:	83a0e07e 	movhi	lr, #126	; 0x7e
    2e3c:	eaffffa1 	b	2cc8 <_free_r+0xe0>
    2e40:	000042f0 	.word	0x000042f0
    2e44:	000042f8 	.word	0x000042f8
    2e48:	000046fc 	.word	0x000046fc
    2e4c:	00004724 	.word	0x00004724
    2e50:	00000554 	.word	0x00000554

00002e54 <_fwalk>:
    2e54:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    2e58:	e1a06000 	mov	r6, r0
    2e5c:	e1a08001 	mov	r8, r1
    2e60:	ebffff0b 	bl	2a94 <__sfp_lock_acquire>
    2e64:	e2966e2e 	adds	r6, r6, #736	; 0x2e0
    2e68:	0a000019 	beq	2ed4 <_fwalk+0x80>
    2e6c:	e3a07000 	mov	r7, #0
    2e70:	e5965004 	ldr	r5, [r6, #4]
    2e74:	e2555001 	subs	r5, r5, #1
    2e78:	e5964008 	ldr	r4, [r6, #8]
    2e7c:	4a00000d 	bmi	2eb8 <_fwalk+0x64>
    2e80:	e1d430fc 	ldrsh	r3, [r4, #12]
    2e84:	e3530000 	cmp	r3, #0
    2e88:	e2455001 	sub	r5, r5, #1
    2e8c:	0a000006 	beq	2eac <_fwalk+0x58>
    2e90:	e1d430fe 	ldrsh	r3, [r4, #14]
    2e94:	e3730001 	cmn	r3, #1
    2e98:	e1a00004 	mov	r0, r4
    2e9c:	0a000002 	beq	2eac <_fwalk+0x58>
    2ea0:	e1a0e00f 	mov	lr, pc
    2ea4:	e12fff18 	bx	r8
    2ea8:	e1877000 	orr	r7, r7, r0
    2eac:	e3750001 	cmn	r5, #1
    2eb0:	e2844068 	add	r4, r4, #104	; 0x68
    2eb4:	1afffff1 	bne	2e80 <_fwalk+0x2c>
    2eb8:	e5966000 	ldr	r6, [r6]
    2ebc:	e3560000 	cmp	r6, #0
    2ec0:	1affffea 	bne	2e70 <_fwalk+0x1c>
    2ec4:	ebfffef3 	bl	2a98 <__sfp_lock_release>
    2ec8:	e1a00007 	mov	r0, r7
    2ecc:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
    2ed0:	e12fff1e 	bx	lr
    2ed4:	e1a07006 	mov	r7, r6
    2ed8:	eafffff9 	b	2ec4 <_fwalk+0x70>

00002edc <_fwalk_reent>:
    2edc:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, r10, lr}
    2ee0:	e1a07000 	mov	r7, r0
    2ee4:	e1a08001 	mov	r8, r1
    2ee8:	ebfffee9 	bl	2a94 <__sfp_lock_acquire>
    2eec:	e2976e2e 	adds	r6, r7, #736	; 0x2e0
    2ef0:	0a00001a 	beq	2f60 <_fwalk_reent+0x84>
    2ef4:	e3a0a000 	mov	r10, #0
    2ef8:	e5965004 	ldr	r5, [r6, #4]
    2efc:	e2555001 	subs	r5, r5, #1
    2f00:	e5964008 	ldr	r4, [r6, #8]
    2f04:	4a00000e 	bmi	2f44 <_fwalk_reent+0x68>
    2f08:	e1d430fc 	ldrsh	r3, [r4, #12]
    2f0c:	e3530000 	cmp	r3, #0
    2f10:	e2455001 	sub	r5, r5, #1
    2f14:	0a000007 	beq	2f38 <_fwalk_reent+0x5c>
    2f18:	e1d430fe 	ldrsh	r3, [r4, #14]
    2f1c:	e3730001 	cmn	r3, #1
    2f20:	e1a01004 	mov	r1, r4
    2f24:	e1a00007 	mov	r0, r7
    2f28:	0a000002 	beq	2f38 <_fwalk_reent+0x5c>
    2f2c:	e1a0e00f 	mov	lr, pc
    2f30:	e12fff18 	bx	r8
    2f34:	e18aa000 	orr	r10, r10, r0
    2f38:	e3750001 	cmn	r5, #1
    2f3c:	e2844068 	add	r4, r4, #104	; 0x68
    2f40:	1afffff0 	bne	2f08 <_fwalk_reent+0x2c>
    2f44:	e5966000 	ldr	r6, [r6]
    2f48:	e3560000 	cmp	r6, #0
    2f4c:	1affffe9 	bne	2ef8 <_fwalk_reent+0x1c>
    2f50:	ebfffed0 	bl	2a98 <__sfp_lock_release>
    2f54:	e1a0000a 	mov	r0, r10
    2f58:	e8bd45f8 	pop	{r3, r4, r5, r6, r7, r8, r10, lr}
    2f5c:	e12fff1e 	bx	lr
    2f60:	e1a0a006 	mov	r10, r6
    2f64:	eafffff9 	b	2f50 <_fwalk_reent+0x74>

00002f68 <__smakebuf_r>:
    2f68:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    2f6c:	e1d130bc 	ldrh	r3, [r1, #12]
    2f70:	e3130002 	tst	r3, #2
    2f74:	e24dd044 	sub	sp, sp, #68	; 0x44
    2f78:	e1a04001 	mov	r4, r1
    2f7c:	e1a05000 	mov	r5, r0
    2f80:	1a00002b 	bne	3034 <__smakebuf_r+0xcc>
    2f84:	e1d110fe 	ldrsh	r1, [r1, #14]
    2f88:	e3510000 	cmp	r1, #0
    2f8c:	ba000010 	blt	2fd4 <__smakebuf_r+0x6c>
    2f90:	e28d2004 	add	r2, sp, #4
    2f94:	eb000198 	bl	35fc <_fstat_r>
    2f98:	e3500000 	cmp	r0, #0
    2f9c:	ba00000b 	blt	2fd0 <__smakebuf_r+0x68>
    2fa0:	e59d3008 	ldr	r3, [sp, #8]
    2fa4:	e2033a0f 	and	r3, r3, #61440	; 0xf000
    2fa8:	e2532a02 	subs	r2, r3, #8192	; 0x2000
    2fac:	e2727000 	rsbs	r7, r2, #0
    2fb0:	e0b77002 	adcs	r7, r7, r2
    2fb4:	e3530902 	cmp	r3, #32768	; 0x8000
    2fb8:	0a000023 	beq	304c <__smakebuf_r+0xe4>
    2fbc:	e1d430bc 	ldrh	r3, [r4, #12]
    2fc0:	e3833b02 	orr	r3, r3, #2048	; 0x800
    2fc4:	e1c430bc 	strh	r3, [r4, #12]
    2fc8:	e3a06b01 	mov	r6, #1024	; 0x400
    2fcc:	ea000006 	b	2fec <__smakebuf_r+0x84>
    2fd0:	e1d430bc 	ldrh	r3, [r4, #12]
    2fd4:	e3130080 	tst	r3, #128	; 0x80
    2fd8:	e3833b02 	orr	r3, r3, #2048	; 0x800
    2fdc:	e1c430bc 	strh	r3, [r4, #12]
    2fe0:	03a06b01 	moveq	r6, #1024	; 0x400
    2fe4:	13a06040 	movne	r6, #64	; 0x40
    2fe8:	e3a07000 	mov	r7, #0
    2fec:	e1a00005 	mov	r0, r5
    2ff0:	e1a01006 	mov	r1, r6
    2ff4:	ebfff8d5 	bl	1350 <_malloc_r>
    2ff8:	e3500000 	cmp	r0, #0
    2ffc:	e1d430bc 	ldrh	r3, [r4, #12]
    3000:	0a000023 	beq	3094 <__smakebuf_r+0x12c>
    3004:	e59f20b0 	ldr	r2, [pc, #176]	; 30bc <__smakebuf_r+0x154>
    3008:	e3833080 	orr	r3, r3, #128	; 0x80
    300c:	e3570000 	cmp	r7, #0
    3010:	e585203c 	str	r2, [r5, #60]	; 0x3c
    3014:	e1c430bc 	strh	r3, [r4, #12]
    3018:	e5840000 	str	r0, [r4]
    301c:	e5840010 	str	r0, [r4, #16]
    3020:	e5846014 	str	r6, [r4, #20]
    3024:	1a000012 	bne	3074 <__smakebuf_r+0x10c>
    3028:	e28dd044 	add	sp, sp, #68	; 0x44
    302c:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
    3030:	e12fff1e 	bx	lr
    3034:	e2813043 	add	r3, r1, #67	; 0x43
    3038:	e5813000 	str	r3, [r1]
    303c:	e5813010 	str	r3, [r1, #16]
    3040:	e3a03001 	mov	r3, #1
    3044:	e5813014 	str	r3, [r1, #20]
    3048:	eafffff6 	b	3028 <__smakebuf_r+0xc0>
    304c:	e5942028 	ldr	r2, [r4, #40]	; 0x28
    3050:	e59f3068 	ldr	r3, [pc, #104]	; 30c0 <__smakebuf_r+0x158>
    3054:	e1520003 	cmp	r2, r3
    3058:	1affffd7 	bne	2fbc <__smakebuf_r+0x54>
    305c:	e1d430bc 	ldrh	r3, [r4, #12]
    3060:	e3a06b01 	mov	r6, #1024	; 0x400
    3064:	e1833006 	orr	r3, r3, r6
    3068:	e1c430bc 	strh	r3, [r4, #12]
    306c:	e584604c 	str	r6, [r4, #76]	; 0x4c
    3070:	eaffffdd 	b	2fec <__smakebuf_r+0x84>
    3074:	e1a00005 	mov	r0, r5
    3078:	e1d410fe 	ldrsh	r1, [r4, #14]
    307c:	eb00016e 	bl	363c <_isatty_r>
    3080:	e3500000 	cmp	r0, #0
    3084:	11d430bc 	ldrhne	r3, [r4, #12]
    3088:	13833001 	orrne	r3, r3, #1
    308c:	11c430bc 	strhne	r3, [r4, #12]
    3090:	eaffffe4 	b	3028 <__smakebuf_r+0xc0>
    3094:	e3130c02 	tst	r3, #512	; 0x200
    3098:	1affffe2 	bne	3028 <__smakebuf_r+0xc0>
    309c:	e3833002 	orr	r3, r3, #2
    30a0:	e2842043 	add	r2, r4, #67	; 0x43
    30a4:	e1c430bc 	strh	r3, [r4, #12]
    30a8:	e3a03001 	mov	r3, #1
    30ac:	e5842000 	str	r2, [r4]
    30b0:	e5842010 	str	r2, [r4, #16]
    30b4:	e5843014 	str	r3, [r4, #20]
    30b8:	eaffffda 	b	3028 <__smakebuf_r+0xc0>
    30bc:	00002838 	.word	0x00002838
    30c0:	00003428 	.word	0x00003428

000030c4 <memset>:
    30c4:	e3520003 	cmp	r2, #3
    30c8:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    30cc:	e20110ff 	and	r1, r1, #255	; 0xff
    30d0:	8a000008 	bhi	30f8 <memset+0x34>
    30d4:	e3520000 	cmp	r2, #0
    30d8:	0a000004 	beq	30f0 <memset+0x2c>
    30dc:	e1a03000 	mov	r3, r0
    30e0:	e0822000 	add	r2, r2, r0
    30e4:	e4c31001 	strb	r1, [r3], #1
    30e8:	e1530002 	cmp	r3, r2
    30ec:	1afffffc 	bne	30e4 <memset+0x20>
    30f0:	e8bd0010 	ldmfd	sp!, {r4}
    30f4:	e12fff1e 	bx	lr
    30f8:	e3100003 	tst	r0, #3
    30fc:	e0802002 	add	r2, r0, r2
    3100:	0a000007 	beq	3124 <memset+0x60>
    3104:	e280c001 	add	r12, r0, #1
    3108:	e20c3003 	and	r3, r12, #3
    310c:	e3530000 	cmp	r3, #0
    3110:	e54c1001 	strb	r1, [r12, #-1]
    3114:	e1a0300c 	mov	r3, r12
    3118:	e28cc001 	add	r12, r12, #1
    311c:	1afffff9 	bne	3108 <memset+0x44>
    3120:	ea000000 	b	3128 <memset+0x64>
    3124:	e1a03000 	mov	r3, r0
    3128:	e0634002 	rsb	r4, r3, r2
    312c:	e081c401 	add	r12, r1, r1, lsl #8
    3130:	e354003f 	cmp	r4, #63	; 0x3f
    3134:	e08cc80c 	add	r12, r12, r12, lsl #16
    3138:	da00001a 	ble	31a8 <memset+0xe4>
    313c:	e583c000 	str	r12, [r3]
    3140:	e583c004 	str	r12, [r3, #4]
    3144:	e583c008 	str	r12, [r3, #8]
    3148:	e583c00c 	str	r12, [r3, #12]
    314c:	e583c010 	str	r12, [r3, #16]
    3150:	e583c014 	str	r12, [r3, #20]
    3154:	e583c018 	str	r12, [r3, #24]
    3158:	e583c01c 	str	r12, [r3, #28]
    315c:	e583c020 	str	r12, [r3, #32]
    3160:	e583c024 	str	r12, [r3, #36]	; 0x24
    3164:	e583c028 	str	r12, [r3, #40]	; 0x28
    3168:	e583c02c 	str	r12, [r3, #44]	; 0x2c
    316c:	e583c030 	str	r12, [r3, #48]	; 0x30
    3170:	e583c034 	str	r12, [r3, #52]	; 0x34
    3174:	e583c038 	str	r12, [r3, #56]	; 0x38
    3178:	e583c03c 	str	r12, [r3, #60]	; 0x3c
    317c:	e2833040 	add	r3, r3, #64	; 0x40
    3180:	e0634002 	rsb	r4, r3, r2
    3184:	e354003f 	cmp	r4, #63	; 0x3f
    3188:	caffffeb 	bgt	313c <memset+0x78>
    318c:	ea000005 	b	31a8 <memset+0xe4>
    3190:	e583c000 	str	r12, [r3]
    3194:	e583c004 	str	r12, [r3, #4]
    3198:	e583c008 	str	r12, [r3, #8]
    319c:	e583c00c 	str	r12, [r3, #12]
    31a0:	e2833010 	add	r3, r3, #16
    31a4:	e0634002 	rsb	r4, r3, r2
    31a8:	e354000f 	cmp	r4, #15
    31ac:	cafffff7 	bgt	3190 <memset+0xcc>
    31b0:	e3540003 	cmp	r4, #3
    31b4:	da000006 	ble	31d4 <memset+0x110>
    31b8:	e2834004 	add	r4, r3, #4
    31bc:	e0643002 	rsb	r3, r4, r2
    31c0:	e3530003 	cmp	r3, #3
    31c4:	e504c004 	str	r12, [r4, #-4]
    31c8:	e1a03004 	mov	r3, r4
    31cc:	e2844004 	add	r4, r4, #4
    31d0:	cafffff9 	bgt	31bc <memset+0xf8>
    31d4:	e1520003 	cmp	r2, r3
    31d8:	9affffc4 	bls	30f0 <memset+0x2c>
    31dc:	e2833001 	add	r3, r3, #1
    31e0:	e2822001 	add	r2, r2, #1
    31e4:	e5431001 	strb	r1, [r3, #-1]
    31e8:	e2833001 	add	r3, r3, #1
    31ec:	e1530002 	cmp	r3, r2
    31f0:	1afffffb 	bne	31e4 <memset+0x120>
    31f4:	eaffffbd 	b	30f0 <memset+0x2c>

000031f8 <cleanup_glue>:
    31f8:	e92d4038 	push	{r3, r4, r5, lr}
    31fc:	e1a04001 	mov	r4, r1
    3200:	e5911000 	ldr	r1, [r1]
    3204:	e3510000 	cmp	r1, #0
    3208:	e1a05000 	mov	r5, r0
    320c:	1bfffff9 	blne	31f8 <cleanup_glue>
    3210:	e1a00005 	mov	r0, r5
    3214:	e1a01004 	mov	r1, r4
    3218:	ebfffe72 	bl	2be8 <_free_r>
    321c:	e8bd4038 	pop	{r3, r4, r5, lr}
    3220:	e12fff1e 	bx	lr

00003224 <_reclaim_reent>:
    3224:	e59f30f0 	ldr	r3, [pc, #240]	; 331c <_reclaim_reent+0xf8>
    3228:	e5933000 	ldr	r3, [r3]
    322c:	e1500003 	cmp	r0, r3
    3230:	e92d4070 	push	{r4, r5, r6, lr}
    3234:	e1a05000 	mov	r5, r0
    3238:	0a00002b 	beq	32ec <_reclaim_reent+0xc8>
    323c:	e590204c 	ldr	r2, [r0, #76]	; 0x4c
    3240:	e3520000 	cmp	r2, #0
    3244:	0a000011 	beq	3290 <_reclaim_reent+0x6c>
    3248:	e3a03000 	mov	r3, #0
    324c:	e1a06003 	mov	r6, r3
    3250:	e7921103 	ldr	r1, [r2, r3, lsl #2]
    3254:	e3510000 	cmp	r1, #0
    3258:	0a000005 	beq	3274 <_reclaim_reent+0x50>
    325c:	e5914000 	ldr	r4, [r1]
    3260:	e1a00005 	mov	r0, r5
    3264:	ebfffe5f 	bl	2be8 <_free_r>
    3268:	e2541000 	subs	r1, r4, #0
    326c:	1afffffa 	bne	325c <_reclaim_reent+0x38>
    3270:	e595204c 	ldr	r2, [r5, #76]	; 0x4c
    3274:	e2866001 	add	r6, r6, #1
    3278:	e3560020 	cmp	r6, #32
    327c:	e1a03006 	mov	r3, r6
    3280:	1afffff2 	bne	3250 <_reclaim_reent+0x2c>
    3284:	e1a00005 	mov	r0, r5
    3288:	e1a01002 	mov	r1, r2
    328c:	ebfffe55 	bl	2be8 <_free_r>
    3290:	e5951040 	ldr	r1, [r5, #64]	; 0x40
    3294:	e3510000 	cmp	r1, #0
    3298:	11a00005 	movne	r0, r5
    329c:	1bfffe51 	blne	2be8 <_free_r>
    32a0:	e5951148 	ldr	r1, [r5, #328]	; 0x148
    32a4:	e3510000 	cmp	r1, #0
    32a8:	0a000008 	beq	32d0 <_reclaim_reent+0xac>
    32ac:	e2856f53 	add	r6, r5, #332	; 0x14c
    32b0:	e1510006 	cmp	r1, r6
    32b4:	0a000005 	beq	32d0 <_reclaim_reent+0xac>
    32b8:	e5914000 	ldr	r4, [r1]
    32bc:	e1a00005 	mov	r0, r5
    32c0:	ebfffe48 	bl	2be8 <_free_r>
    32c4:	e1560004 	cmp	r6, r4
    32c8:	e1a01004 	mov	r1, r4
    32cc:	1afffff9 	bne	32b8 <_reclaim_reent+0x94>
    32d0:	e5951054 	ldr	r1, [r5, #84]	; 0x54
    32d4:	e3510000 	cmp	r1, #0
    32d8:	11a00005 	movne	r0, r5
    32dc:	1bfffe41 	blne	2be8 <_free_r>
    32e0:	e5953038 	ldr	r3, [r5, #56]	; 0x38
    32e4:	e3530000 	cmp	r3, #0
    32e8:	1a000001 	bne	32f4 <_reclaim_reent+0xd0>
    32ec:	e8bd4070 	pop	{r4, r5, r6, lr}
    32f0:	e12fff1e 	bx	lr
    32f4:	e1a00005 	mov	r0, r5
    32f8:	e595c03c 	ldr	r12, [r5, #60]	; 0x3c
    32fc:	e1a0e00f 	mov	lr, pc
    3300:	e12fff1c 	bx	r12
    3304:	e59512e0 	ldr	r1, [r5, #736]	; 0x2e0
    3308:	e3510000 	cmp	r1, #0
    330c:	0afffff6 	beq	32ec <_reclaim_reent+0xc8>
    3310:	e1a00005 	mov	r0, r5
    3314:	e8bd4070 	pop	{r4, r5, r6, lr}
    3318:	eaffffb6 	b	31f8 <cleanup_glue>
    331c:	00003ec0 	.word	0x00003ec0

00003320 <_wrapup_reent>:
    3320:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    3324:	e2507000 	subs	r7, r0, #0
    3328:	059f3060 	ldreq	r3, [pc, #96]	; 3390 <_wrapup_reent+0x70>
    332c:	05937000 	ldreq	r7, [r3]
    3330:	e5976148 	ldr	r6, [r7, #328]	; 0x148
    3334:	e3560000 	cmp	r6, #0
    3338:	0a00000d 	beq	3374 <_wrapup_reent+0x54>
    333c:	e5965004 	ldr	r5, [r6, #4]
    3340:	e2554001 	subs	r4, r5, #1
    3344:	52855002 	addpl	r5, r5, #2
    3348:	50865105 	addpl	r5, r6, r5, lsl #2
    334c:	4a000005 	bmi	3368 <_wrapup_reent+0x48>
    3350:	e5353004 	ldr	r3, [r5, #-4]!
    3354:	e2444001 	sub	r4, r4, #1
    3358:	e1a0e00f 	mov	lr, pc
    335c:	e12fff13 	bx	r3
    3360:	e3740001 	cmn	r4, #1
    3364:	1afffff9 	bne	3350 <_wrapup_reent+0x30>
    3368:	e5966000 	ldr	r6, [r6]
    336c:	e3560000 	cmp	r6, #0
    3370:	1afffff1 	bne	333c <_wrapup_reent+0x1c>
    3374:	e597303c 	ldr	r3, [r7, #60]	; 0x3c
    3378:	e3530000 	cmp	r3, #0
    337c:	11a00007 	movne	r0, r7
    3380:	11a0e00f 	movne	lr, pc
    3384:	112fff13 	bxne	r3
    3388:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    338c:	e12fff1e 	bx	lr
    3390:	00003ec0 	.word	0x00003ec0

00003394 <__sread>:
    3394:	e92d4010 	push	{r4, lr}
    3398:	e1a04001 	mov	r4, r1
    339c:	e1d110fe 	ldrsh	r1, [r1, #14]
    33a0:	eb0000c5 	bl	36bc <_read_r>
    33a4:	e3500000 	cmp	r0, #0
    33a8:	a5943050 	ldrge	r3, [r4, #80]	; 0x50
    33ac:	b1d430bc 	ldrhlt	r3, [r4, #12]
    33b0:	a0833000 	addge	r3, r3, r0
    33b4:	b3c33a01 	biclt	r3, r3, #4096	; 0x1000
    33b8:	a5843050 	strge	r3, [r4, #80]	; 0x50
    33bc:	b1c430bc 	strhlt	r3, [r4, #12]
    33c0:	e8bd4010 	pop	{r4, lr}
    33c4:	e12fff1e 	bx	lr

000033c8 <__seofread>:
    33c8:	e3a00000 	mov	r0, #0
    33cc:	e12fff1e 	bx	lr

000033d0 <__swrite>:
    33d0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    33d4:	e1a04001 	mov	r4, r1
    33d8:	e1d110bc 	ldrh	r1, [r1, #12]
    33dc:	e3110c01 	tst	r1, #256	; 0x100
    33e0:	e1a07000 	mov	r7, r0
    33e4:	e1a06002 	mov	r6, r2
    33e8:	e1a05003 	mov	r5, r3
    33ec:	0a000004 	beq	3404 <__swrite+0x34>
    33f0:	e1d410fe 	ldrsh	r1, [r4, #14]
    33f4:	e3a02000 	mov	r2, #0
    33f8:	e3a03002 	mov	r3, #2
    33fc:	eb00009d 	bl	3678 <_lseek_r>
    3400:	e1d410bc 	ldrh	r1, [r4, #12]
    3404:	e3c11a01 	bic	r1, r1, #4096	; 0x1000
    3408:	e1c410bc 	strh	r1, [r4, #12]
    340c:	e1a00007 	mov	r0, r7
    3410:	e1d410fe 	ldrsh	r1, [r4, #14]
    3414:	e1a02006 	mov	r2, r6
    3418:	e1a03005 	mov	r3, r5
    341c:	eb000013 	bl	3470 <_write_r>
    3420:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    3424:	e12fff1e 	bx	lr

00003428 <__sseek>:
    3428:	e92d4010 	push	{r4, lr}
    342c:	e1a04001 	mov	r4, r1
    3430:	e1d110fe 	ldrsh	r1, [r1, #14]
    3434:	eb00008f 	bl	3678 <_lseek_r>
    3438:	e1d430bc 	ldrh	r3, [r4, #12]
    343c:	e3700001 	cmn	r0, #1
    3440:	03c33a01 	biceq	r3, r3, #4096	; 0x1000
    3444:	13833a01 	orrne	r3, r3, #4096	; 0x1000
    3448:	01c430bc 	strheq	r3, [r4, #12]
    344c:	11c430bc 	strhne	r3, [r4, #12]
    3450:	15840050 	strne	r0, [r4, #80]	; 0x50
    3454:	e8bd4010 	pop	{r4, lr}
    3458:	e12fff1e 	bx	lr

0000345c <__sclose>:
    345c:	e92d4008 	push	{r3, lr}
    3460:	e1d110fe 	ldrsh	r1, [r1, #14]
    3464:	eb000012 	bl	34b4 <_close_r>
    3468:	e8bd4008 	pop	{r3, lr}
    346c:	e12fff1e 	bx	lr

00003470 <_write_r>:
    3470:	e92d4038 	push	{r3, r4, r5, lr}
    3474:	e59f4034 	ldr	r4, [pc, #52]	; 34b0 <_write_r+0x40>
    3478:	e1a05000 	mov	r5, r0
    347c:	e1a00001 	mov	r0, r1
    3480:	e1a01002 	mov	r1, r2
    3484:	e1a02003 	mov	r2, r3
    3488:	e3a03000 	mov	r3, #0
    348c:	e5843000 	str	r3, [r4]
    3490:	eb000137 	bl	3974 <_write>
    3494:	e3700001 	cmn	r0, #1
    3498:	1a000002 	bne	34a8 <_write_r+0x38>
    349c:	e5943000 	ldr	r3, [r4]
    34a0:	e3530000 	cmp	r3, #0
    34a4:	15853000 	strne	r3, [r5]
    34a8:	e8bd4038 	pop	{r3, r4, r5, lr}
    34ac:	e12fff1e 	bx	lr
    34b0:	00004758 	.word	0x00004758

000034b4 <_close_r>:
    34b4:	e92d4038 	push	{r3, r4, r5, lr}
    34b8:	e59f402c 	ldr	r4, [pc, #44]	; 34ec <_close_r+0x38>
    34bc:	e3a03000 	mov	r3, #0
    34c0:	e1a05000 	mov	r5, r0
    34c4:	e1a00001 	mov	r0, r1
    34c8:	e5843000 	str	r3, [r4]
    34cc:	eb00009e 	bl	374c <_close>
    34d0:	e3700001 	cmn	r0, #1
    34d4:	1a000002 	bne	34e4 <_close_r+0x30>
    34d8:	e5943000 	ldr	r3, [r4]
    34dc:	e3530000 	cmp	r3, #0
    34e0:	15853000 	strne	r3, [r5]
    34e4:	e8bd4038 	pop	{r3, r4, r5, lr}
    34e8:	e12fff1e 	bx	lr
    34ec:	00004758 	.word	0x00004758

000034f0 <_fclose_r>:
    34f0:	e92d4070 	push	{r4, r5, r6, lr}
    34f4:	e2514000 	subs	r4, r1, #0
    34f8:	e1a05000 	mov	r5, r0
    34fc:	01a06004 	moveq	r6, r4
    3500:	0a00002b 	beq	35b4 <_fclose_r+0xc4>
    3504:	ebfffd62 	bl	2a94 <__sfp_lock_acquire>
    3508:	e3550000 	cmp	r5, #0
    350c:	0a000002 	beq	351c <_fclose_r+0x2c>
    3510:	e5953038 	ldr	r3, [r5, #56]	; 0x38
    3514:	e3530000 	cmp	r3, #0
    3518:	0a000028 	beq	35c0 <_fclose_r+0xd0>
    351c:	e1d460fc 	ldrsh	r6, [r4, #12]
    3520:	e3560000 	cmp	r6, #0
    3524:	0a000021 	beq	35b0 <_fclose_r+0xc0>
    3528:	e1a00005 	mov	r0, r5
    352c:	e1a01004 	mov	r1, r4
    3530:	ebfffc21 	bl	25bc <_fflush_r>
    3534:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
    3538:	e3530000 	cmp	r3, #0
    353c:	e1a06000 	mov	r6, r0
    3540:	0a000005 	beq	355c <_fclose_r+0x6c>
    3544:	e1a00005 	mov	r0, r5
    3548:	e594101c 	ldr	r1, [r4, #28]
    354c:	e1a0e00f 	mov	lr, pc
    3550:	e12fff13 	bx	r3
    3554:	e3500000 	cmp	r0, #0
    3558:	b3e06000 	mvnlt	r6, #0
    355c:	e1d430bc 	ldrh	r3, [r4, #12]
    3560:	e3130080 	tst	r3, #128	; 0x80
    3564:	1a00001b 	bne	35d8 <_fclose_r+0xe8>
    3568:	e5941030 	ldr	r1, [r4, #48]	; 0x30
    356c:	e3510000 	cmp	r1, #0
    3570:	0a000005 	beq	358c <_fclose_r+0x9c>
    3574:	e2843040 	add	r3, r4, #64	; 0x40
    3578:	e1510003 	cmp	r1, r3
    357c:	11a00005 	movne	r0, r5
    3580:	1bfffd98 	blne	2be8 <_free_r>
    3584:	e3a03000 	mov	r3, #0
    3588:	e5843030 	str	r3, [r4, #48]	; 0x30
    358c:	e5941044 	ldr	r1, [r4, #68]	; 0x44
    3590:	e3510000 	cmp	r1, #0
    3594:	0a000003 	beq	35a8 <_fclose_r+0xb8>
    3598:	e1a00005 	mov	r0, r5
    359c:	ebfffd91 	bl	2be8 <_free_r>
    35a0:	e3a03000 	mov	r3, #0
    35a4:	e5843044 	str	r3, [r4, #68]	; 0x44
    35a8:	e3a03000 	mov	r3, #0
    35ac:	e1c430bc 	strh	r3, [r4, #12]
    35b0:	ebfffd38 	bl	2a98 <__sfp_lock_release>
    35b4:	e1a00006 	mov	r0, r6
    35b8:	e8bd4070 	pop	{r4, r5, r6, lr}
    35bc:	e12fff1e 	bx	lr
    35c0:	e1a00005 	mov	r0, r5
    35c4:	ebfffcd6 	bl	2924 <__sinit>
    35c8:	e1d460fc 	ldrsh	r6, [r4, #12]
    35cc:	e3560000 	cmp	r6, #0
    35d0:	1affffd4 	bne	3528 <_fclose_r+0x38>
    35d4:	eafffff5 	b	35b0 <_fclose_r+0xc0>
    35d8:	e1a00005 	mov	r0, r5
    35dc:	e5941010 	ldr	r1, [r4, #16]
    35e0:	ebfffd80 	bl	2be8 <_free_r>
    35e4:	eaffffdf 	b	3568 <_fclose_r+0x78>

000035e8 <fclose>:
    35e8:	e59f3008 	ldr	r3, [pc, #8]	; 35f8 <fclose+0x10>
    35ec:	e1a01000 	mov	r1, r0
    35f0:	e5930000 	ldr	r0, [r3]
    35f4:	eaffffbd 	b	34f0 <_fclose_r>
    35f8:	00003ec0 	.word	0x00003ec0

000035fc <_fstat_r>:
    35fc:	e92d4038 	push	{r3, r4, r5, lr}
    3600:	e59f4030 	ldr	r4, [pc, #48]	; 3638 <_fstat_r+0x3c>
    3604:	e3a03000 	mov	r3, #0
    3608:	e1a05000 	mov	r5, r0
    360c:	e1a00001 	mov	r0, r1
    3610:	e1a01002 	mov	r1, r2
    3614:	e5843000 	str	r3, [r4]
    3618:	eb00006f 	bl	37dc <_fstat>
    361c:	e3700001 	cmn	r0, #1
    3620:	1a000002 	bne	3630 <_fstat_r+0x34>
    3624:	e5943000 	ldr	r3, [r4]
    3628:	e3530000 	cmp	r3, #0
    362c:	15853000 	strne	r3, [r5]
    3630:	e8bd4038 	pop	{r3, r4, r5, lr}
    3634:	e12fff1e 	bx	lr
    3638:	00004758 	.word	0x00004758

0000363c <_isatty_r>:
    363c:	e92d4038 	push	{r3, r4, r5, lr}
    3640:	e59f402c 	ldr	r4, [pc, #44]	; 3674 <_isatty_r+0x38>
    3644:	e3a03000 	mov	r3, #0
    3648:	e1a05000 	mov	r5, r0
    364c:	e1a00001 	mov	r0, r1
    3650:	e5843000 	str	r3, [r4]
    3654:	eb000078 	bl	383c <_isatty>
    3658:	e3700001 	cmn	r0, #1
    365c:	1a000002 	bne	366c <_isatty_r+0x30>
    3660:	e5943000 	ldr	r3, [r4]
    3664:	e3530000 	cmp	r3, #0
    3668:	15853000 	strne	r3, [r5]
    366c:	e8bd4038 	pop	{r3, r4, r5, lr}
    3670:	e12fff1e 	bx	lr
    3674:	00004758 	.word	0x00004758

00003678 <_lseek_r>:
    3678:	e92d4038 	push	{r3, r4, r5, lr}
    367c:	e59f4034 	ldr	r4, [pc, #52]	; 36b8 <_lseek_r+0x40>
    3680:	e1a05000 	mov	r5, r0
    3684:	e1a00001 	mov	r0, r1
    3688:	e1a01002 	mov	r1, r2
    368c:	e1a02003 	mov	r2, r3
    3690:	e3a03000 	mov	r3, #0
    3694:	e5843000 	str	r3, [r4]
    3698:	eb000071 	bl	3864 <_lseek>
    369c:	e3700001 	cmn	r0, #1
    36a0:	1a000002 	bne	36b0 <_lseek_r+0x38>
    36a4:	e5943000 	ldr	r3, [r4]
    36a8:	e3530000 	cmp	r3, #0
    36ac:	15853000 	strne	r3, [r5]
    36b0:	e8bd4038 	pop	{r3, r4, r5, lr}
    36b4:	e12fff1e 	bx	lr
    36b8:	00004758 	.word	0x00004758

000036bc <_read_r>:
    36bc:	e92d4038 	push	{r3, r4, r5, lr}
    36c0:	e59f4034 	ldr	r4, [pc, #52]	; 36fc <_read_r+0x40>
    36c4:	e1a05000 	mov	r5, r0
    36c8:	e1a00001 	mov	r0, r1
    36cc:	e1a01002 	mov	r1, r2
    36d0:	e1a02003 	mov	r2, r3
    36d4:	e3a03000 	mov	r3, #0
    36d8:	e5843000 	str	r3, [r4]
    36dc:	eb00008c 	bl	3914 <_read>
    36e0:	e3700001 	cmn	r0, #1
    36e4:	1a000002 	bne	36f4 <_read_r+0x38>
    36e8:	e5943000 	ldr	r3, [r4]
    36ec:	e3530000 	cmp	r3, #0
    36f0:	15853000 	strne	r3, [r5]
    36f4:	e8bd4038 	pop	{r3, r4, r5, lr}
    36f8:	e12fff1e 	bx	lr
    36fc:	00004758 	.word	0x00004758

00003700 <__cs3_premain>:
    3700:	e92d4008 	push	{r3, lr}
    3704:	eb0001a5 	bl	3da0 <__libc_init_array>
    3708:	e59f3030 	ldr	r3, [pc, #48]	; 3740 <__cs3_premain+0x40>
    370c:	e3530000 	cmp	r3, #0
    3710:	15930000 	ldrne	r0, [r3]
    3714:	01a00003 	moveq	r0, r3
    3718:	e59f3024 	ldr	r3, [pc, #36]	; 3744 <__cs3_premain+0x44>
    371c:	e3530000 	cmp	r3, #0
    3720:	15931000 	ldrne	r1, [r3]
    3724:	01a01003 	moveq	r1, r3
    3728:	e3a02000 	mov	r2, #0
    372c:	ebfff442 	bl	83c <main>
    3730:	e59f3010 	ldr	r3, [pc, #16]	; 3748 <__cs3_premain+0x48>
    3734:	e3530000 	cmp	r3, #0
    3738:	1bfff4ac 	blne	9f0 <exit>
    373c:	eafffffe 	b	373c <__cs3_premain+0x3c>
    3740:	00004800 	.word	0x00004800
    3744:	00004804 	.word	0x00004804
    3748:	000009f0 	.word	0x000009f0

0000374c <_close>:
    374c:	e92d4038 	push	{r3, r4, r5, lr}
    3750:	e1a05000 	mov	r5, r0
    3754:	eb0000e8 	bl	3afc <__cs3_openslot>
    3758:	e2504000 	subs	r4, r0, #0
    375c:	0a000016 	beq	37bc <_close+0x70>
    3760:	e2453001 	sub	r3, r5, #1
    3764:	e3530001 	cmp	r3, #1
    3768:	9a000008 	bls	3790 <_close+0x44>
    376c:	e3a00002 	mov	r0, #2
    3770:	e1a01004 	mov	r1, r4
    3774:	ef123456 	svc	0x00123456
    3778:	e3500000 	cmp	r0, #0
    377c:	03e03000 	mvneq	r3, #0
    3780:	05843000 	streq	r3, [r4]
    3784:	eb00010a 	bl	3bb4 <__cs3_checkerror>
    3788:	e8bd4038 	pop	{r3, r4, r5, lr}
    378c:	e12fff1e 	bx	lr
    3790:	e3550001 	cmp	r5, #1
    3794:	13e03007 	mvnne	r3, #7
    3798:	03a03008 	moveq	r3, #8
    379c:	e7943003 	ldr	r3, [r4, r3]
    37a0:	e5942000 	ldr	r2, [r4]
    37a4:	e1520003 	cmp	r2, r3
    37a8:	03e03000 	mvneq	r3, #0
    37ac:	05843000 	streq	r3, [r4]
    37b0:	03a00000 	moveq	r0, #0
    37b4:	1affffec 	bne	376c <_close+0x20>
    37b8:	eafffff2 	b	3788 <_close+0x3c>
    37bc:	e3e00000 	mvn	r0, #0
    37c0:	eafffff0 	b	3788 <_close+0x3c>

000037c4 <_exit>:
    37c4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    37c8:	e3a00018 	mov	r0, #24
    37cc:	e59f1004 	ldr	r1, [pc, #4]	; 37d8 <_exit+0x14>
    37d0:	ef123456 	svc	0x00123456
    37d4:	eafffffe 	b	37d4 <_exit+0x10>
    37d8:	00020026 	.word	0x00020026

000037dc <_fstat>:
    37dc:	e92d4038 	push	{r3, r4, r5, lr}
    37e0:	e1a04001 	mov	r4, r1
    37e4:	eb0000c4 	bl	3afc <__cs3_openslot>
    37e8:	e2505000 	subs	r5, r0, #0
    37ec:	0a000010 	beq	3834 <_fstat+0x58>
    37f0:	e1a00004 	mov	r0, r4
    37f4:	e3a01000 	mov	r1, #0
    37f8:	e3a0203c 	mov	r2, #60	; 0x3c
    37fc:	ebfffe30 	bl	30c4 <memset>
    3800:	e3a03a02 	mov	r3, #8192	; 0x2000
    3804:	e5843004 	str	r3, [r4, #4]
    3808:	e3a03b01 	mov	r3, #1024	; 0x400
    380c:	e584302c 	str	r3, [r4, #44]	; 0x2c
    3810:	e3a0000c 	mov	r0, #12
    3814:	e1a01005 	mov	r1, r5
    3818:	ef123456 	svc	0x00123456
    381c:	e3700001 	cmn	r0, #1
    3820:	15840010 	strne	r0, [r4, #16]
    3824:	13a00000 	movne	r0, #0
    3828:	eb0000e1 	bl	3bb4 <__cs3_checkerror>
    382c:	e8bd4038 	pop	{r3, r4, r5, lr}
    3830:	e12fff1e 	bx	lr
    3834:	e3e00000 	mvn	r0, #0
    3838:	eafffffb 	b	382c <_fstat+0x50>

0000383c <_isatty>:
    383c:	e92d4008 	push	{r3, lr}
    3840:	eb0000ad 	bl	3afc <__cs3_openslot>
    3844:	e2501000 	subs	r1, r0, #0
    3848:	01a00001 	moveq	r0, r1
    384c:	0a000002 	beq	385c <_isatty+0x20>
    3850:	e3a00009 	mov	r0, #9
    3854:	ef123456 	svc	0x00123456
    3858:	eb0000d5 	bl	3bb4 <__cs3_checkerror>
    385c:	e8bd4008 	pop	{r3, lr}
    3860:	e12fff1e 	bx	lr

00003864 <_lseek>:
    3864:	e92d4070 	push	{r4, r5, r6, lr}
    3868:	e24dd008 	sub	sp, sp, #8
    386c:	e1a04001 	mov	r4, r1
    3870:	e1a05002 	mov	r5, r2
    3874:	eb0000a0 	bl	3afc <__cs3_openslot>
    3878:	e2506000 	subs	r6, r0, #0
    387c:	0a000022 	beq	390c <_lseek+0xa8>
    3880:	e3550001 	cmp	r5, #1
    3884:	0a00001d 	beq	3900 <_lseek+0x9c>
    3888:	e3550002 	cmp	r5, #2
    388c:	0a000014 	beq	38e4 <_lseek+0x80>
    3890:	e3550000 	cmp	r5, #0
    3894:	1a00000d 	bne	38d0 <_lseek+0x6c>
    3898:	e5963000 	ldr	r3, [r6]
    389c:	e3540000 	cmp	r4, #0
    38a0:	e88d0018 	stm	sp, {r3, r4}
    38a4:	ba000009 	blt	38d0 <_lseek+0x6c>
    38a8:	e3a0000a 	mov	r0, #10
    38ac:	e1a0100d 	mov	r1, sp
    38b0:	ef123456 	svc	0x00123456
    38b4:	e3700001 	cmn	r0, #1
    38b8:	15864004 	strne	r4, [r6, #4]
    38bc:	11a00004 	movne	r0, r4
    38c0:	eb0000bb 	bl	3bb4 <__cs3_checkerror>
    38c4:	e28dd008 	add	sp, sp, #8
    38c8:	e8bd4070 	pop	{r4, r5, r6, lr}
    38cc:	e12fff1e 	bx	lr
    38d0:	eb00012e 	bl	3d90 <__errno>
    38d4:	e3a03016 	mov	r3, #22
    38d8:	e5803000 	str	r3, [r0]
    38dc:	e3e00000 	mvn	r0, #0
    38e0:	eafffff7 	b	38c4 <_lseek+0x60>
    38e4:	e3a0000c 	mov	r0, #12
    38e8:	e1a01006 	mov	r1, r6
    38ec:	ef123456 	svc	0x00123456
    38f0:	e3700001 	cmn	r0, #1
    38f4:	10844000 	addne	r4, r4, r0
    38f8:	1affffe6 	bne	3898 <_lseek+0x34>
    38fc:	eaffffef 	b	38c0 <_lseek+0x5c>
    3900:	e5963004 	ldr	r3, [r6, #4]
    3904:	e0844003 	add	r4, r4, r3
    3908:	eaffffe2 	b	3898 <_lseek+0x34>
    390c:	e3e00000 	mvn	r0, #0
    3910:	eaffffeb 	b	38c4 <_lseek+0x60>

00003914 <_read>:
    3914:	e92d4070 	push	{r4, r5, r6, lr}
    3918:	e24dd010 	sub	sp, sp, #16
    391c:	e1a06001 	mov	r6, r1
    3920:	e1a05002 	mov	r5, r2
    3924:	eb000074 	bl	3afc <__cs3_openslot>
    3928:	e2504000 	subs	r4, r0, #0
    392c:	0a00000e 	beq	396c <_read+0x58>
    3930:	e5943000 	ldr	r3, [r4]
    3934:	e98d0048 	stmib	sp, {r3, r6}
    3938:	e58d500c 	str	r5, [sp, #12]
    393c:	e3a00006 	mov	r0, #6
    3940:	e28d1004 	add	r1, sp, #4
    3944:	ef123456 	svc	0x00123456
    3948:	e3700001 	cmn	r0, #1
    394c:	15943004 	ldrne	r3, [r4, #4]
    3950:	10600005 	rsbne	r0, r0, r5
    3954:	10833000 	addne	r3, r3, r0
    3958:	15843004 	strne	r3, [r4, #4]
    395c:	eb000094 	bl	3bb4 <__cs3_checkerror>
    3960:	e28dd010 	add	sp, sp, #16
    3964:	e8bd4070 	pop	{r4, r5, r6, lr}
    3968:	e12fff1e 	bx	lr
    396c:	e3e00000 	mvn	r0, #0
    3970:	eafffffa 	b	3960 <_read+0x4c>

00003974 <_write>:
    3974:	e92d4070 	push	{r4, r5, r6, lr}
    3978:	e24dd010 	sub	sp, sp, #16
    397c:	e1a06001 	mov	r6, r1
    3980:	e1a05002 	mov	r5, r2
    3984:	eb00005c 	bl	3afc <__cs3_openslot>
    3988:	e2504000 	subs	r4, r0, #0
    398c:	0a00000e 	beq	39cc <_write+0x58>
    3990:	e5943000 	ldr	r3, [r4]
    3994:	e98d0048 	stmib	sp, {r3, r6}
    3998:	e58d500c 	str	r5, [sp, #12]
    399c:	e3a00005 	mov	r0, #5
    39a0:	e28d1004 	add	r1, sp, #4
    39a4:	ef123456 	svc	0x00123456
    39a8:	e3700001 	cmn	r0, #1
    39ac:	15943004 	ldrne	r3, [r4, #4]
    39b0:	10600005 	rsbne	r0, r0, r5
    39b4:	10833000 	addne	r3, r3, r0
    39b8:	15843004 	strne	r3, [r4, #4]
    39bc:	eb00007c 	bl	3bb4 <__cs3_checkerror>
    39c0:	e28dd010 	add	sp, sp, #16
    39c4:	e8bd4070 	pop	{r4, r5, r6, lr}
    39c8:	e12fff1e 	bx	lr
    39cc:	e3e00000 	mvn	r0, #0
    39d0:	eafffffa 	b	39c0 <_write+0x4c>

000039d4 <_sbrk>:
    39d4:	e92d4008 	push	{r3, lr}
    39d8:	e59f305c 	ldr	r3, [pc, #92]	; 3a3c <_sbrk+0x68>
    39dc:	e59f105c 	ldr	r1, [pc, #92]	; 3a40 <_sbrk+0x6c>
    39e0:	e5932000 	ldr	r2, [r3]
    39e4:	e5913000 	ldr	r3, [r1]
    39e8:	e3520000 	cmp	r2, #0
    39ec:	e0830000 	add	r0, r3, r0
    39f0:	0a000002 	beq	3a00 <_sbrk+0x2c>
    39f4:	e0602002 	rsb	r2, r0, r2
    39f8:	e3520000 	cmp	r2, #0
    39fc:	ba000009 	blt	3a28 <_sbrk+0x54>
    3a00:	e04d2003 	sub	r2, sp, r3
    3a04:	e3520000 	cmp	r2, #0
    3a08:	ba000002 	blt	3a18 <_sbrk+0x44>
    3a0c:	e04d2000 	sub	r2, sp, r0
    3a10:	e35200ff 	cmp	r2, #255	; 0xff
    3a14:	da000003 	ble	3a28 <_sbrk+0x54>
    3a18:	e5810000 	str	r0, [r1]
    3a1c:	e1a00003 	mov	r0, r3
    3a20:	e8bd4008 	pop	{r3, lr}
    3a24:	e12fff1e 	bx	lr
    3a28:	eb0000d8 	bl	3d90 <__errno>
    3a2c:	e3a0300c 	mov	r3, #12
    3a30:	e5803000 	str	r3, [r0]
    3a34:	e3e03000 	mvn	r3, #0
    3a38:	eafffff7 	b	3a1c <_sbrk+0x48>
    3a3c:	00004700 	.word	0x00004700
    3a40:	00004704 	.word	0x00004704

00003a44 <initialize_monitor_handles.part.0>:
    3a44:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    3a48:	e59f50a4 	ldr	r5, [pc, #164]	; 3af4 <initialize_monitor_handles.part.0+0xb0>
    3a4c:	e24dd014 	sub	sp, sp, #20
    3a50:	e3a03000 	mov	r3, #0
    3a54:	e3e02000 	mvn	r2, #0
    3a58:	e7852003 	str	r2, [r5, r3]
    3a5c:	e2833008 	add	r3, r3, #8
    3a60:	e35300a0 	cmp	r3, #160	; 0xa0
    3a64:	e59f4088 	ldr	r4, [pc, #136]	; 3af4 <initialize_monitor_handles.part.0+0xb0>
    3a68:	1afffffa 	bne	3a58 <initialize_monitor_handles.part.0+0x14>
    3a6c:	e59f7084 	ldr	r7, [pc, #132]	; 3af8 <initialize_monitor_handles.part.0+0xb4>
    3a70:	e3a06003 	mov	r6, #3
    3a74:	e3a03000 	mov	r3, #0
    3a78:	e58d7004 	str	r7, [sp, #4]
    3a7c:	e58d600c 	str	r6, [sp, #12]
    3a80:	e58d3008 	str	r3, [sp, #8]
    3a84:	e3a00001 	mov	r0, #1
    3a88:	e28d1004 	add	r1, sp, #4
    3a8c:	ef123456 	svc	0x00123456
    3a90:	e3a03004 	mov	r3, #4
    3a94:	e5840000 	str	r0, [r4]
    3a98:	e58d7004 	str	r7, [sp, #4]
    3a9c:	e58d600c 	str	r6, [sp, #12]
    3aa0:	e58d3008 	str	r3, [sp, #8]
    3aa4:	e3a00001 	mov	r0, #1
    3aa8:	e08d1003 	add	r1, sp, r3
    3aac:	ef123456 	svc	0x00123456
    3ab0:	e3a03008 	mov	r3, #8
    3ab4:	e5840008 	str	r0, [r4, #8]
    3ab8:	e58d7004 	str	r7, [sp, #4]
    3abc:	e58d600c 	str	r6, [sp, #12]
    3ac0:	e58d3008 	str	r3, [sp, #8]
    3ac4:	e3a00001 	mov	r0, #1
    3ac8:	e28d1004 	add	r1, sp, #4
    3acc:	ef123456 	svc	0x00123456
    3ad0:	e3700001 	cmn	r0, #1
    3ad4:	05943008 	ldreq	r3, [r4, #8]
    3ad8:	e5840010 	str	r0, [r4, #16]
    3adc:	05843010 	streq	r3, [r4, #16]
    3ae0:	e3a03001 	mov	r3, #1
    3ae4:	e58530a0 	str	r3, [r5, #160]	; 0xa0
    3ae8:	e28dd014 	add	sp, sp, #20
    3aec:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
    3af0:	e12fff1e 	bx	lr
    3af4:	0000475c 	.word	0x0000475c
    3af8:	00003e60 	.word	0x00003e60

00003afc <__cs3_openslot>:
    3afc:	e92d4038 	push	{r3, r4, r5, lr}
    3b00:	e59f5044 	ldr	r5, [pc, #68]	; 3b4c <__cs3_openslot+0x50>
    3b04:	e59530a0 	ldr	r3, [r5, #160]	; 0xa0
    3b08:	e3530000 	cmp	r3, #0
    3b0c:	e1a04000 	mov	r4, r0
    3b10:	0bffffcb 	bleq	3a44 <initialize_monitor_handles.part.0>
    3b14:	e3540013 	cmp	r4, #19
    3b18:	8a000006 	bhi	3b38 <__cs3_openslot+0x3c>
    3b1c:	e7953184 	ldr	r3, [r5, r4, lsl #3]
    3b20:	e3730001 	cmn	r3, #1
    3b24:	159f0020 	ldrne	r0, [pc, #32]	; 3b4c <__cs3_openslot+0x50>
    3b28:	10800184 	addne	r0, r0, r4, lsl #3
    3b2c:	0a000001 	beq	3b38 <__cs3_openslot+0x3c>
    3b30:	e8bd4038 	pop	{r3, r4, r5, lr}
    3b34:	e12fff1e 	bx	lr
    3b38:	eb000094 	bl	3d90 <__errno>
    3b3c:	e3a03009 	mov	r3, #9
    3b40:	e5803000 	str	r3, [r0]
    3b44:	e3a00000 	mov	r0, #0
    3b48:	eafffff8 	b	3b30 <__cs3_openslot+0x34>
    3b4c:	0000475c 	.word	0x0000475c

00003b50 <__cs3_newslot>:
    3b50:	e92d4038 	push	{r3, r4, r5, lr}
    3b54:	e59f4054 	ldr	r4, [pc, #84]	; 3bb0 <__cs3_newslot+0x60>
    3b58:	e59430a0 	ldr	r3, [r4, #160]	; 0xa0
    3b5c:	e3530000 	cmp	r3, #0
    3b60:	e1a05000 	mov	r5, r0
    3b64:	0bffffb6 	bleq	3a44 <initialize_monitor_handles.part.0>
    3b68:	e3a03000 	mov	r3, #0
    3b6c:	e7942183 	ldr	r2, [r4, r3, lsl #3]
    3b70:	e3720001 	cmn	r2, #1
    3b74:	e1a02183 	lsl	r2, r3, #3
    3b78:	0a000008 	beq	3ba0 <__cs3_newslot+0x50>
    3b7c:	e2833001 	add	r3, r3, #1
    3b80:	e3530014 	cmp	r3, #20
    3b84:	1afffff8 	bne	3b6c <__cs3_newslot+0x1c>
    3b88:	eb000080 	bl	3d90 <__errno>
    3b8c:	e3a03018 	mov	r3, #24
    3b90:	e5803000 	str	r3, [r0]
    3b94:	e3a00000 	mov	r0, #0
    3b98:	e8bd4038 	pop	{r3, r4, r5, lr}
    3b9c:	e12fff1e 	bx	lr
    3ba0:	e59f0008 	ldr	r0, [pc, #8]	; 3bb0 <__cs3_newslot+0x60>
    3ba4:	e5853000 	str	r3, [r5]
    3ba8:	e0800002 	add	r0, r0, r2
    3bac:	eafffff9 	b	3b98 <__cs3_newslot+0x48>
    3bb0:	0000475c 	.word	0x0000475c

00003bb4 <__cs3_checkerror>:
    3bb4:	e3700001 	cmn	r0, #1
    3bb8:	e92d4038 	push	{r3, r4, r5, lr}
    3bbc:	e1a04000 	mov	r4, r0
    3bc0:	0a000002 	beq	3bd0 <__cs3_checkerror+0x1c>
    3bc4:	e1a00004 	mov	r0, r4
    3bc8:	e8bd4038 	pop	{r3, r4, r5, lr}
    3bcc:	e12fff1e 	bx	lr
    3bd0:	eb00006e 	bl	3d90 <__errno>
    3bd4:	e3a01000 	mov	r1, #0
    3bd8:	e1a05000 	mov	r5, r0
    3bdc:	e3a00013 	mov	r0, #19
    3be0:	ef123456 	svc	0x00123456
    3be4:	e5850000 	str	r0, [r5]
    3be8:	eafffff5 	b	3bc4 <__cs3_checkerror+0x10>

00003bec <initialize_argv>:
    3bec:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, r10, lr}
    3bf0:	e3a00c01 	mov	r0, #256	; 0x100
    3bf4:	e24dd008 	sub	sp, sp, #8
    3bf8:	ebffff75 	bl	39d4 <_sbrk>
    3bfc:	e3700001 	cmn	r0, #1
    3c00:	e1a07000 	mov	r7, r0
    3c04:	0a000039 	beq	3cf0 <initialize_argv+0x104>
    3c08:	e3a05000 	mov	r5, #0
    3c0c:	e3a03c01 	mov	r3, #256	; 0x100
    3c10:	e5c05000 	strb	r5, [r0]
    3c14:	e1a0100d 	mov	r1, sp
    3c18:	e3a00015 	mov	r0, #21
    3c1c:	e58d7000 	str	r7, [sp]
    3c20:	e58d3004 	str	r3, [sp, #4]
    3c24:	ef123456 	svc	0x00123456
    3c28:	e59f8140 	ldr	r8, [pc, #320]	; 3d70 <initialize_argv+0x184>
    3c2c:	e1a00005 	mov	r0, r5
    3c30:	e3a09001 	mov	r9, #1
    3c34:	e1a0a005 	mov	r10, r5
    3c38:	e588a0a4 	str	r10, [r8, #164]	; 0xa4
    3c3c:	e1a0c007 	mov	r12, r7
    3c40:	e1a04007 	mov	r4, r7
    3c44:	e3a06000 	mov	r6, #0
    3c48:	e5d41000 	ldrb	r1, [r4]
    3c4c:	e3510000 	cmp	r1, #0
    3c50:	0a00001d 	beq	3ccc <initialize_argv+0xe0>
    3c54:	e3560000 	cmp	r6, #0
    3c58:	e2842001 	add	r2, r4, #1
    3c5c:	1a000006 	bne	3c7c <initialize_argv+0x90>
    3c60:	e3500000 	cmp	r0, #0
    3c64:	159830a4 	ldrne	r3, [r8, #164]	; 0xa4
    3c68:	1780c103 	strne	r12, [r0, r3, lsl #2]
    3c6c:	e59830a4 	ldr	r3, [r8, #164]	; 0xa4
    3c70:	e2833001 	add	r3, r3, #1
    3c74:	e58830a4 	str	r3, [r8, #164]	; 0xa4
    3c78:	e3a06001 	mov	r6, #1
    3c7c:	e3510020 	cmp	r1, #32
    3c80:	0a000022 	beq	3d10 <initialize_argv+0x124>
    3c84:	e3510022 	cmp	r1, #34	; 0x22
    3c88:	13510027 	cmpne	r1, #39	; 0x27
    3c8c:	1a00001a 	bne	3cfc <initialize_argv+0x110>
    3c90:	e5d43001 	ldrb	r3, [r4, #1]
    3c94:	e3530000 	cmp	r3, #0
    3c98:	0a000032 	beq	3d68 <initialize_argv+0x17c>
    3c9c:	e1510003 	cmp	r1, r3
    3ca0:	0a00001f 	beq	3d24 <initialize_argv+0x138>
    3ca4:	e2842002 	add	r2, r4, #2
    3ca8:	ea000001 	b	3cb4 <initialize_argv+0xc8>
    3cac:	e1510003 	cmp	r1, r3
    3cb0:	0a00001c 	beq	3d28 <initialize_argv+0x13c>
    3cb4:	e3500000 	cmp	r0, #0
    3cb8:	14cc3001 	strbne	r3, [r12], #1
    3cbc:	e1a04002 	mov	r4, r2
    3cc0:	e4d23001 	ldrb	r3, [r2], #1
    3cc4:	e3530000 	cmp	r3, #0
    3cc8:	1afffff7 	bne	3cac <initialize_argv+0xc0>
    3ccc:	e3590001 	cmp	r9, #1
    3cd0:	0a000016 	beq	3d30 <initialize_argv+0x144>
    3cd4:	e3590002 	cmp	r9, #2
    3cd8:	1a000020 	bne	3d60 <initialize_argv+0x174>
    3cdc:	e3a03000 	mov	r3, #0
    3ce0:	e5cc3000 	strb	r3, [r12]
    3ce4:	e59820a4 	ldr	r2, [r8, #164]	; 0xa4
    3ce8:	e7803102 	str	r3, [r0, r2, lsl #2]
    3cec:	e58800a8 	str	r0, [r8, #168]	; 0xa8
    3cf0:	e28dd008 	add	sp, sp, #8
    3cf4:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, r10, lr}
    3cf8:	e12fff1e 	bx	lr
    3cfc:	e3500000 	cmp	r0, #0
    3d00:	01a04002 	moveq	r4, r2
    3d04:	14cc1001 	strbne	r1, [r12], #1
    3d08:	11a04002 	movne	r4, r2
    3d0c:	eaffffcd 	b	3c48 <initialize_argv+0x5c>
    3d10:	e3500000 	cmp	r0, #0
    3d14:	14cca001 	strbne	r10, [r12], #1
    3d18:	e1a04002 	mov	r4, r2
    3d1c:	e3a06000 	mov	r6, #0
    3d20:	eaffffc8 	b	3c48 <initialize_argv+0x5c>
    3d24:	e1a04002 	mov	r4, r2
    3d28:	e2844001 	add	r4, r4, #1
    3d2c:	eaffffc5 	b	3c48 <initialize_argv+0x5c>
    3d30:	e0670004 	rsb	r0, r7, r4
    3d34:	e2800010 	add	r0, r0, #16
    3d38:	e3c0000f 	bic	r0, r0, #15
    3d3c:	e2400c01 	sub	r0, r0, #256	; 0x100
    3d40:	ebffff23 	bl	39d4 <_sbrk>
    3d44:	e59800a4 	ldr	r0, [r8, #164]	; 0xa4
    3d48:	e2800004 	add	r0, r0, #4
    3d4c:	e3c00003 	bic	r0, r0, #3
    3d50:	e1a00100 	lsl	r0, r0, #2
    3d54:	ebffff1e 	bl	39d4 <_sbrk>
    3d58:	e3700001 	cmn	r0, #1
    3d5c:	0affffe3 	beq	3cf0 <initialize_argv+0x104>
    3d60:	e2899001 	add	r9, r9, #1
    3d64:	eaffffb3 	b	3c38 <initialize_argv+0x4c>
    3d68:	e1a04002 	mov	r4, r2
    3d6c:	eaffffd6 	b	3ccc <initialize_argv+0xe0>
    3d70:	0000475c 	.word	0x0000475c

00003d74 <__cs3_isr_interrupt>:
    3d74:	eafffffe 	b	3d74 <__cs3_isr_interrupt>

00003d78 <__cs3_isr_undef>:
    3d78:	eafffffe 	b	3d78 <__cs3_isr_undef>

00003d7c <__cs3_isr_swi>:
    3d7c:	eafffffe 	b	3d7c <__cs3_isr_swi>

00003d80 <__cs3_isr_pabort>:
    3d80:	eafffffe 	b	3d80 <__cs3_isr_pabort>

00003d84 <__cs3_isr_dabort>:
    3d84:	eafffffe 	b	3d84 <__cs3_isr_dabort>

00003d88 <__cs3_isr_irq>:
    3d88:	eafffffe 	b	3d88 <__cs3_isr_irq>

00003d8c <__cs3_isr_fiq>:
    3d8c:	eafffffe 	b	3d8c <__cs3_isr_fiq>

00003d90 <__errno>:
    3d90:	e59f3004 	ldr	r3, [pc, #4]	; 3d9c <__errno+0xc>
    3d94:	e5930000 	ldr	r0, [r3]
    3d98:	e12fff1e 	bx	lr
    3d9c:	00003ec0 	.word	0x00003ec0

00003da0 <__libc_init_array>:
    3da0:	e92d4070 	push	{r4, r5, r6, lr}
    3da4:	e59f506c 	ldr	r5, [pc, #108]	; 3e18 <__libc_init_array+0x78>
    3da8:	e59f606c 	ldr	r6, [pc, #108]	; 3e1c <__libc_init_array+0x7c>
    3dac:	e0656006 	rsb	r6, r5, r6
    3db0:	e1b06146 	asrs	r6, r6, #2
    3db4:	12455004 	subne	r5, r5, #4
    3db8:	13a04000 	movne	r4, #0
    3dbc:	0a000005 	beq	3dd8 <__libc_init_array+0x38>
    3dc0:	e5b53004 	ldr	r3, [r5, #4]!
    3dc4:	e2844001 	add	r4, r4, #1
    3dc8:	e1a0e00f 	mov	lr, pc
    3dcc:	e12fff13 	bx	r3
    3dd0:	e1560004 	cmp	r6, r4
    3dd4:	1afffff9 	bne	3dc0 <__libc_init_array+0x20>
    3dd8:	e59f5040 	ldr	r5, [pc, #64]	; 3e20 <__libc_init_array+0x80>
    3ddc:	e59f6040 	ldr	r6, [pc, #64]	; 3e24 <__libc_init_array+0x84>
    3de0:	e0656006 	rsb	r6, r5, r6
    3de4:	eb00001e 	bl	3e64 <_init>
    3de8:	e1b06146 	asrs	r6, r6, #2
    3dec:	12455004 	subne	r5, r5, #4
    3df0:	13a04000 	movne	r4, #0
    3df4:	0a000005 	beq	3e10 <__libc_init_array+0x70>
    3df8:	e5b53004 	ldr	r3, [r5, #4]!
    3dfc:	e2844001 	add	r4, r4, #1
    3e00:	e1a0e00f 	mov	lr, pc
    3e04:	e12fff13 	bx	r3
    3e08:	e1560004 	cmp	r6, r4
    3e0c:	1afffff9 	bne	3df8 <__libc_init_array+0x58>
    3e10:	e8bd4070 	pop	{r4, r5, r6, lr}
    3e14:	e12fff1e 	bx	lr
    3e18:	00003e7c 	.word	0x00003e7c
    3e1c:	00003e7c 	.word	0x00003e7c
    3e20:	00003e7c 	.word	0x00003e7c
    3e24:	00003e88 	.word	0x00003e88

Disassembly of section .rodata:

00003e2c <_global_impure_ptr-0x28>:
    3e2c:	61656c43 	.word	0x61656c43
    3e30:	676e6972 	.word	0x676e6972
    3e34:	72637320 	.word	0x72637320
    3e38:	2e6e6565 	.word	0x2e6e6565
    3e3c:	0000002e 	.word	0x0000002e
    3e40:	72617453 	.word	0x72617453
    3e44:	676e6974 	.word	0x676e6974
    3e48:	002e2e2e 	.word	0x002e2e2e
    3e4c:	656e6f44 	.word	0x656e6f44
    3e50:	002e2e2e 	.word	0x002e2e2e

00003e54 <_global_impure_ptr>:
    3e54:	00003ec8 00000043 0000000a 0074743a     .>..C.......:tt.

00003e64 <_init>:
    3e64:	e1a0c00d 	mov	r12, sp
    3e68:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
    3e6c:	e24cb004 	sub	r11, r12, #4
    3e70:	e24bd028 	sub	sp, r11, #40	; 0x28
    3e74:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
    3e78:	e12fff1e 	bx	lr

00003e7c <__init_array_start>:
    3e7c:	00000e24 	.word	0x00000e24

00003e80 <__frame_dummy_init_array_entry>:
    3e80:	00000208 00003bec                       .....;..

00003e88 <__libc_fini>:
    3e88:	e1a0c00d 	mov	r12, sp
    3e8c:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
    3e90:	e24cb004 	sub	r11, r12, #4
    3e94:	e24bd028 	sub	sp, r11, #40	; 0x28
    3e98:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
    3e9c:	e12fff1e 	bx	lr

00003ea0 <__fini_array_start>:
    3ea0:	000001c4 	.word	0x000001c4

00003ea4 <__cs3_regions>:
	...
    3eb0:	00004708 	.word	0x00004708
    3eb4:	00000100 	.word	0x00000100
